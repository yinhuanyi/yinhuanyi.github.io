(window.webpackJsonp=window.webpackJsonp||[]).push([[92],{1791:function(a,s,n){a.exports=n.p+"assets/img/2021-01-093.31.48.2df4435e.png"},1792:function(a,s,n){a.exports=n.p+"assets/img/kafkabcb475427699481c91df9f60d6691593.d6636187.jpeg"},1793:function(a,s,n){a.exports=n.p+"assets/img/2021-01-093.43.34.e844fe58.png"},1794:function(a,s,n){a.exports=n.p+"assets/img/2021-01-093.45.27.1772b196.png"},1795:function(a,s,n){a.exports=n.p+"assets/img/2021-02-064.31.58.66ec7593.png"},1796:function(a,s,n){a.exports=n.p+"assets/img/2021-02-065.51.37.e34a0f30.png"},2702:function(a,s,n){"use strict";n.r(s);var e=n(9),t=Object(e.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h3",{attrs:{id:"一-kafka架构原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-kafka架构原理"}},[a._v("#")]),a._v(" 一：Kafka架构原理")]),a._v(" "),e("ul",[e("li",[a._v("Kafka体系结构逻辑图，一般而言再打的数据，一个topic有5个到10个的partition就足够了")])]),a._v(" "),e("p",[e("img",{attrs:{src:n(1791),alt:"Alt text"}})]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("1：Broker：kafka的一个节点\n2：Leader：在kafka集群中负责消息的接收和发送，当consumer消费不同的partition的时候，Leader可能是broker1、broker2、或者broker3，所以这里的Leader指的是partition的leader\n3：Follower：复制Leader的数据，这里的Follower指的是partition的Follower\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("ul",[e("li",[a._v("Kafka数据流转物理图")]),a._v(" "),e("li",[a._v("https://www.sohu.com/a/354089551_315839")]),a._v(" "),e("li",[a._v("https://zhuanlan.zhihu.com/p/76073581/")])]),a._v(" "),e("p",[e("img",{attrs:{src:n(1792),alt:"Alt text"}})]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("上图有三条数据流转线：\n\t第一条是蓝色的线：生产者将Message写入到Topic中，Topic0有两个Partition，Topic1有一个Partition，这2个topic都是3个replication，你会发现写入数据都是写入到红色的Partition中，红色的Partition是每个broker中的Partition Leader，数据都是在Partition Leader上被生产和消费的。一个broker中可以有多个Partition Leader\n\n\t第二条绿色的线：绿色的线显示Partition的Replica复制过程，每个Partition都有两个Replica副本\n\n\t第三条红色的线：红色的线显示消费者Group中的consumer消费Message数据\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("h3",{attrs:{id:"一-基本概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-基本概念"}},[a._v("#")]),a._v(" （一）基本概念")]),a._v(" "),e("ul",[e("li",[a._v("概念")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("1：Kafka它是一个分布式消息系统，由linkedin使用scala编写，用作LinkedIn的活动流（Activity Stream）和运营数据处理管道（Pipeline）的基础。具有高水平扩展和高吞吐量,Kafka支持仿AMQP协议，Kafka增加和减少服务器都会在Zookeeper节点上触发相应的事件kafka系统会捕获这些事件，进行新一轮的负载均衡，客户端也会捕获这些事件来进行新一轮的处理\n\n2：Kafka相当于是一个broker集群，发送到每个topic的消息保存到一个或多个partition中，为了保证kafka消息的高可用，每个partition可以设置Replica的系数，但是为了节约系统资源，默认情况下Replica的系数为1\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("ul",[e("li",[a._v("Kafka中的逻辑角色功能")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("1：Consumer Group：consumer接受数据的时候是按照consumer group来接受的，kafka确保每个partition只能同一个group中的同一个consumer消费，如果想要重复消费，那么需要其他的组来消费。对于一个topic，会广播给订阅此Topic的不同group。在group中，同时只有一个consumer可以消费消息\n\n2：Broker：broker是kafka集群中的一个kafka节点, kafka没有单节点概念，也就是说一个节点的kafka也是集群模式\n\n3：Topic：Kafka消息的类别，对数据进行切分和隔离\n\n4：Partition：Kafka下数据存储的基本单元，一个Topic数据，会被分散存储到多个Partition中，多个Partition是并列无序的，每一个Partition内部的Message是有序的。\n问题：为什么从Kafka消费的日志数据，永远是时序的呢？\n答案：虽然多个Partition是并列无序的，但是消费者消费的时候，只要有一个partition有数据，就\n\n5：Replication：副本，同一个Partition可能会有多个Replica，多个Replica之间数据是一样的\n\n6：Replication Leader：一个Partition的多个Replica中，需要一个Replication Leader负责与Producer和Consumer交互\n\n7：Replica Manager：负责管理当前broker中的partition和replica\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br")])]),e("ul",[e("li",[a._v("Partition的相关概念")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("1：每一个Topic被切分为多个Partitions\n\n2：消费者数目必须少于或等于Partition的数目，如果消费者数目多余partition数目，那么会造成多个消费者消费同一个partition，出现数据消费错误\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("ul",[e("li",[a._v("Kafka中一个消息包含的字段")])]),a._v(" "),e("p",[e("img",{attrs:{src:n(1793),alt:"Alt text"}})]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("1：Offset：偏移量，记录Partition消息的偏移位置\n\n2：Length：消息长度\n\n3：CRC32：校验字段，用于校验字段的完整性\n\n4：Magic：判断是否是Kafka的消息\n\n5：attribute：消息属性，是枚举值\n\n6：Timestamp：消费的时间戳\n\n7：Key Length：key的长度\n\n8：Key：key的数据\n\n9：Value Length：value的长度\n\n10：Value：值的长度\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br")])]),e("ul",[e("li",[a._v("Replication的相关概念")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("1：当集群中有broker挂掉的情况，系统可以主动使用Replica提供服务\n\n2：系统默认设置每一个Topic的replication系数为1，可以在创建Topic时进行调整，系数越大，数据冗余越好，但是资源消耗越大\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("ul",[e("li",[a._v("Kafka的数据流模型")])]),a._v(" "),e("p",[e("img",{attrs:{src:n(1794),alt:"Alt text"}})]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("Kafka有5种API，负责控制Kafka中数据流的流转模型\n①：Producer API\n②：Consumer API\n③：Streams API\n④：Connectors API\n⑤：Admin API\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br")])]),e("ul",[e("li",[a._v("Zookeeper在Kafka集群中所扮演的角色")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("1：Broker的信息存储在Zookeeper上\n\n2：Topic和Partition的发布存储在了Zookeeper上\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("h3",{attrs:{id:"二-安装与部署"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-安装与部署"}},[a._v("#")]),a._v(" 二：安装与部署")]),a._v(" "),e("h3",{attrs:{id:"一-下载二进制软件包"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-下载二进制软件包"}},[a._v("#")]),a._v(" （一）下载二进制软件包")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("Kafka从官网下载kafka_2.12-2.7.0.tgz (asc, sha512)二进制包")])]),a._v(" "),e("li",[e("p",[a._v("Zookeeper从官网下载apache-zookeeper-3.6.2-bin.tar.gz  二进制包")])]),a._v(" "),e("li",[e("p",[a._v("在当前主机上安装java jdk-8")])])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("yum -y install java-1.8.0*\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[a._v("配置JAVA_HOME")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("vi /etc/profile.d/java.sh\nexport JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.282.b08-1.el7_9.x86_64\nexport PATH=$PATH:$JAVA_HOME/bin\n\n. /etc/profile.d/java.sh\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("ul",[e("li",[a._v("解压二进制包")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("tar xf apache-zookeeper-3.6.2-bin.tar.gz\ntar xf kafka_2.12-2.7.0.tgz\n\nmv apache-zookeeper-3.6.2-bin /usr/local/zookeeper\nmv kafka_2.12-2.7.0 /usr/local/kafka\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("h3",{attrs:{id:"二-zookeeper配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-zookeeper配置"}},[a._v("#")]),a._v(" （二）Zookeeper配置")]),a._v(" "),e("ul",[e("li",[a._v("修改主配置文件")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("cd /usr/local/zookeeper/conf\ncp zoo_sample.cfg zoo.cfg\n\n# 单台zoomkeeper配置如下\nvi zoo.cfg\ntickTime=2000\ninitLimit=10\nsyncLimit=5\n# 数据存储目录，一般不会放在tmp目录下\ndataDir=/tmp/zookeeper\nclientPort=2181\n\n# 3台集群zoomkeeper配置如下\ntickTime=2000\ninitLimit=10\nsyncLimit=5\ndataDir=/tmp/zookeeper\nclientPort=2181\nserver.1=0.0.0.0:2888:3888\nserver.2=192.168.100.180:2888:3888\nserver.3=192.168.100.200:2888:3888\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br")])]),e("ul",[e("li",[a._v("如果是集群，还需要在/tmp/zookeeper目录下，创建一个myid文件，内容如下")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("# 如果是第一台，那么就是1，如果是第二台，那么就是2，依次类推\n1\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("ul",[e("li",[a._v("启动zookeeper")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("cd /usr/local/zookeeper/bin\n./zkServer.sh start\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h3",{attrs:{id:"三-kafka配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-kafka配置"}},[a._v("#")]),a._v(" （三）Kafka配置")]),a._v(" "),e("ul",[e("li",[a._v("单台修改配置")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("cd /usr/local/kafka/config\n# 修改server配置\nvi server.properties\nbroker.id=0\n# 设置监听的IP\nlisteners=PLAINTEXT://192.168.100.231:9092\n# 广播地址\nadvertised.listeners=PLAINTEXT://192.168.100.231:9092\nnum.network.threads=3\nnum.io.threads=8\nsocket.send.buffer.bytes=102400\nsocket.receive.buffer.bytes=102400\nsocket.request.max.bytes=104857600\n# 数据目录不会放在/tmp目录下\nlog.dirs=/tmp/kafka-logs\nnum.partitions=1\nnum.recovery.threads.per.data.dir=1\noffsets.topic.replication.factor=1\ntransaction.state.log.replication.factor=1\ntransaction.state.log.min.isr=1\nlog.retention.hours=168\nlog.segment.bytes=1073741824\nlog.retention.check.interval.ms=300000\nzookeeper.connect=localhost:2181\nzookeeper.connection.timeout.ms=18000\ngroup.initial.rebalance.delay.ms=0\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br"),e("span",{staticClass:"line-number"},[a._v("26")]),e("br")])]),e("ul",[e("li",[a._v("集群修改配置")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("# id可以从1开始，当然也可以是从0开始\nbroker.id=1\n# 监听的IP地址\nlisteners=PLAINTEXT://192.168.100.246:9092\n# 这个是borker进行网络处理的线程数，为CPU和核心数\nnum.network.threads=32\n# 这个是borker进行I/O处理的线程数\nnum.io.threads=20\n# 发送缓冲区buffer大小，数据不是一下子就发送的，先回存储到缓冲区了到达一定的大小后在发送，能提高性能\nsocket.send.buffer.bytes=102400\n# kafka接收缓冲区大小，当数据到达一定大小后在序列化到磁盘\nsocket.receive.buffer.bytes=102400\n# 这个参数是向kafka请求消息或向kafka发送消息最大字节数，这个值不能超过java的堆栈大小\nsocket.request.max.bytes=104857600\n# 数据目录不会放在/tmp目录下\nlog.dirs=/tmp/kafka-logs\n# 默认一个topic的partitions为5\nnum.partitions=5\n# 日志恢复的线程数\nnum.recovery.threads.per.data.dir=1\n# 默认的partition副本集为2\ndefault.replication.factor=2\n# kafka内部默认的__consumer_offsets，partition默认是50，这是是设置其partition的副本数\noffsets.topic.replication.factor=2\n# 事务主题的复制因子\ntransaction.state.log.replication.factor=1\n# 覆盖事务主题的min.insync.replicas配置\ntransaction.state.log.min.isr=1\n# 默认消息的最大持久化时间，168小时，7天，可以改为1天\nlog.retention.hours=168\n# 这个参数是：因为kafka的消息是以追加的形式落地到文件，当超过这个值的时候，kafka会新起一个文件\nlog.segment.bytes=1073741824\n# 每隔300000毫秒去检查上面配置的log失效时间（log.retention.hours=168 ），到目录查看是否有过期的消息如果有，删除\nlog.retention.check.interval.ms=300000\n# zookeeper地址\nzookeeper.connect=192.168.100.246:2181,192.168.100.180:2181,192.168.100.200:2181\n# zookeeper连接超时\nzookeeper.connection.timeout.ms=18000\n# 在实际使用时，假设你预估你的所有consumer组成员加入需要在10s内完成，那么你就可以设置该参数=10000\n# 如果你发现消费者无法加入集群，那么可以修改这个值\ngroup.initial.rebalance.delay.ms=10000\n# 是否允许删除topic\ndelete.topic.enable=true\n# 消费者定期向broker发送心跳，如果超过这个时间，消费组就会将其消费的partition分配给其他消费者\ngroup.min.session.timeout.ms=6000\ngroup.max.session.timeout.ms=3000000\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br"),e("span",{staticClass:"line-number"},[a._v("26")]),e("br"),e("span",{staticClass:"line-number"},[a._v("27")]),e("br"),e("span",{staticClass:"line-number"},[a._v("28")]),e("br"),e("span",{staticClass:"line-number"},[a._v("29")]),e("br"),e("span",{staticClass:"line-number"},[a._v("30")]),e("br"),e("span",{staticClass:"line-number"},[a._v("31")]),e("br"),e("span",{staticClass:"line-number"},[a._v("32")]),e("br"),e("span",{staticClass:"line-number"},[a._v("33")]),e("br"),e("span",{staticClass:"line-number"},[a._v("34")]),e("br"),e("span",{staticClass:"line-number"},[a._v("35")]),e("br"),e("span",{staticClass:"line-number"},[a._v("36")]),e("br"),e("span",{staticClass:"line-number"},[a._v("37")]),e("br"),e("span",{staticClass:"line-number"},[a._v("38")]),e("br"),e("span",{staticClass:"line-number"},[a._v("39")]),e("br"),e("span",{staticClass:"line-number"},[a._v("40")]),e("br"),e("span",{staticClass:"line-number"},[a._v("41")]),e("br"),e("span",{staticClass:"line-number"},[a._v("42")]),e("br"),e("span",{staticClass:"line-number"},[a._v("43")]),e("br"),e("span",{staticClass:"line-number"},[a._v("44")]),e("br"),e("span",{staticClass:"line-number"},[a._v("45")]),e("br"),e("span",{staticClass:"line-number"},[a._v("46")]),e("br")])]),e("ul",[e("li",[a._v("启动、停止kafka")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("cd /usr/local/kafka/bin\n# 启动\n./kafka-server-start.sh -daemon  ../config/server.properties\n# 停止\n./kafka-server-stop.sh ../config/server.properties\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("ul",[e("li",[a._v("使用kafka-manager管理集群")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v('1: 将kafka-manager编译\n\n2：修改配置文件/usr/local/kafka-manager/conf/application.conf\nplay.crypto.secret="^<csmm5Fx4d=r2HEX8pelM3iBkFVv?k[mc;IZE<_Qoq8EkX_/7@Zt6dP05Pzea3U"\nplay.crypto.secret=${?APPLICATION_SECRET}\nplay.http.session.maxAge="1h"\nplay.i18n.langs=["en"]\nplay.http.requestHandler = "play.http.DefaultHttpRequestHandler"\n# 前缀地址\nplay.http.context = "/"\nplay.application.loader=loader.KafkaManagerLoader\n# zk的地址\nkafka-manager.zkhosts="192.168.100.246:2181,192.168.100.180:2181,192.168.100.200:2181"\npinned-dispatcher.type="PinnedDispatcher"\npinned-dispatcher.executor="thread-pool-executor"\napplication.features=["KMClusterManagerFeature","KMTopicManagerFeature","KMPreferredReplicaElectionFeature","KMReassignPartitionsFeature"]\nakka {\n  loggers = ["akka.event.slf4j.Slf4jLogger"]\n  loglevel = "INFO"\n}\nakka.logger-startup-timeout = 60s\nbasicAuthentication.enabled=false\nbasicAuthentication.enabled=${?KAFKA_MANAGER_AUTH_ENABLED}\nbasicAuthentication.ldap.enabled=false\nbasicAuthentication.ldap.enabled=${?KAFKA_MANAGER_LDAP_ENABLED}\nbasicAuthentication.ldap.server=""\nbasicAuthentication.ldap.server=${?KAFKA_MANAGER_LDAP_SERVER}\nbasicAuthentication.ldap.port=389\nbasicAuthentication.ldap.port=${?KAFKA_MANAGER_LDAP_PORT}\nbasicAuthentication.ldap.username=""\nbasicAuthentication.ldap.username=${?KAFKA_MANAGER_LDAP_USERNAME}\nbasicAuthentication.ldap.password=""\nbasicAuthentication.ldap.password=${?KAFKA_MANAGER_LDAP_PASSWORD}\nbasicAuthentication.ldap.search-base-dn=""\nbasicAuthentication.ldap.search-base-dn=${?KAFKA_MANAGER_LDAP_SEARCH_BASE_DN}\nbasicAuthentication.ldap.search-filter="(uid=$capturedLogin$)"\nbasicAuthentication.ldap.search-filter=${?KAFKA_MANAGER_LDAP_SEARCH_FILTER}\nbasicAuthentication.ldap.connection-pool-size=10\nbasicAuthentication.ldap.connection-pool-size=${?KAFKA_MANAGER_LDAP_CONNECTION_POOL_SIZE}\nbasicAuthentication.ldap.ssl=false\nbasicAuthentication.ldap.ssl=${?KAFKA_MANAGER_LDAP_SSL}\nbasicAuthentication.username="admin"\nbasicAuthentication.username=${?KAFKA_MANAGER_USERNAME}\nbasicAuthentication.password="password"\nbasicAuthentication.password=${?KAFKA_MANAGER_PASSWORD}\nbasicAuthentication.realm="Kafka-Manager"\nbasicAuthentication.excluded=["/api/health"] # ping the health of your instance without authentification\nkafka-manager.consumer.properties.file=${?CONSUMER_PROPERTIES_FILE}\n\n3：启动kafka-manager\ncd /usr/local/kafka-manager\nbin/kafka-manager -Dconfig.file=conf/application.conf -Dhttp.port=9000\n')])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br"),e("span",{staticClass:"line-number"},[a._v("26")]),e("br"),e("span",{staticClass:"line-number"},[a._v("27")]),e("br"),e("span",{staticClass:"line-number"},[a._v("28")]),e("br"),e("span",{staticClass:"line-number"},[a._v("29")]),e("br"),e("span",{staticClass:"line-number"},[a._v("30")]),e("br"),e("span",{staticClass:"line-number"},[a._v("31")]),e("br"),e("span",{staticClass:"line-number"},[a._v("32")]),e("br"),e("span",{staticClass:"line-number"},[a._v("33")]),e("br"),e("span",{staticClass:"line-number"},[a._v("34")]),e("br"),e("span",{staticClass:"line-number"},[a._v("35")]),e("br"),e("span",{staticClass:"line-number"},[a._v("36")]),e("br"),e("span",{staticClass:"line-number"},[a._v("37")]),e("br"),e("span",{staticClass:"line-number"},[a._v("38")]),e("br"),e("span",{staticClass:"line-number"},[a._v("39")]),e("br"),e("span",{staticClass:"line-number"},[a._v("40")]),e("br"),e("span",{staticClass:"line-number"},[a._v("41")]),e("br"),e("span",{staticClass:"line-number"},[a._v("42")]),e("br"),e("span",{staticClass:"line-number"},[a._v("43")]),e("br"),e("span",{staticClass:"line-number"},[a._v("44")]),e("br"),e("span",{staticClass:"line-number"},[a._v("45")]),e("br"),e("span",{staticClass:"line-number"},[a._v("46")]),e("br"),e("span",{staticClass:"line-number"},[a._v("47")]),e("br"),e("span",{staticClass:"line-number"},[a._v("48")]),e("br"),e("span",{staticClass:"line-number"},[a._v("49")]),e("br"),e("span",{staticClass:"line-number"},[a._v("50")]),e("br"),e("span",{staticClass:"line-number"},[a._v("51")]),e("br"),e("span",{staticClass:"line-number"},[a._v("52")]),e("br")])]),e("h3",{attrs:{id:"三-测试kafka是否可用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-测试kafka是否可用"}},[a._v("#")]),a._v(" （三）测试kafka是否可用")]),a._v(" "),e("ul",[e("li",[a._v("创建topic，取名"),e("code",[a._v("hello-topic")])])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("cd /usr/local/kafka/bin\n./kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic hello-topic\n\n# 指定zk集群创建topic，这个topic是5个partition，2个replication\n./kafka-topics.sh --create --zookeeper 192.168.100.246:2181,192.168.100.180:2181,192.168.100.200:2181 --replication-factor 2 --partitions 5 --topic hello-topic\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br")])]),e("ul",[e("li",[a._v("可以在kafka-manager中查看每个broker中partition的分布，"),e("code",[a._v("注意：5个partition和2个replication组成10个partition，其中包括了leader和replication")])])]),a._v(" "),e("p",[e("img",{attrs:{src:n(1795),alt:"Alt text"}})]),a._v(" "),e("ul",[e("li",[a._v("查看topic")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("./kafka-topics.sh --list  --zookeeper localhost:2181\n\n# 指定zk集群查看topic\n./kafka-topics.sh --list  --zookeeper 192.168.100.246:2181,192.168.100.180:2181,192.168.100.200:2181\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("ul",[e("li",[a._v("发送消息到"),e("code",[a._v("hello-topic")]),a._v("这个topic")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("./kafka-console-producer.sh --broker-list 192.168.100.231:9092 --topic hello-topic\n\n# 指定kafka集群发送消息\n./kafka-console-producer.sh --broker-list 192.168.100.246:9092,192.168.100.180:9092,192.168.100.200:9092 --topic hello-topic\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("ul",[e("li",[a._v("从"),e("code",[a._v("hello-topic")]),a._v("这个topic，消费消息")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("./kafka-console-consumer.sh --bootstrap-server 192.168.100.231:9092   --topic  hello-topic --from-beginning\n\n# 指定集群消费\n./kafka-console-consumer.sh --bootstrap-server 192.168.100.246:9092,192.168.100.180:9092,192.168.100.200:9092   --topic  hello-topic --from-beginning\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("h3",{attrs:{id:"四-测试kafka宕机"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四-测试kafka宕机"}},[a._v("#")]),a._v(" （四）测试kafka宕机")]),a._v(" "),e("ul",[e("li",[a._v("当一台kafka宕机后，剩下的broker会重新自动选举Partition Leader，保证集群的可用性。那么当宕机kafka启动后，再次加入集群，那么此时Partition的自动选举机制不会被触发，可以使用kafka-manager的【Preferred Replica Election】按钮，触发集群的partition选举机制")])]),a._v(" "),e("p",[e("img",{attrs:{src:n(1796),alt:"Alt text"}})]),a._v(" "),e("h3",{attrs:{id:"五-删除topic-一般使用方法1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#五-删除topic-一般使用方法1"}},[a._v("#")]),a._v(" （五）删除Topic(一般使用方法1)")]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("# 方法1 标记为删除\nbin/kafka-topics.sh --delete --zookeeper 192.168.100.246:2181,192.168.100.180:2181,192.168.100.200:2181 --topic hello-topic\n\n# 方法2 \n# 连接zookeeper\ncd /usr/local/zookeeper/bin && ./zkCli.sh\nrmr /brokers/topics/需要删除的名称\nrmr /config/topics/需要删除的名称\nrmr /admin/delete_topics/需要删除的名称\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br")])]),e("h3",{attrs:{id:"三-kafka-manager的topic-指标"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-kafka-manager的topic-指标"}},[a._v("#")]),a._v(" 三：Kafka Manager的Topic 指标")]),a._v(" "),e("h3",{attrs:{id:"一-相关指标的含义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-相关指标的含义"}},[a._v("#")]),a._v(" （一）相关指标的含义")]),a._v(" "),e("ul",[e("li",[a._v("Partitions 分区")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("\tFilebeat将日志数据推送到Kafka，默认的分区数为5，分区数可以在Kafka Manager中动态创建\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[a._v("Brokers")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("\t当前Topic数据分布在多少broker上\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[a._v("Brokers Spread")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("\tbroker使用率，如kafka集群5个broker，但是某个topic只分布在了2个broker中，那么broker spread=2/5 * 100% = 40%\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[a._v("Brokers Skew")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("\tPartition的倾斜率，如kafka集群9个broker，某topic有18个partition，正常每个broker应该2个partition。若其中有3个broker上的partition数>2，则broker skew:  3 / 9 = 33%\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("ul",[e("li",[a._v("Brokers Leader Skew")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("\tLeader partition是否存在倾斜，如kafka集群9个broker，某topic14个partition，则正常每个broker有2个leader partition。若其中一个broker有0个leader partition，一个有4个leader partition，则broker leader skew: (4 - 2) / 14 = 14%\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h3",{attrs:{id:"四-配置多个kafka集群使用同一个zookeeper集群"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四-配置多个kafka集群使用同一个zookeeper集群"}},[a._v("#")]),a._v(" 四：配置多个Kafka集群使用同一个Zookeeper集群")]),a._v(" "),e("h3",{attrs:{id:"一-使用zookeeper集群保存2个kafka集群的meta数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-使用zookeeper集群保存2个kafka集群的meta数据"}},[a._v("#")]),a._v(" （一）使用Zookeeper集群保存2个Kafka集群的Meta数据")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("方法很简单，只需要让不同kakfa集群连接zookeeper集群的时候，指定不同的Namespace即可")])]),a._v(" "),e("li",[e("p",[a._v("例如"),e("strong",[a._v("第一个Kafka集群")]),a._v("的配置如下")])])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("# id可以从1开始，当然也可以是从0开始\nbroker.id=1\n# 监听的IP地址\nlisteners=PLAINTEXT://192.168.100.246:9092\nnum.network.threads=32\nnum.io.threads=20\nsocket.send.buffer.bytes=102400\nsocket.receive.buffer.bytes=102400\nsocket.request.max.bytes=104857600\n# 数据目录不会放在/tmp目录下\nlog.dirs=/tmp/kafka-logs\n# 默认分区为5\nnum.partitions=5\nnum.recovery.threads.per.data.dir=1\ndefault.replication.factor=2\noffsets.topic.replication.factor=2\ntransaction.state.log.replication.factor=1\ntransaction.state.log.min.isr=1\nlog.retention.hours=1\nlog.segment.bytes=1073741824\nlog.retention.check.interval.ms=300000\n# zookeeper地址\nzookeeper.connect=192.168.100.246:2181,192.168.100.180:2181,192.168.100.200:2181\nzookeeper.connection.timeout.ms=18000\ngroup.initial.rebalance.delay.ms=0\ndelete.topic.enable=true\ngroup.min.session.timeout.ms=6000\ngroup.max.session.timeout.ms=3000000\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br"),e("span",{staticClass:"line-number"},[a._v("26")]),e("br"),e("span",{staticClass:"line-number"},[a._v("27")]),e("br"),e("span",{staticClass:"line-number"},[a._v("28")]),e("br")])]),e("ul",[e("li",[a._v("例如"),e("strong",[a._v("第二个Kafka集群")]),a._v("的配置如下（主要的不同在于：broker.id、listeners、log.dirs、zookeeper.connect）")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("# id可以从1开始，当然也可以是从0开始\nbroker.id=11\n# 监听的IP地址和端口\nlisteners=PLAINTEXT://192.168.100.246:9093\nnum.network.threads=32\nnum.io.threads=20\nsocket.send.buffer.bytes=102400\nsocket.receive.buffer.bytes=102400\nsocket.request.max.bytes=104857600\n# 数据目录不会放在/tmp目录下\nlog.dirs=/tmp/kafka-new-logs\n# 默认分区为5\nnum.partitions=5\nnum.recovery.threads.per.data.dir=1\n# 默认的partition副本集为2\ndefault.replication.factor=2\noffsets.topic.replication.factor=2\ntransaction.state.log.replication.factor=1\ntransaction.state.log.min.isr=1\nlog.retention.hours=1\nlog.segment.bytes=1073741824\nlog.retention.check.interval.ms=300000\n# zookeeper地址\nzookeeper.connect=192.168.100.246:2181,192.168.100.180:2181,192.168.100.200:2181/kafka_new\nzookeeper.connection.timeout.ms=18000\ngroup.initial.rebalance.delay.ms=0\ndelete.topic.enable=true\ngroup.min.session.timeout.ms=6000\ngroup.max.session.timeout.ms=3000000\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br"),e("span",{staticClass:"line-number"},[a._v("5")]),e("br"),e("span",{staticClass:"line-number"},[a._v("6")]),e("br"),e("span",{staticClass:"line-number"},[a._v("7")]),e("br"),e("span",{staticClass:"line-number"},[a._v("8")]),e("br"),e("span",{staticClass:"line-number"},[a._v("9")]),e("br"),e("span",{staticClass:"line-number"},[a._v("10")]),e("br"),e("span",{staticClass:"line-number"},[a._v("11")]),e("br"),e("span",{staticClass:"line-number"},[a._v("12")]),e("br"),e("span",{staticClass:"line-number"},[a._v("13")]),e("br"),e("span",{staticClass:"line-number"},[a._v("14")]),e("br"),e("span",{staticClass:"line-number"},[a._v("15")]),e("br"),e("span",{staticClass:"line-number"},[a._v("16")]),e("br"),e("span",{staticClass:"line-number"},[a._v("17")]),e("br"),e("span",{staticClass:"line-number"},[a._v("18")]),e("br"),e("span",{staticClass:"line-number"},[a._v("19")]),e("br"),e("span",{staticClass:"line-number"},[a._v("20")]),e("br"),e("span",{staticClass:"line-number"},[a._v("21")]),e("br"),e("span",{staticClass:"line-number"},[a._v("22")]),e("br"),e("span",{staticClass:"line-number"},[a._v("23")]),e("br"),e("span",{staticClass:"line-number"},[a._v("24")]),e("br"),e("span",{staticClass:"line-number"},[a._v("25")]),e("br"),e("span",{staticClass:"line-number"},[a._v("26")]),e("br"),e("span",{staticClass:"line-number"},[a._v("27")]),e("br"),e("span",{staticClass:"line-number"},[a._v("28")]),e("br"),e("span",{staticClass:"line-number"},[a._v("29")]),e("br")])]),e("ul",[e("li",[a._v("此时登录到Zookeeper，就会发现有一个"),e("code",[a._v("/kafka_new")]),a._v("的NameSpace")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("[root@kafka1 bin]# ./zkCli.sh\n[zk: localhost:2181(CONNECTED) 0] ls /kafka_new\n[admin, brokers, cluster, config, consumers, controller, controller_epoch, feature, isr_change_notification, latest_producer_id_block, log_dir_event_notification]\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("ul",[e("li",[a._v("如果Kafka-Manager使用了JMX获取Kafka的JVM数据，那么需要在"),e("code",[a._v("kafka-run-class.sh")]),a._v("脚本中修改一下JMX的端口，默认端口是9988，那么启动第二个Kafka集群的时候，需要设置一个新端口，例如为：9989")])]),a._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("vi /usr/local/kafka_task/bin/kafka-run-class.sh\n添加：JMX_PORT=9989\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("ul",[e("li",[a._v("最后启动第二个Kafka集群即可")])])])}),[],!1,null,null,null);s.default=t.exports}}]);