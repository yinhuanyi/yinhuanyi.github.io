(window.webpackJsonp=window.webpackJsonp||[]).push([[432],{2346:function(s,a,n){"use strict";n.r(a);var t=n(9),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"模块化开发"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#模块化开发"}},[s._v("#")]),s._v(" 模块化开发")]),s._v(" "),n("h3",{attrs:{id:"一-什么是模块化开发"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-什么是模块化开发"}},[s._v("#")]),s._v(" (一) 什么是模块化开发")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("在Python中，以及其他的编程语言中，库，包，模块指定都是一个概念，代码中体现的是别人写好的功能，我们仅仅去调用而已\n模块化是代码的组成的一种方式，Python中的每一个文件就是模块\n在Python中，文件有三种方式进行组织\n    1：Python文件，也就是Python模块\n    2：目录\n    3：包\n包和目录的不同之处在于：包内部多一个__init__.py文件，使得包能够被模块导入，而目录不能\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"二-模块化开发的好处"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-模块化开发的好处"}},[s._v("#")]),s._v(" (二) 模块化开发的好处")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("模块化开发能够将不同的功能组装在一起，实现功能的累加，诸多功能组装在一起，最终形成项目\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"三-如何进行模块化开发以及注意点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三-如何进行模块化开发以及注意点"}},[s._v("#")]),s._v(" (三) 如何进行模块化开发以及注意点")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("模块化开发时候需要注意的是：\n    1：功能模块的分类\n    2：功能模块接口的定义\n    3：异常捕获等\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"四-python文件与普通文件的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四-python文件与普通文件的区别"}},[s._v("#")]),s._v(" (四) Python文件与普通文件的区别")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("Python中的文件也就是以.py后缀名结尾的文件，每一个.py后缀名结尾的文件就是Python的一个模块，能够被其他模块所导入\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"五-python包与目录的区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#五-python包与目录的区别"}},[s._v("#")]),s._v(" (五) Python包与目录的区别")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("包和目录的不同之处在于：包内部多一个__init__.py文件，使得包能够被模块导入，而目录不能\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"六-绝对导入和相对导入"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#六-绝对导入和相对导入"}},[s._v("#")]),s._v(" (六) 绝对导入和相对导入")]),s._v(" "),n("ul",[n("li",[s._v("目录结构")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("XKD_Python_Course\n├── app.py\n└── package1\n    ├── __init__.py\n    ├── test1.py\n    └── test2.py\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("ul",[n("li",[s._v("概念")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("1：绝对导入： 从python的搜索路径中导入对应的包中的模块\n    from package import module\n\n2: 相对导入：相对导入是初学者最容易混淆的地方, 相对导入必须在包内部使用，且有相对导入的模块，无法直接运行，必须使用python -m package.module这样的方式运行，或者被__main__模块导入，之后使用\n    from . import module\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("ul",[n("li",[s._v("绝对导入示例")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("绝对导入相对来说较为简单， 绝对导入遵循Python的sys.path搜索路径\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("相对导入示例（必须遵循相对导入的规则，不要想当然）")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 在__init__.py文件中\nprint('hello')\n\n# 在test1.py文件中\ndef add():\n    print('add')\n    print(__name__)\n\n# 在test2.py文件中，使用相对导入当前目录下的.test1模块中的add函数, 赋值给变量new_add\n# 特别要注意，如果直接运行test2.py会报错， 因此有相对导入的模块无法直接运行\nfrom .test1 import add\nnew_add = add\nnew_add()\n\n# 运行的方式有两种\n    1: 命令行方式：\n        python -m package1.test2\n\n    2: 在app.py文件中绝对导入调用\n        from package1.test2 import new_add\n        print(new_add())\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])]),n("h3",{attrs:{id:"七-使用-all-过滤模块属性的可见性"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#七-使用-all-过滤模块属性的可见性"}},[s._v("#")]),s._v(" (七) 使用__all__过滤模块属性的可见性")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("1：在模块导入中，模块的属性都能够被导入，没有私有和保护属性的概念，示例如下：\n在其他模块中，都可以导入对应模块，使用 from package import a， _a， __a\na = 'hello'\n_a = 'hello'\n__a = 'hello'\n\n\n\n2： 但是在使用 from package import * 的时候，保护属性和私有属性不会被导入\n\n3: 使用 __all__ = ['add', 'a',] 可以显示申明能够被导入的属性\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h3",{attrs:{id:"八-slot"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#八-slot"}},[s._v("#")]),s._v(" (八) slot")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("1：更快的属性访问速度\n2：减少内存消耗\n\nclass XKD:\n\n    __slots__ = ('name', 'age')\n\n    def __init__(self):\n        self.name = 'Robby'\n        self.age = 27\n\n    def show(self):\n        print(self.name)\n        print(self.age)\n\n\nxkd = XKD()\nprint(xkd.name)\nprint(xkd.age)\nprint(xkd.__dict__)  # 报错，AttributeError\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("h3",{attrs:{id:"九-if-name-main"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#九-if-name-main"}},[s._v("#")]),s._v(" (九) if "),n("strong",[s._v("name")]),s._v(" == '"),n("strong",[s._v("main")]),s._v("'")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("为什么要使用 if __name__ == '__main__'\n    1：测试\n    2：功能调试\n    3：不让测试代码污染模块\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);