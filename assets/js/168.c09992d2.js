(window.webpackJsonp=window.webpackJsonp||[]).push([[168],{1828:function(e,s,a){e.exports=a.p+"assets/img/20180604212506268.ce8658fd.png"},1829:function(e,s,a){e.exports=a.p+"assets/img/pod.15bdedf5.png"},1830:function(e,s,a){e.exports=a.p+"assets/img/6BEFA001B5F99196BF265B6E70462519.32f6f5b5.png"},2718:function(e,s,a){"use strict";a.r(s);var r=a(9),t=Object(r.a)({},(function(){var e=this,s=e.$createElement,r=e._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"一-docker编排工具介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-docker编排工具介绍"}},[e._v("#")]),e._v(" 一：Docker编排工具介绍")]),e._v(" "),r("h3",{attrs:{id:"一-docker编排三剑客"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-docker编排三剑客"}},[e._v("#")]),e._v(" (一)docker编排三剑客")]),e._v(" "),r("ul",[r("li",[e._v("docker compose")])]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("适合于单机编排，\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("ul",[r("li",[e._v("docker swarm")])]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("将docker的资源整合在一起，完成资源的分配\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("ul",[r("li",[e._v("docker machine")])]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("能够将某个docker加入到docker swarm集群中\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("h3",{attrs:{id:"二-mesos"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-mesos"}},[e._v("#")]),e._v(" (二)mesos")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("mesos能够将IDC的所有资源全部统一调度和分配，但是需要一个面向容器的调度框架marathon\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("h3",{attrs:{id:"三-k8s"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-k8s"}},[e._v("#")]),e._v(" (三)k8s")]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("自动装箱，自我修复，水平扩展，服务发现和负载均衡，自动发布和回顾\n支持秘钥和配置管理，可以直接实现配置中心的功能\n存储卷的编排，任务的批量处理执行\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br")])]),r("h2",{attrs:{id:"二-kubernetes环境架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-kubernetes环境架构"}},[e._v("#")]),e._v(" 二：Kubernetes环境架构")]),e._v(" "),r("ul",[r("li",[e._v("简要架构图")])]),e._v(" "),r("p",[r("img",{attrs:{src:a(1828),alt:"Alt text"}})]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("0: master节点的各个组件：API Server, Scheduler, Controller-manager\n   worker节点的各个组件：kublet, docker, kube-proxy\n\n1：Kubernetes是一个集群，每一个服务器上都安装Kubernetes相关的应用程序，让这些应用程序之间相互通信，完成资源的协调，是一个有中心节点的机器，称为master/worker机器模式，客户端请求发送给master，master的调度器检查各个worker节点的资源状态，从中挑选一个，再由docker启动容器，worker节点先检查本地是否有docker image镜像，如果没有从registry中拉去\n\n2: 用户的请求发送到API Server,Scheduler负责计算每一个worker节点的计算资源和存储资源， 且通知kublet集群代理，启动pod\n\n3：controller-manager需要在集群中探测每一个容器的运行情况，如果那个容器有问题\n\n4：kubernetes并不直接调度容器的运行，集群中最小的运行单位是pod，pod是容器的外壳，pod的内部就是容器，pod类似虚拟机，pod内部可以共享存储卷，和网络，一般而言，一个pod只配置一个容器\n\n5: 为了能够标识pod，可以给pod设置label，可以基于label selector挑选出指定label的pod\n\n6：pod有两类\n\t自主式的pod\n\t控制器管理的pod\n\n7: kube-proxy与API server进行通信，每一个pod发生变化，这个结果需要保存在API Server中，service的管理是基于kube-proxy的，kube-proxy需要创建规则\n\n8：master的数据存储到etcd中，etcd是key/value数据库，与Redis类似，可以进行选举，也类似于zookeeper\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br"),r("span",{staticClass:"line-number"},[e._v("7")]),r("br"),r("span",{staticClass:"line-number"},[e._v("8")]),r("br"),r("span",{staticClass:"line-number"},[e._v("9")]),r("br"),r("span",{staticClass:"line-number"},[e._v("10")]),r("br"),r("span",{staticClass:"line-number"},[e._v("11")]),r("br"),r("span",{staticClass:"line-number"},[e._v("12")]),r("br"),r("span",{staticClass:"line-number"},[e._v("13")]),r("br"),r("span",{staticClass:"line-number"},[e._v("14")]),r("br"),r("span",{staticClass:"line-number"},[e._v("15")]),r("br"),r("span",{staticClass:"line-number"},[e._v("16")]),r("br"),r("span",{staticClass:"line-number"},[e._v("17")]),r("br"),r("span",{staticClass:"line-number"},[e._v("18")]),r("br"),r("span",{staticClass:"line-number"},[e._v("19")]),r("br"),r("span",{staticClass:"line-number"},[e._v("20")]),r("br")])]),r("ul",[r("li",[e._v("一个完整的调度请求是这样的（缺少一个完整的请求访问过程）")])]),e._v(" "),r("p",[r("img",{attrs:{src:a(1829),alt:"Alt text"}})]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("①、这个 “Pod”请求 首先会通过 UI或CLI 提交给 “API Server”；\n\n②、然后 “API Server” 收到该请求后，会将这个请求写入到它的存储系统“Etcd” 中；\n\n③、接着 “Schedule”调度器 会通过 “API Service” 的 “Watch机制” 得到这个 “Pod”信息；然后 “Schedule”会根据它的资源信息做一个调度决策，在完成调度之后，它会回复“API Server”说：“这个 Pod 需要被调度至 Node x 上”。\n\n④、然后 “API Service” 会将 “Schedule” 反还的信息再次写到“etcd” 中，接着 “API Server” 会继续通过 “Watch 机制” 通知给 “Node x”（相应的节点） 来进行此次 “Pod”的执行。\n\n⑤、然后 “Node x” 的 “kubelet” 会收到这个通知，接着，kubelet 会 调动 “container runtime” 来配置容器的运行环境和启动容器，配置网络和存储\n\n⑥：Controller Manager作为集群内部的管理控制中心，负责集群内的Node、Pod副本、服务端点（Endpoint）、命名空间（Namespace）、服务账号（ServiceAccount）、资源定额（ResourceQuota）的管理，当某个Node意外宕机时，Controller Manager会及时发现并执行自动化修复流程，确保集群始终处于预期的工作状态。\n\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br"),r("span",{staticClass:"line-number"},[e._v("7")]),r("br"),r("span",{staticClass:"line-number"},[e._v("8")]),r("br"),r("span",{staticClass:"line-number"},[e._v("9")]),r("br"),r("span",{staticClass:"line-number"},[e._v("10")]),r("br"),r("span",{staticClass:"line-number"},[e._v("11")]),r("br"),r("span",{staticClass:"line-number"},[e._v("12")]),r("br")])]),r("ul",[r("li",[e._v("Kubernetes的网络通信网络层划分")])]),e._v(" "),r("p",[r("img",{attrs:{src:a(1830),alt:"Alt text"}})]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("一共可以分为3个网络：节点网路，pod网络和service网络\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("h3",{attrs:{id:"三-kubernetes各个组件的功能"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-kubernetes各个组件的功能"}},[e._v("#")]),e._v(" 三：Kubernetes各个组件的功能")]),e._v(" "),r("h3",{attrs:{id:"一-master节点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-master节点"}},[e._v("#")]),e._v(" (一)Master节点")]),e._v(" "),r("ul",[r("li",[e._v("kube-apiserver")])]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("\tKubernetes API，集群的统一入口，各组件协调者，以RESTful API提供接口服务，所有对象资源的增删改查和监听操作都交给APIServer处理后再提交给Etcd存储。\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("ul",[r("li",[e._v("kube-controller-manager")])]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("\t处理集群中常规后台任务，一个资源对应一个控制器，而ControllerManager就是负责管理这些控制器的。这些控制器包括：Replication Controller、Node Controller、ResourceQuota Controller、Namespace Controller、ServiceAccount Controller、Token Controller、Service Controller、Endpoint Controller\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("ul",[r("li",[e._v("kube-scheduler")])]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("\t根据调度算法为新创建的Pod选择一个Node节点，可以任意部署,可以部署在同一个节点上,也可以部署在不同的节点上。\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("ul",[r("li",[e._v("etcd")])]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("\t分布式键值存储系统。用于保存集群状态数据，比如Pod、Service等对象信息。\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br")])]),r("h3",{attrs:{id:"二-node组件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-node组件"}},[e._v("#")]),e._v(" (二)Node组件")]),e._v(" "),r("ul",[r("li",[e._v("kubelet")])]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("\tkubelet是Master在Node节点上的Agent，管理本机运行容器的生命周期，比如创建容器、Pod挂载数据卷、下载secret、获取容器和节点状态等工作。kubelet将每个Pod转换成一组容器。\ncadvise:监控容器和节点资源\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br")])]),r("ul",[r("li",[e._v("kube-proxy")])]),e._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("\tservice 在逻辑上代表了后端的多个 Pod，外界通过 service 访问 Pod。service 接收到的请求是如何转发到 Pod 的呢？这就是 kube-proxy 要完成的工作。\n每个 Node 都会运行 kube-proxy 服务，它负责将访问 service 的 TCP/UPD 数据流转发到后端的容器。如果有多个副本，kube-proxy 会实现负载均衡。\t\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br")])])])}),[],!1,null,null,null);s.default=t.exports}}]);