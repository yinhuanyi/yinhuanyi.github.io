(window.webpackJsonp=window.webpackJsonp||[]).push([[461],{2382:function(n,s,a){"use strict";a.r(s);var e=a(9),r=Object(e.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h2",{attrs:{id:"线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#线程"}},[n._v("#")]),n._v(" 线程")]),n._v(" "),a("h3",{attrs:{id:"一-什么是线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-什么是线程"}},[n._v("#")]),n._v(" (一) 什么是线程")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("1：线程，有时被称为轻量进程，是程序执行流的最小单元\n\n2：进程是计算机中的程序关于某数据集合上的一次运行活动，是系统进行资源分配和调度的基本单位，是操作系统结构的基础\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br")])]),a("h3",{attrs:{id:"二-如何定义线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-如何定义线程"}},[n._v("#")]),n._v(" (二) 如何定义线程")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("1：在Python中，使用threading库来创建线程\n\n2: 创建一个线程对象\n# group：为线程组，保留参数\n# target：为可调用对象，也就是任务, 可以是函数，如果是实例，那么实例的类必须实现__call__方法\n# name：指定线程的名称\n# args、kwargs是给线程任务传递参数\n# daemon：指定子线程是否需要主线程等待，主线程是non-daemon线程\n\n\nthreading.Thread(self, group=None, target=None, name=None, args=(), kwargs=None, *, daemon=None)\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br")])]),a("h3",{attrs:{id:"三-如何使用线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-如何使用线程"}},[n._v("#")]),n._v(" (三) 如何使用线程")]),n._v(" "),a("ul",[a("li",[n._v("示例1：")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("import threading\n\ndef worker():\n    print('I am worker')\n\nthead_obj = threading.Thread(target=worker, name='worker')\nthead_obj.start()\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br")])]),a("ul",[a("li",[n._v("示例2：线程自动退出")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("import threading\nimport time\n\ndef worker():\n    while True:\n        time.sleep(1)\n        print('我在工作')\n    else:\n        print('执行完毕')\n\n\nthread_obj = threading.Thread(target=worker, name='worker')\nthread_obj.start()\n\n# Python中的线程没有优先级、线程组、停止、挂起、销毁、恢复的概念\n# 线程退出的方式有两种：\n    线程任务执行完毕\n    线程内部抛出异常\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br")])]),a("ul",[a("li",[n._v("示例3：")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("import threading\nimport time\n\ndef worker():\n    number = 10\n    while number:\n        time.sleep(1)\n        print('我在工作')\n        number -= 1\n    else:\n        print('执行完毕')\n\n\nthread_obj = threading.Thread(target=worker, name='worker')\nthread_obj.start()\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br")])]),a("ul",[a("li",[n._v("示例4：参数传递")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("import threading\nimport time\n\ndef worker(num):\n    number = num\n    while number:\n        time.sleep(1)\n        print('我在工作')\n        number -= 1\n    else:\n        print('执行完毕')\n\n\nthread_obj = threading.Thread(target=worker, name='worker', args=(3,))\nthread_obj.start()\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br")])]),a("ul",[a("li",[n._v("实例5：线程的threading模块的相关函数")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("threading.active_count(): 依然存活的线程数，包括主线程\nthreading.current_thread(): 返回当前线程实例对象\nthreading.enumerate()：返回当前存活的线程对象列表，包括主线程，但是不包括终止线程和未启动线程\nthreading.main_thread()：返回主线程实例对象\nthreading.get_ident()： 返回当前线程的ID\n\n\n\nimport threading\nimport time\n\n\ndef showInfo():\n    print('active_thread_count = {}'.format(threading.active_count()))\n    print('current_thread = {}'.format(threading.current_thread()))\n    print('enumerate = {}'.format(threading.enumerate()))\n    print('main_thread = {}'.format(threading.main_thread()))\n    print('get_ident = {}'.format(threading.get_ident()))\n\n\ndef worker(num):\n    number = num\n    while number:\n        time.sleep(1)\n        print('我在工作')\n        number -= 1\n    else:\n        print('执行完毕')\n\n\nif __name__ == '__main__':\n\n    thread_obj = threading.Thread(target=worker, name='worker', args=(5, ))\n    thread_obj.start()\n    showInfo()\n\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br")])]),a("ul",[a("li",[n._v("示例6：线程实例对象的方法")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("thread_obj.name: 属性装饰器实现，获取线程名称\nthread_obj.name = 'thread name'： 设置线程名称\nthread_obj.ident：线程id\nthread_obj.is_alive()：显示线程是否存活，返回Bool值\n\nimport threading\nimport time\n\n\n\ndef worker(num):\n    number = num\n    while number:\n        time.sleep(1)\n        print('我在工作')\n        number -= 1\n    else:\n        print('执行完毕')\n\n\nif __name__ == '__main__':\n\n    thread_obj = threading.Thread(target=worker, name='worker', args=(5, ))\n    thread_obj.start()\n\n    print(thread_obj.name)\n    thread_obj.name = 'new worker'\n    print(thread_obj.name)\n    print(thread_obj.ident)\n    print(thread_obj.is_alive())\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br")])]),a("h3",{attrs:{id:"四-线程start方法和run方法的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四-线程start方法和run方法的区别"}},[n._v("#")]),n._v(" (四) 线程start方法和run方法的区别")]),n._v(" "),a("ul",[a("li",[n._v("thread_obj有两个方法 run、start这个方法是有区别的")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("# 运行下面的示例，看看程序运行的结果\nimport threading\nimport time\n\ndef worker(num):\n    number = num\n    while number:\n        time.sleep(1)\n        print('我在工作')\n        number -= 1\n    else:\n        print('执行完毕')\n\nif __name__ == '__main__':\n\n    thread_obj = threading.Thread(target=worker, name='worker', args=(5, ))\n    thread_obj.start()\n    # thread_obj.run()\n\n    print(thread_obj.name)\n    thread_obj.name = 'new worker'\n    print(thread_obj.name)\n    print(thread_obj.ident)\n    print(thread_obj.is_alive())\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br")])]),a("h3",{attrs:{id:"五-什么是线程安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五-什么是线程安全"}},[n._v("#")]),n._v(" (五) 什么是线程安全")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("一般在使用多线程的时候，如果需要打印线程的信息，不会使用print函数打印，而是使用logging日志模块打印，因为考虑到print函数在打印过程中可能出现线程的切换\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("h3",{attrs:{id:"六-daemon线程和非daemon线程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六-daemon线程和非daemon线程"}},[n._v("#")]),n._v(" (六) daemon线程和非daemon线程")]),n._v(" "),a("ul",[a("li",[n._v("线程中有父子的概念，如果在主线程中启动了一个线程，那么主线程就是父线程，启动的这个工作线程就是子线程，主线程是non-daemon线程，也就是daemon=False，如果子线程的daemon=False，那么主线程执行完毕之后，不会退出，直到子线程执行完毕之后才会退出。如果子线程的daemon=True，主线程执行完毕后，将会终止子线程的运行，也就是说，如果主线程运行终止，子线程也会终止。daemon选项必须在启动线程之前设定，thread_obj.daemon = True 也可以设置线程为daemon线程")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("import threading\nimport time\n\n\ndef worker(num):\n    number = num\n    while number:\n        print(threading.enumerate())\n        time.sleep(1)\n        print('{}在工作'.format(threading.current_thread().name))\n        number -= 1\n    else:\n        print('子线程执行完毕')\n\nif __name__ == '__main__':\n    thread_obj = threading.Thread(target=worker, name='worker', args=(5, ), daemon=False)\n    # thread_obj = threading.Thread(target=worker, name='worker', args=(5,), daemon=True)\n    thread_obj.start()\n    time.sleep(3)\n    print('主线程执行完毕')\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br")])]),a("ul",[a("li",[n._v("实际应用场景：")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("服务存活心跳包通知：一个正常运行的服务，一般都会启动一个线程发送服务存活的心跳包，用来通知监控系统服务进程正常运行，如果进程退出了，那么线程也应该终止，心跳包停止发送，则监控系统报警， 这就是daemon为True的意义，也就是daemon线程的意义\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("h3",{attrs:{id:"七-线程实例的join方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七-线程实例的join方法"}},[n._v("#")]),n._v(" (七) 线程实例的join方法")]),n._v(" "),a("ul",[a("li",[n._v("join方法说明：在当前线程中调用另一个线程的join方法，当前线程会在此处被阻塞，直到被调用的线程结束运行或终止，timeout指定被阻塞的时长，如果没有指定，那么就一直阻塞直到调用线程终止")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("import threading\nimport time\n\ndef worker(num):\n    number = num\n    while number:\n        time.sleep(1)\n        print('{}在工作'.format(threading.current_thread().name))\n        number -= 1\n    else:\n        print('执行完毕')\n\n\nif __name__ == '__main__':\n    #\n    thread_obj = threading.Thread(target=worker, name='worker', args=(5,), daemon=True)\n    thread_obj.start()\n    thread_obj.join()  # 主线程在此处开始阻塞\n    print('主线程执行完毕')\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br")])]),a("h3",{attrs:{id:"八-timer定时器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八-timer定时器"}},[n._v("#")]),n._v(" (八) timer定时器")]),n._v(" "),a("ul",[a("li",[a("code",[n._v("threading.Timer(self, interval, function, args=None, kwargs=None)")]),n._v("可以创建一个定时任务")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("import threading\nfrom threading import Timer\n\n\ndef worker():\n    print('I am worker !')\n\n# 等3秒后只需\ntimer = Timer(interval=3, function=worker, )\n# 给定时器取名\ntimer.setName('worker timer')\n\ntimer.start()\nprint(threading.enumerate())\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br")])])])}),[],!1,null,null,null);s.default=r.exports}}]);