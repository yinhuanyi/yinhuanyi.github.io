(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{2163:function(s,a,n){"use strict";n.r(a);var t=n(9),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"一-用户服务开发-小知识点记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-用户服务开发-小知识点记录"}},[s._v("#")]),s._v(" 一：用户服务开发（小知识点记录）")]),s._v(" "),t("h3",{attrs:{id:"一-使用passlib对密码进行加密"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-使用passlib对密码进行加密"}},[s._v("#")]),s._v(" (一)：使用passlib对密码进行加密")]),s._v(" "),t("ul",[t("li",[s._v("代码介绍")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('from passlib.hash import pbkdf2_sha256\n\nhash = pbkdf2_sha256.hash("toomanysecrets")\nprint(pbkdf2_sha256.verify("toomanysecrets", hash))\nprint(pbkdf2_sha256.verify("joshua", hash))\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h3",{attrs:{id:"二-从数据库中获取的datefield字段类型数据进行timestamp转换"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-从数据库中获取的datefield字段类型数据进行timestamp转换"}},[s._v("#")]),s._v(" (二)：从数据库中获取的DateField字段类型数据进行timestamp转换")]),s._v(" "),t("ul",[t("li",[s._v("DateField 转 Timestamp")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("import\n\n# birthday字段是DateField类型字段\ndate = user.birthday\ntimestamp = int(time.mktime(user.birthday.timetuple()))\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("ul",[t("li",[s._v("Timestamp 转 DateField")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("from datetime import date\n\ndate = date.fromtimestamp(timestamp)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"三-python-loguru日志库-这个需要重点记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三-python-loguru日志库-这个需要重点记录"}},[s._v("#")]),s._v(" "),t("code",[s._v("(三)：Python loguru日志库")]),s._v("(这个需要重点记录)")]),s._v(" "),t("ul",[t("li",[s._v("文档 https://pypi.org/project/loguru/")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"四-time-time-字段的结构体返回处理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四-time-time-字段的结构体返回处理"}},[s._v("#")]),s._v(" (四)：time.Time 字段的结构体返回处理")]),s._v(" "),t("ul",[t("li",[s._v("当一个带time.Time类型的结构体作为gin的Response返回，Json显示是这样的，time.Time类型时间转字符串有问题")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('{\n\tid: 1,\n\tname: "Robby0",\n\tbirthday: "1970-01-01T08:00:00+08:00",\n\tgender: "",\n\tmobile: "18670236750"\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("ul",[t("li",[s._v("解决方法1")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("在结构体中，将birthday字段定义为string类型\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("解决方法2(推荐)")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('将time.Time取一个别名，例如 JsonDate，重写time.Time的MarshalJSON方法，将birthday字段改为JsonDate类型\n\n\n// 取别名\ntype JsonDate time.Time\n\n// MarshalJson : 重写time.Time的MarshalJson方法\nfunc (j JsonDate) MarshalJSON () ([]byte, error) {\n\tvar stmp = fmt.Sprintf("\\"%s\\"", time.Time(j).Format("2006-01-02"))\n\treturn []byte(stmp), nil\n}\n\ntype UserResponse struct {\n\tId int32 `json:"id"`\n\tNickName string `json:"name"`\n\t// 改为JsonDate类型\n\tBirthday JsonDate `json:"birthday"`\n\tGender string `json:"gender"`\n\tMobile string `json:"mobile"`\n}\n\n// 给结构体赋值的时候，这样写\n// 这里的response.JsonTime()是类型强制转换\nuser.Birthday = response.JsonDate(time.Unix(int64(userInfo.Birthday), 0))\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br")])]),t("h3",{attrs:{id:"五-gin框架中response数据返回使用struct类型还是map类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五-gin框架中response数据返回使用struct类型还是map类型"}},[s._v("#")]),s._v(" (五)：gin框架中Response数据返回使用struct类型还是map类型")]),s._v(" "),t("ul",[t("li",[s._v("在gin框架中，返回数据可以是map或结构体类型，但是golang语言中，"),t("code",[s._v("推荐使用struct类型返回数据")]),s._v("，那么在项目中，就需要定义Response的struct，如下示例")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('type JsonDate time.Time\n\n// MarshalJSON 将time.Time类型，转换为字符串类型[]byte\nfunc (j JsonDate) MarshalJSON () ([]byte, error) {\n\t// 这里的j对象需要使用time.Time强制转换一下，是因为JsonDate没有Format方法，只有time.Time类型才有Format方法\n\tstmp := fmt.Sprintf("\\"%s\\"", time.Time(j).Format("2006-01-02"))\n\treturn []byte(stmp), nil\n}\n\ntype UserResponse struct {\n\tId int32 `json:"id"`\n\tNickName string `json:"name"`\n\t//Birthday string `json:"birthday"`\n\tBirthday JsonDate `json:"birthday"`\n\tGender string `json:"gender"`\n\tMobile string `json:"mobile"`\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("h3",{attrs:{id:"六-gin框架中对请求参数的form表单校验"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#六-gin框架中对请求参数的form表单校验"}},[s._v("#")]),s._v(" (六)：gin框架中对请求参数的form表单校验")]),s._v(" "),t("ul",[t("li",[s._v("表达校验是必须的，在gin框架中一般使用结构体对表单进行校验")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('package forms\n\n// PasswordLoginForm 校验json请求的参数\ntype PasswordLoginForm struct {\n\tMobile string `form:"mobile" json:"mobile" binding:"required"`\n\tPassword string `form:"password" json:"password" binding:"required,min=3,max=20"`\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("如果mobile这种字段，需要对手机号码进行校验，那么还可以自定义mobile校验器")])]),s._v(" "),t("li",[t("p",[s._v("先写一个字段校验器的函数")])])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// ValidateMobile forms表单验证中，手机字段进行验证\nfunc ValidateMobile(fl validator.FieldLevel) (ok bool) {\n\t// 获取字段的值\n\tmobile := fl.Field().String()\n\t// 使用正则表达式判断，mobile字段是否合法\n\tok, _ = regexp.MatchString(`^1([38][0-9]|14[579]|5[^4]|16[6]|7[1-35-8]|9[189])\\d{8}$`, mobile)\n\tif !ok {\n\t\treturn false\n\t}\n\treturn true\n}\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("ul",[t("li",[s._v("将函数注册到validator中")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('// 5：注册自定义的validator验证器(这个如果在其他服务没有用，那么可以不用谢)\nif v, ok := binding.Validator.Engine().(*validator.Validate); ok {\n\t// 这里是定义校验器\n\t_ = v.RegisterValidation("mobile", cvalidator.ValidateMobile)\n\t// 这里是定义翻译器\n\t_ = v.RegisterTranslation("mobile", global.Trans, func(ut ut.Translator) error {\n\t\treturn ut.Add("mobile", "{0} 手机号码非法", true) // 错误提示在这里可以自己写\n\t}, func(ut ut.Translator, fe validator.FieldError) string {\n\t\tt, _ := ut.T("mobile", fe.Field())\n\t\treturn t\n\t})\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("ul",[t("li",[s._v("在结构体中使用(这的mobile字段，就是自定义的validator校验规则)")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('// PasswordLoginForm 校验json请求的参数\ntype PasswordLoginForm struct {\n\tMobile string `form:"mobile" json:"mobile" binding:"required,mobile"`\n\tPassword string `form:"password" json:"password" binding:"required,min=3,max=20"`\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h3",{attrs:{id:"七-用户名登录的校验过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#七-用户名登录的校验过程"}},[s._v("#")]),s._v(" (七)：用户名登录的校验过程")]),s._v(" "),t("ul",[t("li",[s._v("这个过程需要校验两次(用户传递mobile和password两个字段进行登录)")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1：第一次是\n\t基于mobile获取用户的字段信息，这里包括EncryptedPassword字段，也就是加密后密码\n\t\n2：第二次是\n\t基于原始的password和EncryptedPassword进行sha256校验，如果校验通过，说明用户登录成功\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h3",{attrs:{id:"八-session机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#八-session机制"}},[s._v("#")]),s._v(" (八)：session机制")]),s._v(" "),t("ul",[t("li",[s._v("Django的session机制处理流程")])]),s._v(" "),t("p",[t("img",{attrs:{src:n(636),alt:"Alt text"}})]),s._v(" "),t("h3",{attrs:{id:"九-jwt机制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#九-jwt机制"}},[s._v("#")]),s._v(" (九)：JWT机制")]),s._v(" "),t("p",[t("img",{attrs:{src:n(637),alt:"Alt text"}})]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("一句话说明JWT登录原理")])])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("\tJWT中Header和Payload在服务器端会被Base64编码，编码后的结果加上服务器端secret，再借助HS256算法获得Signature，则JWT = Header + Payload + Signature，这里的Signature=HS256(Header,Payload,服务器的secret)。服务器将JWT返回给客户端，保存到浏览器中，当浏览器再次请求，服务器端只需要再次借助HS256算法基于用户的Header,Payload和服务器的secret获得新的Signature，与客户端JWT的Signature对比，如果一样，说明客户端用户认证合法，再取出Payload中有个用户的非敏感信息，对用户进行数据展示。如果不一样，说明用户方法，直接返回错误信息\n    JWT同时也减轻了服务器端session的存储压力和session的同步压力\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"十-后台解决跨域问题-带基本原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#十-后台解决跨域问题-带基本原理"}},[s._v("#")]),s._v(" (十)：后台解决跨域问题(带基本原理)")]),s._v(" "),t("ul",[t("li",[s._v("跨域产生的原因（浏览器请求的地址与ajax请求的地址不是同一个域，就有可能出现跨域问题，例如www.abc.com与bbs.abc.com就不是同一个域）")])]),s._v(" "),t("p",[t("img",{attrs:{src:n(638),alt:"Alt text"}})]),s._v(" "),t("ul",[t("li",[t("p",[s._v("当一个跨域请求发起后，"),t("code",[s._v("不是请求不允许")]),s._v("，"),t("code",[s._v("而是后台的跨域请求返回后，被浏览器发现不是同源，就会被浏览器拦截掉")]),s._v("，因此跨域拦截是拦截的响应报文，不是请求报文")])]),s._v(" "),t("li",[t("p",[s._v("当浏览器调用ajax发起一个跨域请求后，此时有两种情况：")])])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1：简单请求：\n\t①：请求方法为HEAD、GET、POST中的一种\n\t②：HTTP头信息不超过下面几种：\n\t\t Accept\n\t\t Accept-Language\n\t\t Content-Language\n\t\t Last-Event-ID\n\t\t Content-Type（只限于三个值application/x-www-form-urlencoded、multipart/form-data、text/plain）\n\t\t \n2：非简单请求\n\t非简单请求是那种对服务器有特殊要求的请求，比如请求方法是 PUT 或 DELETE ，或者 Content-Type 字段的类型是 application/json。比如加入自定义请求头也是非简单请求\n\t如果是非简单请求，浏览器会通信之前会发起一次预检请求，也就是OPTIONS请求\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("前端需要发送一个Get请求获取数据时候，且设置"),t("code",[s._v("X-Token")]),s._v("，这是一个非简单请求，那么浏览器在发起一个Get请求之前，会先发送一个"),t("code",[s._v("OPTIONS")]),s._v("请求。此时，后台需要处理这个"),t("code",[s._v("OPTIONS")]),s._v("请求，告诉浏览器端，允许的Origin、Headers、Methods、Credentials等，最后返回一个"),t("code",[s._v("204的状态码")])])]),s._v(" "),t("li",[t("p",[s._v("下面是一个非简单跨域请求的中间件，是一个处理跨域请求的中间件，如下 (这里的context.Header是"),t("code",[s._v("设置响应头")]),s._v(")")])])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('import (\n\t"github.com/gin-gonic/gin"\n\t"net/http"\n)\n\nfunc Cors() gin.HandlerFunc {\n\treturn func(context *gin.Context) {\n\n\t\tmethod := context.Request.Method\n\t\tcontext.Header("Access-Control-Allow-Origin", "*")\n\t\tcontext.Header("Access-Control-Allow-Headers", "Content-Type,AccessToken,X-CSRF-Token, Authorization, Token, x-token")\n\t\tcontext.Header("Access-Control-Allow-Methods", "POST, GET, OPTIONS, DELETE, PATCH, PUT")\n\t\tcontext.Header("Access-Control-Expose-Headers", "Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type")\n\t\tcontext.Header("Access-Control-Allow-Credentials", "true")\n\n\t\tif method == "OPTIONS" {\n\t\t\t// 这个是204状态码，无内容，直接返回给客户端\n\t\t\tcontext.AbortWithStatus(http.StatusNoContent)\n\t\t}\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br")])]),t("h3",{attrs:{id:"十一-处理图形验证码-这个是将验证码保存到内存的-生产环境不能使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#十一-处理图形验证码-这个是将验证码保存到内存的-生产环境不能使用"}},[s._v("#")]),s._v(" (十一)：处理图形验证码 （这个是将验证码保存到内存的，生产环境不能使用）")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("使用了一个库"),t("code",[s._v("github.com/mojocn/base64Captcha")])])]),s._v(" "),t("li",[t("p",[s._v("当用户访问登录页面，前端会调用验证码生成接口，返回一个"),t("code",[s._v("captchaId")]),s._v("和"),t("code",[s._v("picPath")]),s._v("两个字段，那么前端就可以先请求图形验证码，然后渲染成图形")])]),s._v(" "),t("li",[t("p",[s._v("当用户登录的时候，带上"),t("code",[s._v("captchaId")]),s._v("和"),t("code",[s._v("picPath(已经识别的数字)")]),s._v("两个字段请求，后台就可以验证"),t("code",[s._v("captchaId")]),s._v("和"),t("code",[s._v("picPath(已经识别的数字)")]),s._v("是否可以对应上，如果可以，说明用户登录逻辑可以向下走")])])]),s._v(" "),t("h3",{attrs:{id:"十二-获取验证码和用户注册"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#十二-获取验证码和用户注册"}},[s._v("#")]),s._v(" (十二)：获取验证码和用户注册")]),s._v(" "),t("ul",[t("li",[s._v("获取验证码逻辑流程")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1：查询当前用户是否已经存在\n\n2：发送验证码\n\n3：写入Redis\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("ul",[t("li",[s._v("用户注册逻辑流程")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1：基于手机获取验证码\n\n2：校验验证码是否正确\n\n3：生成jwt token，且返回\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h2",{attrs:{id:"二-用户服务开发整体代码小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-用户服务开发整体代码小结"}},[s._v("#")]),s._v(" 二：用户服务开发整体代码小结")]),s._v(" "),t("h3",{attrs:{id:"一-main-go文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-main-go文件"}},[s._v("#")]),s._v(" (一)：main.go文件")]),s._v(" "),t("ul",[t("li",[s._v("1：初始化配置")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1：通过读取当前服务器的环境变量，判断服务读取本地nacos的配置\n\n2：将nacos的配置数据映射到nacos的结构体\n\n3：调用nacos的api，获取服务的json配置，将配置映射到Conf结构体\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("ul",[t("li",[s._v("2：初始化日志")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1：配置zap日志\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("3：初始化路由")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1：路由接口初始化\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("4：初始化翻译")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1：初始化validator的翻译\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("5：注册自定义的validator验证器")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1：注册自定义的validator验证器\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("6：初始化连接user-srv的grpc连接客户端")]),s._v(" "),t("li",[s._v("7：基于环境变量判断服务是固定端口还是随机端口")]),s._v(" "),t("li",[s._v("8：将user-web注册到consul中")]),s._v(" "),t("li",[s._v("9：优雅关机且将服务从consul中注销")])])])}),[],!1,null,null,null);a.default=e.exports},636:function(s,a,n){s.exports=n.p+"assets/img/2021-06-143.28.22.8ca5e2b4.png"},637:function(s,a,n){s.exports=n.p+"assets/img/2021-06-144.04.39.b25b9052.png"},638:function(s,a,n){s.exports=n.p+"assets/img/2021-07-0111.50.05.b02f3d42.png"}}]);