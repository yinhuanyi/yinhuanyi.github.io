(window.webpackJsonp=window.webpackJsonp||[]).push([[346],{2183:function(s,n,a){"use strict";a.r(n);var t=a(9),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"一-概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-概念"}},[s._v("#")]),s._v(" 一：概念")]),s._v(" "),a("h3",{attrs:{id:"一-流程控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-流程控制"}},[s._v("#")]),s._v(" (一)：流程控制")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\tGo语言中最常用的流程控制有if和for\n\tswitch和goto主要是为了简化代码、降低重复代码而生的结构，属于扩展类的流程控制\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"二-if-else-分支结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-if-else-分支结构"}},[s._v("#")]),s._v(" 二：if else(分支结构)")]),s._v(" "),a("h3",{attrs:{id:"一-if条件判断基本写法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-if条件判断基本写法"}},[s._v("#")]),s._v(" (一)：if条件判断基本写法")]),s._v(" "),a("ul",[a("li",[s._v("Go语言中if条件判断的格式如下")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("if 表达式1 {\n    分支1\n} else if 表达式2 {\n    分支2\n} else{\n    分支3\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"二-if条件判断特殊写法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-if条件判断特殊写法"}},[s._v("#")]),s._v(" (二)：if条件判断特殊写法")]),s._v(" "),a("ul",[a("li",[s._v("if条件判断还有一种特殊的写法，可以在 if 表达式之前添加一个执行语句，再根据变量值进行判断，举个例子：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('func ifDemo2(score int) {\n\tif score = 95; score >= 90 {\n\t\tfmt.Println("A")\n\t} else if score > 75 {\n\t\tfmt.Println("B")\n\t} else {\n\t\tfmt.Println("C")\n\t}\n}\n\nfunc main() {\n\tifDemo2(65)\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"三-for-循环结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-for-循环结构"}},[s._v("#")]),s._v(" 三：for(循环结构)")]),s._v(" "),a("h3",{attrs:{id:"一-for循环基本写法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-for循环基本写法"}},[s._v("#")]),s._v(" (一)：for循环基本写法")]),s._v(" "),a("ul",[a("li",[s._v("基本写法")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("for i := 0; i < 10; i++ {\n\t\tfmt.Println(i)\n\t}\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("for循环的初始语句可以被忽略，但是初始语句后的分号必须要写，例如：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("i := 0\nfor ; i < 10; i++ {\n\tfmt.Println(i)\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("for循环的初始语句和结束语句都可以省略，类似于while循环，例如")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("i := 0\nfor i < 10 {\n\tfmt.Println(i)\n\ti++\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"二-无限循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-无限循环"}},[s._v("#")]),s._v(" (二)：无限循环")]),s._v(" "),a("ul",[a("li",[s._v("无限循环可以通过"),a("code",[s._v("break、goto、return、panic语句强制退出循环")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("for {\n    循环体语句\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"四-for-range-键值循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四-for-range-键值循环"}},[s._v("#")]),s._v(" 四：for range(键值循环)")]),s._v(" "),a("h3",{attrs:{id:"一-通用方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-通用方法"}},[s._v("#")]),s._v(" (一)：通用方法")]),s._v(" "),a("ul",[a("li",[s._v("Go语言中可以使用for range遍历数组、切片、字符串、map 及通道（channel）。 通过for range遍历的返回值有以下规律：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1：数组、切片、字符串返回索引和值。\n2：map返回键和值\n3：通道（channel）只返回通道内的值。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("例如对字符串遍历（字符串中有中文，因此使用for range循环，必须要将字符串转变为[]rune类型）")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('s := "hello 你好"\n\n// 下面两种写法都可以\nfor _, item := range s {\n\tfmt.Printf("%c\\t", item)\n}\n\nfor _, item := range []rune(s) {\n\tfmt.Printf("%c\\t", item)\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h2",{attrs:{id:"五-switch-case"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五-switch-case"}},[s._v("#")]),s._v(" 五：switch case")]),s._v(" "),a("h3",{attrs:{id:"一-通用方法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-通用方法-2"}},[s._v("#")]),s._v(" (一)：通用方法")]),s._v(" "),a("ul",[a("li",[s._v("使用switch语句可方便地对大量的值进行条件判断，Go语言规定每个switch只能有一个default分支")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('func switchDemo1() {\n\tfinger := 3\n\tswitch finger {\n\tcase 1:\n\t\tfmt.Println("大拇指")\n\tcase 2:\n\t\tfmt.Println("食指")\n\tcase 3:\n\t\tfmt.Println("中指")\n\tcase 4:\n\t\tfmt.Println("无名指")\n\tcase 5:\n\t\tfmt.Println("小拇指")\n\tdefault:\n\t\tfmt.Println("无效的输入！")\n\t}\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("ul",[a("li",[s._v("一个分支可以有多个值，多个case值中间使用英文逗号分隔")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('func testSwitch3() {\n\tswitch n := 7; n {\n\tcase 1, 3, 5, 7, 9:\n\t\tfmt.Println("奇数")\n\tcase 2, 4, 6, 8:\n\t\tfmt.Println("偶数")\n\tdefault:\n\t\tfmt.Println(n)\n\t}\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("ul",[a("li",[s._v("分支还可以使用表达式，这个比较重要，有点像if else判断")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('func switchDemo4() {\n\tage := 30\n\tswitch {\n\tcase age < 25:\n\t\tfmt.Println("好好学习吧")\n\tcase age > 25 && age < 35:\n\t\tfmt.Println("好好工作吧")\n\tcase age > 60:\n\t\tfmt.Println("好好享受吧")\n\tdefault:\n\t\tfmt.Println("活着真好")\n\t}\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("ul",[a("li",[s._v("fallthrough语法可以执行满足条件的case的下一个case，是为了兼容C语言中的case设计的")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('// 这里输出：a b\nfunc switchDemo5() {\n\ts := "a"\n\tswitch {\n\tcase s == "a":\n\t\tfmt.Println("a")\n\t\tfallthrough\n\tcase s == "b":\n\t\tfmt.Println("b")\n\tcase s == "c":\n\t\tfmt.Println("c")\n\tdefault:\n\t\tfmt.Println("...")\n\t}\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h2",{attrs:{id:"六-goto-跳转到指定标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六-goto-跳转到指定标签"}},[s._v("#")]),s._v(" 六：goto(跳转到指定标签)")]),s._v(" "),a("h3",{attrs:{id:"一-通用方法-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-通用方法-3"}},[s._v("#")]),s._v(" (一)：通用方法")]),s._v(" "),a("ul",[a("li",[s._v("goto语句通过标签进行代码间的无条件跳转。goto语句可以在快速跳出循环、避免重复退出上有一定的帮助。Go语言中使用goto语句能简化一些代码的实现过程。 例如双层嵌套的for循环要退出时")])]),s._v(" "),a("h3",{attrs:{id:"二-代码简化对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-代码简化对比"}},[s._v("#")]),s._v(" (二)：代码简化对比")]),s._v(" "),a("ul",[a("li",[s._v("使用两个break跳出双层for循环")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('var breakFlag bool\nfor i := 0; i < 10; i++ {\n\tfor j := 0; j < 10; j++ {\n\t\tif j == 2 {\n\t\t\t// 设置退出标签\n\t\t\tbreakFlag = true\n\t\t\tbreak\n\t\t}\n\t\tfmt.Printf("%v-%v\\n", i, j)\n\t}\n\t\n\t// 外层for循环判断\n\tif breakFlag {\n\t\tbreak\n\t}\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("ul",[a("li",[s._v("使用"),a("code",[s._v("goto语句")]),s._v("能简化代码")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('for i := 0; i < 10; i++ {\n\tfor j := 0; j < 10; j++ {\n\t\tif j == 20 {\n\t\t\t// 跳转至breakTag标签\n\t\t\tgoto breakTag\n\t\t}\n\t\tfmt.Printf("%v-%v\\n", i, j)\n\t}\n}\n\n\nbreakTag:\n\tfmt.Println("结束for循环")\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"七-break-跳转到指定标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七-break-跳转到指定标签"}},[s._v("#")]),s._v(" 七：break(跳转到指定标签)")]),s._v(" "),a("h3",{attrs:{id:"一-通用方法-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-通用方法-4"}},[s._v("#")]),s._v(" (一)：通用方法")]),s._v(" "),a("ul",[a("li",[s._v("break语句还可以在语句后面添加标签，表示退出某个标签对应的代码块，标签要求必须定义在对应的"),a("code",[s._v("for、switch和 select")]),s._v("的代码块上。 举个例子下面代码直接跳出了两层循环")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('func breakDemo1() {\n// 这个是for循环的标签，跳出这个标签，会运行 fmt.Println("...")\nBREAKDEMO1:\n\tfor i := 0; i < 10; i++ {\n\t\tfor j := 0; j < 10; j++ {\n\t\t\tif j == 2 {\n\t\t\t\tbreak BREAKDEMO1\n\t\t\t}\n\t\t\tfmt.Printf("%v-%v\\n", i, j)\n\t\t}\n\t}\n\tfmt.Println("...")\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h2",{attrs:{id:"八-continue-继续下次循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八-continue-继续下次循环"}},[s._v("#")]),s._v(" 八：continue(继续下次循环)")]),s._v(" "),a("h3",{attrs:{id:"一-通用方法-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-通用方法-5"}},[s._v("#")]),s._v(" (一)：通用方法")]),s._v(" "),a("ul",[a("li",[s._v("continue语句可以结束当前循环，开始下一次的循环迭代过程，仅限在for循环内使用。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("for i:=0; i<10; i++ {\n\tif i == 5 {\n\t\tcontinue\n\t}\n\tfmt.Println(i)\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("ul",[a("li",[s._v("在 continue语句后添加标签时，表示开始标签对应的循环。例如：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('forloop1:\n\tfor i := 0; i < 5; i++ {\n\t\tfor j := 0; j < 5; j++ {\n\t\t\tif i == 2 && j == 2 {\n\t\t\t\t// 注意，这里是continue第一层循环，不是重新执行第一层循环\n\t\t\t\tcontinue forloop1\n\t\t\t}\n\t\t\tfmt.Printf("%v-%v\\n", i, j)\n\t\t}\n\t}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);