(window.webpackJsonp=window.webpackJsonp||[]).push([[490],{2458:function(s,a,e){"use strict";e.r(a);var n=e(9),t=Object(n.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h3",{attrs:{id:"一-单向加密md5、sha1和base64"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-单向加密md5、sha1和base64"}},[s._v("#")]),s._v(" 一：单向加密md5、sha1和base64")]),s._v(" "),e("h3",{attrs:{id:"一-单向加密md5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-单向加密md5"}},[s._v("#")]),s._v(" (一)：单向加密MD5")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("\t只能对数据进行加密，而不能解密\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ul",[e("li",[s._v("在Python中，hashlib模块提供了常见的摘要算法，例如MD5、SHA1算法等")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("什么是摘要算法呢？\n\t摘要算法又称之为哈希算法、散列算法。基于某个函数将任意长度的数据转换为一个固定长度的数据串。\n\t摘要算法就是通过摘要函数对任意长度的data计算出固定长度的摘要digest，目的是为了发现原始数据是否被篡改。\n\t摘要算法之所以能指出数据是否被篡改过，就是因为摘要函数是一个单向函数，计算data的摘要digest很容易，但是通过digest反推data却非常困难，而且，对原始数据做一个bit的修改，都会导致据算出的摘要完全不同。\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("ul",[e("li",[s._v("查看hashlib支持的所有hash算法")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import hashlib\n# {'sha3_224', 'sha1', 'sha512', 'sha3_512', 'shake_128', 'sha3_256', 'sha224', 'blake2s', 'md5', 'blake2b', 'shake_256', 'sha256', 'sha3_384', 'sha384'}\n# 所有平台支持的算法\nprint(hashlib.algorithms_guaranteed)\n\n# {'md4', 'MD5', 'blake2b', 'dsaWithSHA', 'sha512', 'ripemd160', 'sha384', 'whirlpool', 'sha1', 'sha3_512', 'shake_128', 'DSA-SHA', 'md5', 'SHA', 'sha256', 'SHA256', 'sha3_224', 'SHA384', 'mdc2', 'RIPEMD160', 'MD4', 'SHA224', 'blake2s', 'sha', 'ecdsa-with-SHA1', 'SHA1', 'dsaEncryption', 'sha3_256', 'sha224', 'shake_256', 'sha3_384', 'MDC2', 'DSA', 'SHA512'}\n# 支持的算法\nprint(hashlib.algorithms_available)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("ul",[e("li",[s._v("使用md5算法对数据单向加密")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import hashlib\n\n# 获取字节字符串\ndata = \"d@40dfdf\".encode()\n# 使用md5摘要算法创建hash对象, 也可以 hashlib.md5(data)\nhash_obj = hashlib.new('md5', data)\n# 获取长度为32的16进制字符串\ndigest = hash_obj.hexdigest()\nprint(digest)\n# 获取长度为16的字节字符串\nbytes_digest = hash_obj.digest()\nprint(bytes_digest)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("ul",[e("li",[s._v("在获取到md5的hash对象后，再次update原始字符串, 让原始字符串增长一些")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import hashlib\n\n# 获取字节字符串\ndata = \"hello\".encode()\n# 使用md5摘要算法\nhash_obj = hashlib.new('md5', data)\n# 在原有数据后面添加数据\nhash_obj.update('nihao'.encode())\ndigest = hash_obj.hexdigest()\nprint(digest)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("ul",[e("li",[s._v("hashlib的应用1")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("\t在web站点中，用户登录的密码，密码进行md5或sha1加密后，再存储到数据库中。这样即使DBA能够看到密码，也无法知道密码是什么。验证用户密码只需要将用户登录的密码进行md5或sha1加密后，再与数据库密码对比，就知道用户的密码对不对了\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ul",[e("li",[s._v("hashlib的应用2")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('\thashlib的还有一个方面的应用就是文件校验，它可以在文件传输时，验证文件是否被完整接收，这用到的是hashlib的"相同字符串的摘要一致"原理。如果摘要一致，说明文件传输完成，否则就是文件在传输过程中丢帧。\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"二-base64模块"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-base64模块"}},[s._v("#")]),s._v(" (二)：base64模块")]),s._v(" "),e("ul",[e("li",[s._v("base64模块是一种使用64个字符来表示任意二进制数据的方法(也就是将)")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("在base64算法使用了A-Z、a-z、0-9、 + 、 / 这64个字符\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ul",[e("li",[s._v("base64的用途")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("1：用来将非ASCII字符的数据转换成ASCII字符的一种方法\n\n2：常用于对URL的编码\n\n3：可以将不可打印的二进制数据转化为可打印的字符串\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("ul",[e("li",[s._v("base64模块使用")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('import base64\n\ndata = "Robby".encode()\n\n# 编码\nret = base64.b64encode(data)\nprint(ret)\n\n# 解码\nret = base64.b64decode(ret)\nprint(ret)\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("h3",{attrs:{id:"二-对称加密-des、aes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-对称加密-des、aes"}},[s._v("#")]),s._v(" 二：对称加密：DES、AES")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("\t数据加密与解密使用相同的密钥\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"三-非对称加密-rsa"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-非对称加密-rsa"}},[s._v("#")]),s._v(" (三)：非对称加密：RSA")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("\t比对称加密更安全、但速度慢千倍、通常用来做身份认证\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"一-加密和解密"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-加密和解密"}},[s._v("#")]),s._v(" (一)：加密和解密")]),s._v(" "),e("ul",[e("li",[s._v("公钥和私钥实现非对称加密")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("\t公钥用来加密，私钥用来解密。公钥和私钥是通过数学方法生成的，如果你知道公钥，也无法推算出私钥。\n\t那么在通信过程中，通信的双方首先相互交换公钥，A获取到B的公钥，B获取到A的公钥。之后A使用B的公钥对文件进行加密，然后将加密后的文件发送给B，那么此时B可以使用自己的私钥解密这个文件。在整个过程中，由于使用了非对称加密的方法对文件进行加密，因此只有B获取到加密文件后，才可以查看文件内容，其他人获取加密文件，无法查看文件内容。即使是A也无法解密，因为A没有B的私钥\n\t\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h3",{attrs:{id:"一-安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-安装"}},[s._v("#")]),s._v(" (一)：安装")]),s._v(" "),e("ul",[e("li",[s._v("从 PYPI 安装")])])])}),[],!1,null,null,null);a.default=t.exports}}]);