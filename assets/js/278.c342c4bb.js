(window.webpackJsonp=window.webpackJsonp||[]).push([[278],{1293:function(s,e,n){s.exports=n.p+"assets/img/1.585100fc.png"},2434:function(s,e,n){"use strict";n.r(e);var r=n(9),a=Object(r.a)({},(function(){var s=this,e=s.$createElement,r=s._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[r("h3",{attrs:{id:"spiders、item-pipeline是用户自己写的-在外面。engine、schedule、download是在里面"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spiders、item-pipeline是用户自己写的-在外面。engine、schedule、download是在里面"}},[s._v("#")]),s._v(" spiders、item pipeline是用户自己写的，在外面。engine、schedule、download是在里面")]),s._v(" "),r("p",[r("img",{attrs:{src:n(1293),alt:"Alt text"}})]),s._v(" "),r("h3",{attrs:{id:"一-使用-scrapy-生成模板的方式-主要讲解使用scrapy生成crawl模板的方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-使用-scrapy-生成模板的方式-主要讲解使用scrapy生成crawl模板的方式"}},[s._v("#")]),s._v(" （一）使用 scrapy 生成模板的方式(主要讲解使用scrapy生成crawl模板的方式)")]),s._v(" "),r("ul",[r("li",[s._v("之前创建spider文件都是使用的basic模板(不指名模板类型，默认就是basic模板)")])]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("scrapy genspider zhihu www.zhihu.com\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br")])]),r("ul",[r("li",[s._v("查看spider有哪些模板")])]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("scrapy genspider --list\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br")])]),r("ul",[r("li",[r("strong",[r("code",[s._v("明确指明使用crawl生成模板")])])])]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("scrapy genspider -t crawl lagou www.lagou.com\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br")])]),r("h3",{attrs:{id:"二-创建数据表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-创建数据表"}},[s._v("#")]),s._v(" （二）创建数据表")]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br")])]),r("h3",{attrs:{id:"三-crawlspider类介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-crawlspider类介绍"}},[s._v("#")]),s._v(" （三）CrawlSpider类介绍")]),s._v(" "),r("ul",[r("li",[r("strong",[s._v("CrawlSpider继承Spider类")])])]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("在Spider中，发起请求的入口是start_requests方法， parse方法是没有实现的，需要继承者去实现\nCrawlSpider中重写了parse方法。且_parse_response方法需要传递一个回调函数parse_start_url，这个回调函数可以被重载，\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br")])]),r("ul",[r("li",[r("strong",[s._v("CrawlSpider源码逻辑解析")])])]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v('\nimport copy\nimport six\n \nfrom scrapy.http import Request, HtmlResponse\nfrom scrapy.utils.spider import iterate_spider_output\nfrom scrapy.spiders import Spider\n \n \ndef identity(x):  #process_request默认方法,什么也没做\n    return x\n \n \nclass Rule(object):\n \n    def __init__(self, link_extractor, callback=None, cb_kwargs=None, follow=None, process_links=None, process_request=identity):\n        self.link_extractor = link_extractor\n        self.callback = callback\n        self.cb_kwargs = cb_kwargs or {}\n        self.process_links = process_links  #处理url的方法\n        self.process_request = process_request  #处理请求的方法,默认是什么也没做\n        if follow is None: #如果follow没有指定的情况下,使用call贩判断\n            self.follow = False if callback else True  #有callback的时候默认为False,没有默认为True\n        else:\n            self.follow = follow  #否则根据follow的值来判断\n \n \nclass CrawlSpider(Spider):\n \n    rules = ()\n \n    def __init__(self, *a, **kw):\n        super(CrawlSpider, self).__init__(*a, **kw)\n        self._compile_rules()\n \n    def parse(self, response):  #这里最开始处理start_url你的响应,之后会处理其他的响应\n        return self._parse_response(response, self.parse_start_url, cb_kwargs={}, follow=True)\n \n    def parse_start_url(self, response):  #默认该方法求也没干\n        return []\n \n    def process_results(self, response, results): #默认该方法求也没干\n        return results\n \n    def _build_request(self, rule, link):  #构造一个请求\n        #普通的请求,和我们scrapy.Request一样的\n        r = Request(url=link.url, callback=self._response_downloaded)  #构造一个请求,默认respsne交给_response_downloaded处理\n        #添加一些其他信息进去\n        r.meta.update(rule=rule, link_text=link.text)\n        return r\n \n    def _requests_to_follow(self, response):\n        if not isinstance(response, HtmlResponse):\n            return\n        seen = set()\n        for n, rule in enumerate(self._rules):   #继续开始提取url了\n            links = [lnk for lnk in rule.link_extractor.extract_links(response)\n                     if lnk not in seen]\n            if links and rule.process_links:  #如果我们在Rule你面设置process_links方法的话,会用该方法处理一下url地址再使用\n                links = rule.process_links(links)\n            #到这里reponse中经过链接提取器提取的url都拿到了\n            for link in links:\n                seen.add(link)  #简单的使用了一个set过滤\n                r = self._build_request(n, link)  #构造的一个请求\n                yield rule.process_request(r)  #发送了一个请求,默认情况下process_request什么也没干\n \n    def _response_downloaded(self, response):\n        rule = self._rules[response.meta[\'rule\']]\n        return self._parse_response(response, rule.callback, rule.cb_kwargs, rule.follow)\n \n    def _parse_response(self, response, callback, cb_kwargs, follow=True):\n        if callback:\n            cb_res = callback(response, **cb_kwargs) or ()   #默认情况下什么也没干,因为默认start_urls是没callback的,见上面的parse_start_url\n            print(cb_res,"*"*100)\n \n            cb_res = self.process_results(response, cb_res)   #默认情况下什也没做\n            print(cb_res,"-"*100)\n            for requests_or_item in iterate_spider_output(cb_res):  #转化为可迭代对象,但是默认ca_res是空的\n                yield requests_or_item\n \n        if follow and self._follow_links:   #\n            #start_url的默认follow为True,所以该条件成立\n            print("self._follow_links",self._follow_links)\n            for request_or_item in self._requests_to_follow(response):\n                print(request_or_item,"="*100)\n                yield request_or_item  #发送了一个请求,\n \n    def _compile_rules(self):\n        def get_method(method):\n            if callable(method):\n                return method\n            elif isinstance(method, six.string_types):\n                return getattr(self, method, None)\n \n        self._rules = [copy.copy(r) for r in self.rules]\n        for rule in self._rules:\n            rule.callback = get_method(rule.callback)\n            rule.process_links = get_method(rule.process_links)\n            rule.process_request = get_method(rule.process_request)\n \n    @classmethod\n    def from_crawler(cls, crawler, *args, **kwargs):\n        spider = super(CrawlSpider, cls).from_crawler(crawler, *args, **kwargs)\n        spider._follow_links = crawler.settings.getbool(\n            \'CRAWLSPIDER_FOLLOW_LINKS\', True)\n        return spider\n \n    def set_crawler(self, crawler):\n        super(CrawlSpider, self).set_crawler(crawler)\n        #这个地方有个全局的默认设置,可以在setting中配置,默认为True\n        self._follow_links = crawler.settings.getbool(\'CRAWLSPIDER_FOLLOW_LINKS\', True)\n\n')])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br"),r("span",{staticClass:"line-number"},[s._v("2")]),r("br"),r("span",{staticClass:"line-number"},[s._v("3")]),r("br"),r("span",{staticClass:"line-number"},[s._v("4")]),r("br"),r("span",{staticClass:"line-number"},[s._v("5")]),r("br"),r("span",{staticClass:"line-number"},[s._v("6")]),r("br"),r("span",{staticClass:"line-number"},[s._v("7")]),r("br"),r("span",{staticClass:"line-number"},[s._v("8")]),r("br"),r("span",{staticClass:"line-number"},[s._v("9")]),r("br"),r("span",{staticClass:"line-number"},[s._v("10")]),r("br"),r("span",{staticClass:"line-number"},[s._v("11")]),r("br"),r("span",{staticClass:"line-number"},[s._v("12")]),r("br"),r("span",{staticClass:"line-number"},[s._v("13")]),r("br"),r("span",{staticClass:"line-number"},[s._v("14")]),r("br"),r("span",{staticClass:"line-number"},[s._v("15")]),r("br"),r("span",{staticClass:"line-number"},[s._v("16")]),r("br"),r("span",{staticClass:"line-number"},[s._v("17")]),r("br"),r("span",{staticClass:"line-number"},[s._v("18")]),r("br"),r("span",{staticClass:"line-number"},[s._v("19")]),r("br"),r("span",{staticClass:"line-number"},[s._v("20")]),r("br"),r("span",{staticClass:"line-number"},[s._v("21")]),r("br"),r("span",{staticClass:"line-number"},[s._v("22")]),r("br"),r("span",{staticClass:"line-number"},[s._v("23")]),r("br"),r("span",{staticClass:"line-number"},[s._v("24")]),r("br"),r("span",{staticClass:"line-number"},[s._v("25")]),r("br"),r("span",{staticClass:"line-number"},[s._v("26")]),r("br"),r("span",{staticClass:"line-number"},[s._v("27")]),r("br"),r("span",{staticClass:"line-number"},[s._v("28")]),r("br"),r("span",{staticClass:"line-number"},[s._v("29")]),r("br"),r("span",{staticClass:"line-number"},[s._v("30")]),r("br"),r("span",{staticClass:"line-number"},[s._v("31")]),r("br"),r("span",{staticClass:"line-number"},[s._v("32")]),r("br"),r("span",{staticClass:"line-number"},[s._v("33")]),r("br"),r("span",{staticClass:"line-number"},[s._v("34")]),r("br"),r("span",{staticClass:"line-number"},[s._v("35")]),r("br"),r("span",{staticClass:"line-number"},[s._v("36")]),r("br"),r("span",{staticClass:"line-number"},[s._v("37")]),r("br"),r("span",{staticClass:"line-number"},[s._v("38")]),r("br"),r("span",{staticClass:"line-number"},[s._v("39")]),r("br"),r("span",{staticClass:"line-number"},[s._v("40")]),r("br"),r("span",{staticClass:"line-number"},[s._v("41")]),r("br"),r("span",{staticClass:"line-number"},[s._v("42")]),r("br"),r("span",{staticClass:"line-number"},[s._v("43")]),r("br"),r("span",{staticClass:"line-number"},[s._v("44")]),r("br"),r("span",{staticClass:"line-number"},[s._v("45")]),r("br"),r("span",{staticClass:"line-number"},[s._v("46")]),r("br"),r("span",{staticClass:"line-number"},[s._v("47")]),r("br"),r("span",{staticClass:"line-number"},[s._v("48")]),r("br"),r("span",{staticClass:"line-number"},[s._v("49")]),r("br"),r("span",{staticClass:"line-number"},[s._v("50")]),r("br"),r("span",{staticClass:"line-number"},[s._v("51")]),r("br"),r("span",{staticClass:"line-number"},[s._v("52")]),r("br"),r("span",{staticClass:"line-number"},[s._v("53")]),r("br"),r("span",{staticClass:"line-number"},[s._v("54")]),r("br"),r("span",{staticClass:"line-number"},[s._v("55")]),r("br"),r("span",{staticClass:"line-number"},[s._v("56")]),r("br"),r("span",{staticClass:"line-number"},[s._v("57")]),r("br"),r("span",{staticClass:"line-number"},[s._v("58")]),r("br"),r("span",{staticClass:"line-number"},[s._v("59")]),r("br"),r("span",{staticClass:"line-number"},[s._v("60")]),r("br"),r("span",{staticClass:"line-number"},[s._v("61")]),r("br"),r("span",{staticClass:"line-number"},[s._v("62")]),r("br"),r("span",{staticClass:"line-number"},[s._v("63")]),r("br"),r("span",{staticClass:"line-number"},[s._v("64")]),r("br"),r("span",{staticClass:"line-number"},[s._v("65")]),r("br"),r("span",{staticClass:"line-number"},[s._v("66")]),r("br"),r("span",{staticClass:"line-number"},[s._v("67")]),r("br"),r("span",{staticClass:"line-number"},[s._v("68")]),r("br"),r("span",{staticClass:"line-number"},[s._v("69")]),r("br"),r("span",{staticClass:"line-number"},[s._v("70")]),r("br"),r("span",{staticClass:"line-number"},[s._v("71")]),r("br"),r("span",{staticClass:"line-number"},[s._v("72")]),r("br"),r("span",{staticClass:"line-number"},[s._v("73")]),r("br"),r("span",{staticClass:"line-number"},[s._v("74")]),r("br"),r("span",{staticClass:"line-number"},[s._v("75")]),r("br"),r("span",{staticClass:"line-number"},[s._v("76")]),r("br"),r("span",{staticClass:"line-number"},[s._v("77")]),r("br"),r("span",{staticClass:"line-number"},[s._v("78")]),r("br"),r("span",{staticClass:"line-number"},[s._v("79")]),r("br"),r("span",{staticClass:"line-number"},[s._v("80")]),r("br"),r("span",{staticClass:"line-number"},[s._v("81")]),r("br"),r("span",{staticClass:"line-number"},[s._v("82")]),r("br"),r("span",{staticClass:"line-number"},[s._v("83")]),r("br"),r("span",{staticClass:"line-number"},[s._v("84")]),r("br"),r("span",{staticClass:"line-number"},[s._v("85")]),r("br"),r("span",{staticClass:"line-number"},[s._v("86")]),r("br"),r("span",{staticClass:"line-number"},[s._v("87")]),r("br"),r("span",{staticClass:"line-number"},[s._v("88")]),r("br"),r("span",{staticClass:"line-number"},[s._v("89")]),r("br"),r("span",{staticClass:"line-number"},[s._v("90")]),r("br"),r("span",{staticClass:"line-number"},[s._v("91")]),r("br"),r("span",{staticClass:"line-number"},[s._v("92")]),r("br"),r("span",{staticClass:"line-number"},[s._v("93")]),r("br"),r("span",{staticClass:"line-number"},[s._v("94")]),r("br"),r("span",{staticClass:"line-number"},[s._v("95")]),r("br"),r("span",{staticClass:"line-number"},[s._v("96")]),r("br"),r("span",{staticClass:"line-number"},[s._v("97")]),r("br"),r("span",{staticClass:"line-number"},[s._v("98")]),r("br"),r("span",{staticClass:"line-number"},[s._v("99")]),r("br"),r("span",{staticClass:"line-number"},[s._v("100")]),r("br"),r("span",{staticClass:"line-number"},[s._v("101")]),r("br"),r("span",{staticClass:"line-number"},[s._v("102")]),r("br"),r("span",{staticClass:"line-number"},[s._v("103")]),r("br"),r("span",{staticClass:"line-number"},[s._v("104")]),r("br"),r("span",{staticClass:"line-number"},[s._v("105")]),r("br"),r("span",{staticClass:"line-number"},[s._v("106")]),r("br"),r("span",{staticClass:"line-number"},[s._v("107")]),r("br"),r("span",{staticClass:"line-number"},[s._v("108")]),r("br"),r("span",{staticClass:"line-number"},[s._v("109")]),r("br"),r("span",{staticClass:"line-number"},[s._v("110")]),r("br"),r("span",{staticClass:"line-number"},[s._v("111")]),r("br"),r("span",{staticClass:"line-number"},[s._v("112")]),r("br")])]),r("h3",{attrs:{id:"四-自动切换user-agent"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-自动切换user-agent"}},[s._v("#")]),s._v(" （四）自动切换user-agent")]),s._v(" "),r("ul",[r("li",[r("strong",[s._v("编辑settings文件， 添加user_agent_list")])])]),s._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[s._v("\n")])]),s._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[s._v("1")]),r("br")])])])}),[],!1,null,null,null);e.default=a.exports}}]);