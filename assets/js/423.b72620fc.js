(window.webpackJsonp=window.webpackJsonp||[]).push([[423],{2333:function(s,a,e){"use strict";e.r(a);var n=e(9),r=Object(n.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"高阶函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#高阶函数"}},[s._v("#")]),s._v(" 高阶函数")]),s._v(" "),e("h3",{attrs:{id:"一-如何定义高阶函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-如何定义高阶函数"}},[s._v("#")]),s._v(" (一) 如何定义高阶函数")]),s._v(" "),e("ul",[e("li",[s._v("在数学中高阶函数的定义")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("y = f(g(x))\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ul",[e("li",[s._v("在数学和计算机科学中，高阶函数是至少满足下列一个条件的函数")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("接受一个或多个函数作为输入\n\n输出一个函数\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("ul",[e("li",[s._v("在数学中它们叫算子(运算符)或泛函。微积分中的导数就是常见的例子，因为它映射一个函数到另一个函数")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("f = x + 3\ng = x * x\ng(f(7)) 结果是100\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("ul",[e("li",[s._v("举例说明")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("def f(x):\n    return x + 3\n\ndef g(x):\n    return x * x\n\nresult = g(f(7))\nprint(result)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h3",{attrs:{id:"二-标准库中的高阶函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-标准库中的高阶函数"}},[s._v("#")]),s._v(" (二) 标准库中的高阶函数")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("sorted(iterable[, key][, reverse])")]),s._v("，第一个参数为iterable：可迭代对象，第二个参数为key：是一个函数，第三个参数是reverse：是bool类型")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("new_str = sorted('abcdefg', reverse=True)\nprint(new_str)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("ul",[e("li",[s._v("这里的iterable_obj是一个嵌套列表，func是一个lambda函数，指定使用哪个元素进行排序，这个lambda函数输出的是x[1]，说明使用的是每一个元素的第二项进行排序，reverse为True，表示正序排序")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("iterable_obj = [[1,2], [2,3], [4,1], [7,3], [100,23], [34,11]]\nfunc = lambda x: x[1]\nnew_list = sorted(iterable_obj, key=func, reverse=False)\nprint(new_list) # 输出 [[4, 1], [1, 2], [2, 3], [7, 3], [34, 11], [100, 23]]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("ul",[e("li",[e("code",[s._v("filter(function, iterable) --\x3e filter object")]),s._v(", 第一个参数是一个函数，实现过滤，第二个参数是可迭代对象")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 如果[-3,-2,-1,1,2,3]的元素大于0，那么传递到lambda函数为True，那么就会被保留下来，其余的丢弃。因此最后的结果是大于0的元素保留，小于0的元素丢弃\n\n\nresult = filter(lambda x: x > 0 , [-3,-2,-1,1,2,3])\nprint(result)  # filter object\nfor i in result:\n    print(i) # 1,2,3\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("ul",[e("li",[e("code",[s._v("map(func, *iterables) --\x3e map object")]),s._v("：第一个参数func为函数，实现函数映射的功能，第二个参数iterables为可迭代对象")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# lambda函数是实现映射，map函数的功能是将列表中的每一个元素+1，且返回新列表\n\nmap_obj1 = map(lambda x: x+1, [1,2,3])\nprint(map_obj1) # <map object at 0x10ab5b8d0>\nfor i in map_obj1:\n    print(i) # 2, 3, 4\n\n\n# 这里传递了两个列表，必须将这两个列表封包传递\nmap_obj2 = map(lambda x, y: x+y, *([1,2,3], [1,2,3]))\nprint(map_obj2) # <map object at 0x101d6ed68>\nfor i in map_obj2:\n    print(i) # 2, 4, 6\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("h3",{attrs:{id:"三-自实现高阶函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-自实现高阶函数"}},[s._v("#")]),s._v(" (三) 自实现高阶函数")]),s._v(" "),e("ul",[e("li",[s._v("sorted高阶函数自实现")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("def my_sorted(iterable, key=lambda a,b: a<b, reverse=False):\n    ret = []\n    for x in iterable:\n        for i, y in enumerate(ret):\n            isReverse = reverse\n            if key(x,y) if not isReverse else key(y,x):\n                ret.insert(i, x)\n                break\n        else:\n            ret.append(x)\n    return ret\n\n\nprint(my_sorted([3,21,3,4,5], reverse=False))\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("h3",{attrs:{id:"四-函数的柯里化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四-函数的柯里化"}},[s._v("#")]),s._v(" (四) 函数的柯里化")]),s._v(" "),e("ul",[e("li",[s._v("在数学中，柯里化即：将f(x, y) 转换为 f(x)(y)的形式， f(x, y) = f(x)(y)")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("# 代码转换过程\ndef add(x, y):\n    return x + y\n\nprint(add(1,2))\n\n\n\ndef add_currying(x):\n    def _add(y):\n        return x + y\n\n    return _add\n\nprint(add_currying(1)(2))\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);