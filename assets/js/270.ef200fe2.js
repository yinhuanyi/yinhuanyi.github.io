(window.webpackJsonp=window.webpackJsonp||[]).push([[270],{2375:function(s,n,t){"use strict";t.r(n);var e=t(9),a=Object(e.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"一-socket"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-socket"}},[s._v("#")]),s._v(" 一：socket")]),s._v(" "),e("h3",{attrs:{id:"一-什么是socket编程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-什么是socket编程"}},[s._v("#")]),s._v(" (一) 什么是socket编程")]),s._v(" "),e("ul",[e("li",[s._v("概念")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("1：socket：中文称为套接字\n\n2：线程之间的通信有很多种形式，例如event时间，lock锁，信号量，queue队列等\n\n3：进程之间的通信(IPC: Inter-Process Communication)，一般使用套接字，当然还有其他的通信方式，套接字的IPC方式使得跨平台之间的进程通信成为可能。最早的socket是在BSD-Unix平台上发布，最终成为了行业标准，使得计算机之间的通信变得非常简单\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("ul",[e("li",[s._v("客户端示例代码")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import socket\n\n# socket.AF_INET, socket.SOCK_STREAM默认参数\nsocket_instance = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsocket_instance.connect(('www.baidu.com', 80))\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("ul",[e("li",[s._v("socket( )类详解")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("\t套接字格式：socket(family, type[,protocal]) 使用给定的套接族，套接字类型，协议编号（默认为0）来创建套接字\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[s._v("socket 类型")]),s._v(" "),e("th",{staticStyle:{"text-align":"center"}},[s._v("意义")])])]),s._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[s._v("socket.AF_UNIX")]),s._v(" "),e("td",{staticStyle:{"text-align":"center"}},[s._v("用于同一台机器上的进程通信（既本机通信）")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[s._v("socket.AF_INET")]),s._v(" "),e("td",{staticStyle:{"text-align":"center"}},[s._v("用于服务器与服务器之间的网络通信")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[s._v("socket.AF_INET6")]),s._v(" "),e("td",{staticStyle:{"text-align":"center"}},[s._v("基于IPV6方式的服务器与服务器之间的网络通信")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[s._v("socket.SOCK_STREAM")]),s._v(" "),e("td",{staticStyle:{"text-align":"center"}},[s._v("基于TCP的流式socket通信")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[s._v("socket.SOCK_DGRAM")]),s._v(" "),e("td",{staticStyle:{"text-align":"center"}},[s._v("基于UDP的数据报式socket通信")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[s._v("socket.SOCK_RAW")]),s._v(" "),e("td",{staticStyle:{"text-align":"center"}},[s._v("原始套接字，普通的套接字无法处理ICMP、IGMP等网络报文，而SOCK_RAW可以；其次SOCK_RAW也可以处理特殊的IPV4报文；此外，利用原始套接字，可以通过IP_HDRINCL套接字选项由用户构造IP头")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[s._v("socket.SOCK_SEQPACKET")]),s._v(" "),e("td",{staticStyle:{"text-align":"center"}},[s._v("可靠的连续数据包服务")])])])]),s._v(" "),e("h3",{attrs:{id:"二-tcp服务器端和客户端简单实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-tcp服务器端和客户端简单实现"}},[s._v("#")]),s._v(" (二) TCP服务器端和客户端简单实现")]),s._v(" "),e("ul",[e("li",[s._v("TCP服务端代码示例")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import socket\nfrom pprint import pprint\n\n# 创建TCP连接\nsocket_instance = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsocket_instance.bind(('127.0.0.1', 9000))\n# 操作系统可以挂起的最大连接数，如果同一时间的连接数超过5，拒绝其他的连接\nsocket_instance.listen(5)\n\n# 循环接收新的客户端连接\nwhile True:\n    # 接收客户端的请求，且获取新socket对象和客户端信息\n    new_socket, client_addr = socket_instance.accept()\n\n    # 循环接收已连接的客户端发送的数据\n    while True:\n        # 从缓存区中读取1024字节信息\n        data = new_socket.recv(1024).decode()\n        # 返回客户端的一下信息\n        pprint(data)\n        # 返回客户端地址 ('127.0.0.1', 51978)\n        pprint(client_addr)\n        # 发送数据\n        new_socket.sendall('Server has received your msg'.encode())\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br")])]),e("ul",[e("li",[s._v("TCP服务端代码示例")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import socket\n\n\n# 创建TCP连接\nsocket_instance = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsocket_instance.connect(('127.0.0.1', 9000))\n\nwhile True:\n    cmd = input(\"请输入您想说的话:\")\n    socket_instance.send(cmd.encode())\n    data = socket_instance.recv(1024)\n    print(data)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("h3",{attrs:{id:"三-udp服务器端和客户端简单实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-udp服务器端和客户端简单实现"}},[s._v("#")]),s._v(" (三) UDP服务器端和客户端简单实现")]),s._v(" "),e("ul",[e("li",[s._v("UDP服务器端代码实现")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import socket\n\n\n# 创建UDP连接\nsocket_instance = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\nsocket_instance.bind(('127.0.0.1', 9000))\n\n\n# 循环接收新的客户端连接\nwhile True:\n    # 接收客户端的请求，且获取新socket对象和客户端信息\n    data, client_addr = socket_instance.recvfrom(1024)\n    print(data.decode())\n    socket_instance.sendto('Server has receive your data'.encode(), client_addr)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("ul",[e("li",[s._v("UDP客户端代码实现")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import socket\n\n# 创建socket实例\nsocket_instance = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\n\nwhile True:\n    data = input(\"请输入您想说的话:\")\n    socket_instance.sendto(data.encode(), ('127.0.0.1', 9000))\n    data, server_addr = socket_instance.recvfrom(1024)\n    print(data.decode())\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("h2",{attrs:{id:"二-socket-相关方法列表"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-socket-相关方法列表"}},[s._v("#")]),s._v(" 二：socket 相关方法列表")]),s._v(" "),e("ul",[e("li",[s._v("1：服务器端socket实例对象创建连接的方法")])]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[s._v("socket_instance的方法")]),s._v(" "),e("th",{staticStyle:{"text-align":"left"}},[s._v("意义")])])]),s._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("socket_instance.bind(address)")]),s._v(" "),e("td",{staticStyle:{"text-align":"left"}},[s._v("将套接字绑定到地址，在AF_INET下，以tuple(host, port)的方式传入，如s.bind((host, port))")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("socket_instance.listen(backlog)")]),s._v(" "),e("td",{staticStyle:{"text-align":"left"}},[s._v("开始监听TCP传入连接，backlog指定在拒绝链接前，操作系统可以挂起的最大连接数，大部分应用程序设为5就够用了")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("socket_instance.accept()")]),s._v(" "),e("td",{staticStyle:{"text-align":"left"}},[s._v("接受TCP链接并返回（new_socket, address），其中new_socket是新的套接字对象，可以用来接收和发送数据，address是链接客户端的地址")])])])]),s._v(" "),e("ul",[e("li",[s._v("2：客户端socket实例对象创建连接的方法")])]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[s._v("socket_instance的方法")]),s._v(" "),e("th",{staticStyle:{"text-align":"left"}},[s._v("意义")])])]),s._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("socket_instance.connect(address)")]),s._v(" "),e("td",{staticStyle:{"text-align":"left"}},[s._v("连接到address处的套接字，一般address的格式为tuple(host, port)，如果链接出错，则返回socket.error错误")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("socket_instance.connect_ex(address)")]),s._v(" "),e("td",{staticStyle:{"text-align":"left"}},[s._v("功能与s.connect(address)相同，但成功返回0，失败返回errno的值")])])])]),s._v(" "),e("ul",[e("li",[s._v("3：客户端和服务器端socket实例对象都有的方法")])]),s._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[s._v("socket_instance的方法")]),s._v(" "),e("th",{staticStyle:{"text-align":"left"}},[s._v("意义")])])]),s._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("socket_instance.recv(bufsize[, flag])")]),s._v(" "),e("td",{staticStyle:{"text-align":"left"}},[s._v("接受TCP套接字的数据，数据以字符串形式返回，buffsize指定要接受的最大数据量，flag提供有关消息的其他信息，通常可以忽略")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("socket_instance.send(string[, flag])")]),s._v(" "),e("td",{staticStyle:{"text-align":"left"}},[s._v("发送TCP数据，将字符串中的数据发送到链接的套接字，返回值是要发送的字节数量，该数量可能小于string的字节大小")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("socket_instance.sendall(string[, flag])")]),s._v(" "),e("td",{staticStyle:{"text-align":"left"}},[s._v("完整发送TCP数据，将字符串中的数据发送到链接的套接字，但在返回之前尝试发送所有数据。成功返回None，失败则抛出异常")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("socket_instance.recvfrom(bufsize[, flag])")]),s._v(" "),e("td",{staticStyle:{"text-align":"left"}},[s._v("接受UDP套接字的数据，与recv()类似，但返回值是tuple(data, address)。其中data是包含接受数据的字符串，address是发送数据的套接字地址")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("socket_instance.sendto(string[, flag], address)")]),s._v(" "),e("td",{staticStyle:{"text-align":"left"}},[s._v("发送UDP数据，将数据发送到套接字，address形式为tuple(ipaddr, port)，指定远程地址发送，返回值是发送的字节数")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("socket_instance.close()")]),s._v(" "),e("td",{staticStyle:{"text-align":"left"}},[s._v("关闭套接字")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("socket_instance.getpeername()")]),s._v(" "),e("td",{staticStyle:{"text-align":"left"}},[s._v("返回套接字的远程地址，返回值通常是一个tuple(ipaddr, port)")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("socket_instance.getsockname()")]),s._v(" "),e("td",{staticStyle:{"text-align":"left"}},[s._v("返回套接字自己的地址，返回值通常是一个tuple(ipaddr, port)")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("socket_instance.settimeout(timeout)")]),s._v(" "),e("td",{staticStyle:{"text-align":"left"}},[s._v("设置套接字操作的超时时间，timeout是一个浮点数，单位是秒，值为None则表示永远不会超时。一般超时期应在刚创建套接字时设置，因为他们可能用于连接的操作，如s.connect()")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("socket_instance.gettimeout()")]),s._v(" "),e("td",{staticStyle:{"text-align":"left"}},[s._v("返回当前超时值，单位是秒，如果没有设置超时则返回None")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("socket_instance.fileno()")]),s._v(" "),e("td",{staticStyle:{"text-align":"left"}},[s._v("返回套接字的文件描述")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("socket_instance.setblocking(flag)")]),s._v(" "),e("td",{staticStyle:{"text-align":"left"}},[s._v("如果flag为0，则将套接字设置为非阻塞模式，否则将套接字设置为阻塞模式（默认值）。非阻塞模式下，如果调用recv()没有发现任何数据，或send()调用无法立即发送数据，那么将引起socket.error异常")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("socket_instance.makefile()")]),s._v(" "),e("td",{staticStyle:{"text-align":"left"}},[s._v("创建一个与该套接字相关的文件")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("socket_instance.setsockopt(level, optname, value)")]),s._v(" "),e("td",{staticStyle:{"text-align":"left"}},[s._v("设置给定套接字选项的值")])]),s._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[s._v("socket_instance.getsockopt(level, optname[, buflen])")]),s._v(" "),e("td",{staticStyle:{"text-align":"left"}},[s._v("返回套接字选项的值")])])])]),s._v(" "),e("h2",{attrs:{id:"三-基于线程实现tcp和udp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-基于线程实现tcp和udp"}},[s._v("#")]),s._v(" 三：基于线程实现TCP和UDP")]),s._v(" "),e("h3",{attrs:{id:"一-线程级别的tcpserver"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-线程级别的tcpserver"}},[s._v("#")]),s._v(" (一) 线程级别的TCPServer")]),s._v(" "),e("ul",[e("li",[s._v("1：服务器端")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import threading\nimport logging\nimport socket\nfrom pprint import pprint\n\nlogging.basicConfig(level=logging.INFO, format='%(message)s', filename='./app.log')\n\n\ndef showThread():\n    while not threading.Event().wait(3):\n        logging.info(threading.enumerate())\n        logging.info(threading.active_count())\n\nclass ChatServer:\n    # 初始化：绑定端口\n    def __init__(self, ip='127.0.0.1', port=9000):\n        self.socket = socket.socket()\n        self.addr = (ip, port)\n        self.event = threading.Event()\n        self.clients = {}\n\n    def start(self):\n        # 绑定地址，监听地址\n        self.socket.bind(self.addr)\n        self.socket.listen(10)\n\n        # 将阻塞的accept()方法放到线程执行\n        threading.Thread(target=self.__accept, name='accept').start()\n\n    def __accept(self):\n        # 阻塞的accept()方法，只要请求进来，就响应\n        while not self.event.is_set():\n            try:\n                conn, addr= self.socket.accept()\n                self.clients[addr] = conn\n                threading.Thread(target=self.__receive, args=(addr,), name='receive').start()\n                pprint(self.clients)\n                \n            except Exception as e:\n                print(e)\n\n    def __receive(self, addr):\n\n        while not self.event.is_set():\n            conn = self.clients[addr]\n            try:\n                data = conn.recv(1024).decode()\n            except Exception as e:\n                data = 'quit'\n\n            print(data)\n            if data.strip() == 'quit':\n                print('~~~~~~~~~~~quit')\n                conn.close()\n                self.clients.pop(addr)\n                break\n\n            pprint(self.clients)\n            # 这里改下可以变为群聊\n            if addr in self.clients.keys():\n                try:\n                    conn.send('回复{}的请求\\n'.format(addr).encode())\n                except Exception as e:\n                    print(e)\n\n\n    def stop(self):\n        self.event.set()\n        conn_list = self.clients.values()\n        for conn in conn_list:\n            conn.close()\n        self.event.wait(1)\n        try:\n            self.socket.close()\n        except ConnectionAbortedError as e:\n            print(e)\n\n\nif __name__ == '__main__':\n\n    # 2 初始化ChatServer\n    chatServer = ChatServer()\n\n    # 3：用户循环输入数据\n    while True:\n        cmd = input('请输入命令: ').strip()\n        if cmd == 'start':\n            chatServer.start()\n            print('chatServer is start')\n        elif cmd == 'stop':\n            chatServer.stop()\n            print('chatServer is stop')\n            break\n        else:\n            print('请输入start or stop')\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br"),e("span",{staticClass:"line-number"},[s._v("95")]),e("br")])]),e("ul",[e("li",[s._v("2：TCP客户端")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import socket\n\n\n# 创建TCP连接\nsocket_instance = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsocket_instance.connect(('127.0.0.1', 9000))\n\nwhile True:\n    cmd = input(\"请输入您想说的话:\")\n    socket_instance.send(cmd.encode())\n    data = socket_instance.recv(1024)\n    print(data.decode())\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("h3",{attrs:{id:"二-线程级别的udpserver"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-线程级别的udpserver"}},[s._v("#")]),s._v(" (二) 线程级别的UDPServer")]),s._v(" "),e("ul",[e("li",[s._v("UDP服务器端")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import threading\nimport socket\n\n\n\nclass Server:\n    # 初始化：绑定端口\n    def __init__(self, ip='127.0.0.1', port=9000):\n        self.socket_instance = socket.socket(type=socket.SOCK_DGRAM)\n        self.addr = (ip, port)\n        self.event = threading.Event()\n        self.clients = set()\n        self.__run()\n\n    def __run(self):\n        # 绑定地址，监听地址\n        self.socket_instance.bind(self.addr)\n\n        # 将阻塞的__recvfrom()方法放到线程执行\n        threading.Thread(target=self.__recvfrom, name='recvfrom').start()\n\n    def __recvfrom(self):\n        while not self.event.is_set():\n            try: # 这里捕获异常是由于一旦关闭socket，那么data, addr不会获取到值，那么应该捕获异常，给data, addr赋值\n                data, addr = self.socket_instance.recvfrom(1024)\n                data = data.decode().strip()\n                print(data)\n            except Exception as e:\n                data = 'quit'\n                addr = 'None'\n\n            # 拿到心跳信息\n            if data == '@#!%%^SDF@':\n                self.clients.add(addr)\n                continue\n\n            # 拿到数据, 如果是quit\n            if data == 'quit':\n                if addr in self.clients:\n                    self.clients.remove(addr)\n                # 这里continue的原因是，udp不需要与客户端建立连接，每次请求来了以后，可以直接拿到客户端发送的数据\n                # 不是break\n                continue\n            self.clients.add(addr)\n\n            threading.Thread(target=self.__send,args=(data, ), name='send').start()\n\n    def __send(self, data):\n        for addr in self.clients:\n            self.socket_instance.sendto('Robby收到{}\\n'.format(data).encode(), addr)\n\n    def stop(self):\n        self.clients.clear()\n        self.event.set()\n        self.event.wait(3)\n        self.socket_instance.close()\n        print('UDP服务器停止')\n        raise SystemExit(0)\n\n\nif __name__ == '__main__':\n    # 1: 启动服务器端\n    chatServer = Server()\n\n    # 2：用户可以输入quit暂停服务器\n    while True:\n        cmd = input('请输入命令: ').strip()\n        chatServer.stop() if cmd == 'quit' else print('可以输入quit暂停服务器端')\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br")])]),e("ul",[e("li",[s._v("UDP客户端")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import threading\nimport socket\n\n\nclass Client:\n    def __init__(self, ip='127.0.0.1', port=9000, interval=5):\n        self.socket_instance = socket.socket(family=socket.AF_INET, type=socket.SOCK_DGRAM)\n        self.addr = (ip, port)\n        self.event = threading.Event()\n        self.interval = interval\n        self.__run()\n\n\n    def __sendHeartBeat(self):\n        while not self.event.wait(5):\n            # 客户端发送的心跳包，服务器端不会回包\n            self.socket_instance.sendto('@#!%%^SDF@'.encode(), self.addr)\n\n    def __recvfrom(self):\n        while not self.event.is_set():\n            try:\n                data, addr = self.socket_instance.recvfrom(1024)\n                print(addr)\n                print(data.decode())\n            except Exception as e:\n                print(e)\n\n    def __serverQuit(self):\n        self.socket_instance.sendto('quit'.encode(), self.addr)\n\n    def send(self, data:str):\n        self.socket_instance.sendto(data.encode(), self.addr)\n\n    def __run(self):\n        # 启动一个线程，发送心跳包\n        threading.Thread(target=self.__sendHeartBeat, daemon=True).start()\n\n        # 启动一个线程，接收数据\n        threading.Thread(target=self.__recvfrom, ).start()\n\n    def stop(self):\n        self.__serverQuit()\n        self.event.set()\n        self.event.wait(3)\n        self.socket_instance.close()\n        print('UDP客户端停止')\n        raise SystemExit(0)\n\n\nif __name__ == '__main__':\n    # 1：启动客户端\n    client = Client()\n\n    # 客户端可以像服务器端发送数据\n    while True:\n        cmd = input('请输入内容：').strip()\n        client.stop() if cmd == 'quit' else client.send(cmd)\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br")])]),e("h2",{attrs:{id:"四-udp穿透-内网透传"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四-udp穿透-内网透传"}},[s._v("#")]),s._v(" 四：UDP穿透，内网透传")]),s._v(" "),e("p",[e("img",{attrs:{src:t(939),alt:"Alt text"}})]),s._v(" "),e("ul",[e("li",[s._v("UDP穿透原理")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("①：发送UDP报文被公网Server，获取对方的核心路由器IP、Port\n\n②：Client1获取到【核心路由器2】的IP、Port后，发送UDP包给【核心路由器2】，【核心路由器2】收到包后，将报文丢弃，因为本地没有NAT记录，不知道将包转发给谁。但是此时【核心路由器1】在本地记录了一条NAT规则，任何报文发送到【核心路由器1】都会转发给Client1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h3",{attrs:{id:"_1-服务器端代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-服务器端代码"}},[s._v("#")]),s._v(" 1: 服务器端代码")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import socket\n\n\n\n# 建立udp socket\nUDPSock = socket.socket(socket.AF_INET,socket.SOCK_DGRAM)\nlisten_addr = (\"0.0.0.0\", 3386)\nUDPSock.bind(listen_addr)\n\n\n# array列表\nips = []\n\nwhile True:\n    #接收資料\n    data, addr = UDPSock.recvfrom(1024)\n    print('data---[{}] addr---[{}]'.format(data, addr))\n\n    ips.append(str(addr[0]) + ':' + str(addr[1]))\n\n    print(ips)\n\n    # 当第二个udp请求进来的时候，进行IP交换\n    if(len(ips) == 2):\n\n        # 下面实现如何进行IP交换\n        dest = ''\n        for ip in ips:\n\n            # 拿到对方的IP和端口， 例如ip是192.168.10.10   i就是192.168.10.11\n            for i in ips:\n                if ip != i:\n\n                    dest = i.encode()\n\n            # 将A的socket发送给B，B的socket发送给A\n            UDPSock.sendto(dest, (ip.split(':')[0], int(ip.split(':')[1])))\n            print('发送的data==[{}]  客户端的IP和端口==[{}]'.format(dest, ip))\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br")])]),e("h3",{attrs:{id:"_2-客户端代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-客户端代码"}},[s._v("#")]),s._v(" 2: 客户端代码")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import socket\nfrom threading import Thread\nfrom time import sleep\n\n\n# 创建UDP连接\nUDPSock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\ndata = 'hello'.encode()\n\n# 连接tracker服务器\naddr = (\"120.79.55.186\", 3386)\n\n# 先给SERVER发送封包，服务器获取client的IP地址\nUDPSock.sendto(data, addr)\n\n# 接收到服务器的另外一台主机的IP：PORT\ndest, _ = UDPSock.recvfrom(1024)\ndest = dest.decode()\nprint('别人的IP和端口=={}'.format(dest))\n\n# 拿到了其他客户端的IP端口之后，进行打洞\ndef threaded_function(arg):\n    for i in range(100):\n        msg = '{} hello'.format(i)\n        print('发送了数据包给---[{}]'.format(arg))\n        UDPSock.sendto(msg.encode(), (arg.split(':')[0], int(arg.split(':')[1])))\n        sleep(1)\n\n\n# 开始给其他的客户端发包\nmsg = '客户端1'.encode()\nUDPSock.sendto(msg, (dest.split(':')[0], int(dest.split(':')[1])))\n\n# 这里是不断的给其他的客户端发包\nthread = Thread(target=threaded_function, args=(dest,))\nthread.start()\n\n\n# 持續接收封包\nwhile True:\n    print('开始接收其他客户端的数据包')\n    data, adr = UDPSock.recvfrom(1024)\n    print('其他客户端的data==[{}]  其他客户端的地址==[{}]'.format(data, adr))\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br")])])])}),[],!1,null,null,null);n.default=a.exports},939:function(s,n,t){s.exports=t.p+"assets/img/2021-09-026.03.31.7ad76c7c.png"}}]);