(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{2200:function(s,n,t){"use strict";t.r(n);var a=t(9),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"一-项目代码结构设计"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-项目代码结构设计"}},[s._v("#")]),s._v(" 一：项目代码结构设计")]),s._v(" "),a("h3",{attrs:{id:"一-接口设计设计思想-这里以product为例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-接口设计设计思想-这里以product为例"}},[s._v("#")]),s._v(" (一) 接口设计设计思想，这里以product为例")]),s._v(" "),a("ul",[a("li",[s._v("1："),a("code",[s._v("在datamodels里面")]),s._v("定义了"),a("code",[s._v("数据结构体")]),s._v("，这个结构体需要注意的是，属性的"),a("code",[s._v("ipfsmain标签")]),s._v("，当获取用户的form请求数据的时候，可以将表单数据映射到这个标签里面，"),a("code",[s._v("从而实现 map -> struct转换")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('type Product struct {\n\tId int64 `json:"id" sql:"id" ipfsmain:"id"`\n\tProductName string `json:"productName" sql:"productName" ipfsmain:"productName"`\n\tProductNum int64 `json:"productNum" sql:"productNum" ipfsmain:"productNum"`\n\tProductImage string `json:"productImage" sql:"productImage" ipfsmain:"productImage"`\n\tProductUrl string `json:"productUrl" sql:"productUrl" ipfsmain:"productUrl"`\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("ul",[a("li",[s._v("2："),a("code",[s._v("在repositories里面")]),s._v("定义了操作数据的方法，这里的设计是："),a("code",[s._v("接口->结构体->构造函数->实现接口的方法")]),s._v("，因此，只需要外部调用构造函数，获取到实例对象，就可以调用接口的方法，从而实现操作数据的目的")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('1：IProduct 定义接口\ntype IProduct interface {\n\tConn() error\n\tInsert(*datamodels.Product) (int64, error)\n\tDelete(int64) bool\n\tUpdate(*datamodels.Product) error\n\tSelectByKey(int64) (*datamodels.Product, error)\n\tSelectAll()([]*datamodels.Product, error)\n\tSubProductNum(int64) error\n}\n\n2：ProductManager 定义数据操作结构体\ntype ProductManager struct {\n\ttable string // 实例中保存了表名称，数据库连接对象\n\tmysqlConn *sql.DB\n}\n\n3：NewProductManager 定义构造函数，返回的是结构体指针，返回值类型是接口\nfunc NewProductManager(table string, db *sql.DB) IProduct {\n\treturn &ProductManager{table: table, mysqlConn: db}\n}\n\n4：下面是实现接口的方法\n// Conn 数据连接，把数据库连接对象的创建放在这里是错误的，会导致每次连接数据库，都会创建一个连接请求，\nfunc (p *ProductManager) Conn() (err error) {\n\tif p.mysqlConn == nil {\n\t\tmysql, err := common.NewMysqlConn()\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tp.mysqlConn = mysql\n\t}\n\tif p.table == "" {\n\t\tp.table = "product"\n\t}\n\treturn\n}\n\n//Insert 插入\nfunc (p *ProductManager) Insert(product *datamodels.Product) (productId int64, err error) {\n\n\t//1.判断连接是否存在\n\tif err = p.Conn(); err != nil {\n\t\treturn\n\t}\n\n\t//2.准备sql\n\t//sql := "INSERT product SET productName=?,productNum=?,productImage=?,productUrl=?"\n\tsql := `INSERT INTO product(productName, productNum, productImage, productUrl) values (?,?,?,?)`\n\tstmt, errSql := p.mysqlConn.Prepare(sql)\n\tif errSql != nil {\n\t\treturn 0, errSql\n\t}\n\n\t//3.传入参数\n\tresult, errStmt := stmt.Exec(product.ProductName, product.ProductNum, product.ProductImage, product.ProductUrl)\n\tif errStmt != nil {\n\t\treturn 0, errStmt\n\t}\n\t// 返回ID\n\treturn result.LastInsertId()\n\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br")])]),a("ul",[a("li",[s._v("3："),a("code",[s._v("在services里面")]),s._v("定义了逻辑方法，这里的设计也是："),a("code",[s._v("接口->结构体->构造函数->实现接口的方法")]),s._v("，那么为什么有操作数据的方法，还需要有数据逻辑的方法呢？"),a("code",[s._v("这里考虑到操作数据的方法是直接将数据返回，那么services里面在调用数据方法的时候，可以对多个接口的数据进行聚合或者过滤，可以认为是数据逻辑层")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1：IProductService 接口\ntype IProductService interface {\n\tGetProductByID(int64) (*datamodels.Product, error)\n\tGetAllProduct() ([]*datamodels.Product, error)\n\tDeleteProductByID(int64) bool\n\tInsertProduct(product *datamodels.Product) (int64, error)\n\tUpdateProduct(product *datamodels.Product) error\n\tSubNumOne(productID int64) error\n}\n\n2：ProductService 结构体，属性是调用数据接口实例\ntype ProductService struct {\n\tproductRepository repositories.IProduct\n}\n\n3：NewProductService 构造函数\nfunc NewProductService(repository repositories.IProduct) IProductService {\n\treturn &ProductService{repository}\n}\n\n4：GetProductByID 实现接口的方法，基于ID获取数据\nfunc (p *ProductService) GetProductByID(productID int64) (*datamodels.Product, error) {\n\treturn p.productRepository.SelectByKey(productID)\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("ul",[a("li",[s._v("4："),a("code",[s._v("在controller里面")]),s._v("，处理用户的请求，基于用户提交的form参数将数据映射到数据结构体，再调用services里面的方法，返回json数据或者view模板。以下面的一个PostUpdate操作为例，用户请求localhost:8080/product/update的post方法，就会路由到这个controller中")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('// 将service的实例作为controller的属性，这样就可以在controller中调用service了\ntype ProductController struct {\n\tCtx            iris.Context\n\tProductService services.IProductService\n}\n\nfunc (p *ProductController) PostUpdate() {\n\tproduct := &datamodels.Product{}\n\tp.Ctx.Request().ParseForm() // 解析传递的参数\n\tdec := common.NewDecoder(&common.DecoderOptions{TagName: "ipfsmain"}) //\n\tif err := dec.Decode(p.Ctx.Request().Form, product); err != nil {\n\t\tp.Ctx.Application().Logger().Debug(err)\n\t}\n\terr := p.ProductService.UpdateProduct(product)\n\tif err != nil {\n\t\tp.Ctx.Application().Logger().Debug(err)\n\t}\n\tp.Ctx.Redirect("/product/all")\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("ul",[a("li",[s._v("5："),a("code",[s._v("在main.go文件中")]),s._v("，将请求路径与controller绑定")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('productRepository := repositories.NewProductManager("product", db) \nproductSerivce := services.NewProductService(productRepository)     \nproductParty := app.Party("/product")                          \nproduct := mvc.New(productParty)                         \nproduct.Register(ctx, productSerivce)\n# 将/product的请求都交由ProductController处理\nproduct.Handle(new(controllers.ProductController))\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"二-防止超卖的思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-防止超卖的思想"}},[s._v("#")]),s._v(" (二) 防止超卖的思想")]),s._v(" "),a("ul",[a("li",[s._v("这里只是创建了一个全局的"),a("code",[s._v("getOne")]),s._v("服务，并且只有一个接口，目的是让用户下单之前，防止商品超卖。并且在getOne.go代码中，"),a("code",[s._v("商品的库存是写死的，肯定不对")]),s._v("，代码中只是使用了"),a("code",[s._v("sync.Mutex")]),s._v("互斥锁，在商品扣减过程中，防止并发问题导致的临界资源争抢，使得数据错误问题。下面是getOne.go代码，他是一个监听在"),a("code",[s._v("192.168.100.201:12345")]),s._v("的服务")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('package main\n\nimport (\n\t"fmt"\n\t"log"\n\t"net/http"\n\t"sync"\n)\n\n// 用于计数，成功秒杀了一个商品，sum就++\nvar sum int64 = 0\n\n// 预存商品数量\nvar productNum int64 = 10000\n\n// 互斥锁\nvar mutex sync.Mutex\n\n//\nvar count int64 = 0\n\n// GetOneProduct 获取秒杀商品\nfunc GetOneProduct() bool {\n\tmutex.Lock()\n\tdefer mutex.Unlock()\n\n\t//count += 1\n\t//if count % 100 == 0 {\n\tif sum < productNum { // 如果是10001个用户访问商品，那么返回false\n\t\tsum += 1\n\t\treturn true\n\t}\n\t//}\n\treturn false\n}\n\n// GetProduct 这个是handler\nfunc GetProduct(w http.ResponseWriter, req *http.Request) {\n\tif GetOneProduct() {\n\t\tfmt.Println("success")\n\t\tw.Write([]byte("true"))\n\t\treturn\n\t}\n\tw.Write([]byte("false"))\n\treturn\n}\n\nfunc main() {\n\thttp.HandleFunc("/getOne", GetProduct)\n\terr := http.ListenAndServe("192.168.100.201:12345", nil)\n\tif err != nil {\n\t\tlog.Fatal("Err:", err)\n\t}\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br")])]),a("h3",{attrs:{id:"三-用户合法性验证、分布式权限验证、防止暴库的思想"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-用户合法性验证、分布式权限验证、防止暴库的思想"}},[s._v("#")]),s._v(" (三) 用户合法性验证、分布式权限验证、防止暴库的思想")]),s._v(" "),a("ul",[a("li",[s._v("在"),a("code",[s._v("validate.go")]),s._v("中，主要针对用户的下单接口，当用户访问"),a("code",[s._v("/check")]),s._v("接口的时候，会带上productId和cookie信息。整个下的业务的流程图如下")])]),s._v(" "),a("p",[a("img",{attrs:{src:t(717),alt:"Alt text"}})]),s._v(" "),a("h2",{attrs:{id:"二-项目中应用到的技术点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-项目中应用到的技术点"}},[s._v("#")]),s._v(" 二：项目中应用到的技术点")]),s._v(" "),a("p",[a("img",{attrs:{src:t(718),alt:"Alt text"}})]),s._v(" "),a("h3",{attrs:{id:"一-用户注册和登录中密码单向加密和校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-用户注册和登录中密码单向加密和校验"}},[s._v("#")]),s._v(" (一) 用户注册和登录中密码单向加密和校验")]),s._v(" "),a("ul",[a("li",[s._v("使用"),a("code",[s._v("golang.org/x/crypto/bcrypt库")]),s._v("对密码用户的原始密码进行加密(单项加密)写入到数据库中")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 加密, pwd是加密后的密码\npwd, err := bcrypt.GenerateFromPassword([]byte(user.HashPassword), bcrypt.DefaultCost)\n# 然后再重新将加密密码赋值\nuser.HashPassword = string(pwd) \n\n\n# 校验，user.HashPassword是加密的密码，password是用户登录的明文密码\nerr = bcrypt.CompareHashAndPassword([]byte(user.HashPassword), []byte(password))\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"二-将用户id使用aes进行加密-作为cookie信息-这个在生产环境不能这样使用-一般是使用jwt登录-token中可以存储uid、role等信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-将用户id使用aes进行加密-作为cookie信息-这个在生产环境不能这样使用-一般是使用jwt登录-token中可以存储uid、role等信息"}},[s._v("#")]),s._v(" (二) 将用户id使用AES进行加密，作为cookie信息(这个在生产环境不能这样使用，一般是使用jwt登录，token中可以存储uid、role等信息)")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("AES对称加密，使用CBC模式")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('import (\n\t"bytes"\n\t"crypto/aes"\n\t"crypto/cipher"\n\t"encoding/base64"\n\t"errors"\n\t"fmt"\n\t"log"\n)\n\n// PwdKey 16，24，32为字符，分别对应AES-128、AES-192, AES-256加密方法， PwdKey是不能泄露的\nvar PwdKey = []byte("DIS**#KKKDJJSKDI")\n\n// PKCS7Padding 字节切片填充\nfunc PKCS7Padding(ciphertext []byte, blocksize int) []byte {\n\t// 计算padding的长度，也就是填充的长度\n\tpadding := blocksize - len(ciphertext)%blocksize\n\t// byte(padding)是一个字节，[]byte{byte(padding)}是一个字节切片，且byte(padding)是切片的一个元素, padtext是合成的新的字节切片，这个切片里面有padding个字节\n\tpadtext := bytes.Repeat([]byte{byte(padding)}, padding)\n\tfmt.Printf("padding=%d\\n", padding)\n\treturn append(ciphertext, padtext...)\n}\n\n// UnPKCS7Padding 删除字节切片的填充\nfunc UnPKCS7Padding(origData []byte) ([]byte, error) {\n\tlength := len(origData)\n\tif length == 0 {\n\t\treturn nil, errors.New("加密字符串错误！")\n\t}else {\n\t\t// 获取填充字节的长度, 由于填充的时候，是用padding长度作为byte填充的，因此只需要取出最后一个元素就知道填充的长度了\n\t\tunpadding := int(origData[length-1])\n\t\tfmt.Printf("padding=%d\\n", unpadding)\n\t\t// 截取切片，删除填充字节，并且返回明文\n\t\treturn origData[:(length-unpadding)], nil\n\t}\n}\n\n// AESEncript 加密\nfunc AESEncript(origData, key []byte) ([]byte, error) {\n\t// 1 NewCipher 创建并返回一个新的 cipher.Block。key 参数应该是 AES 密钥，16、24 或 32 字节可供选择, AES-128、AES-192 或 AES-256。\n\tblock, err := aes.NewCipher(key)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\t// 返回key的长度\n\tblockSize := block.BlockSize()\n\t// 对origdata进行填充，满足长度需求\n\torigData = PKCS7Padding(origData, blockSize)\n\t// 采用CAC加密模式, blockmod\n\tblockMod := cipher.NewCBCEncrypter(block, key[:blockSize])\n\t// 创建空加密切片\n\tcrypted := make([]byte, len(origData))\n\t// 执行加密\n\tblockMod.CryptBlocks(crypted, origData)\n\treturn crypted, nil\n}\n\n// AESDecrypt 解密\nfunc AESDecrypt(cripted, key []byte) ([]byte, error) {\n\tblock, err := aes.NewCipher(key)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\tblockSize := block.BlockSize()\n\tblockMod := cipher.NewCBCDecrypter(block, key[:blockSize])\n\t// 创建空的解密字节切片\n\torigData := make([]byte, len(cripted))\n\tblockMod.CryptBlocks(origData, cripted)\n\t// 去除填充字符串\n\torigData, err = UnPKCS7Padding(origData)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn origData, nil\n}\n\n// EnByteToBase 将字节切片转换为base64字符串\nfunc EnByteToBase(pwd []byte) (string, error) {\n\t// 先对密码加密\n\tresult, err := AESEncript(pwd, PwdKey)\n\n\tfmt.Printf("result=%b\\n", result)\n\tif err != nil {\n\t\treturn "", err\n\t}\n\t// 再转换为base64\n\treturn base64.StdEncoding.EncodeToString(result), nil\n}\n\n// DeBaseToByte 将base64字符串转换为字节切片\nfunc DeBaseToByte(pwd string) ([]byte, error)  {\n\tpwdByte, err := base64.StdEncoding.DecodeString(pwd)\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\t// 进行AES解密\n\treturn AESDecrypt(pwdByte, PwdKey)\n}\n\nfunc main() {\n\n\tpwdRow := []byte("yhy3426356")\n\tpwdStr, err := EnByteToBase(pwdRow)\n\tif err != nil {\n\t\tlog.Fatalf(err.Error())\n\t}\n\tfmt.Printf("加密后的字符串为：%s\\n", pwdStr)\n\n\tpwdRow, err = DeBaseToByte(pwdStr)\n\tif err != nil {\n\t\tlog.Fatalf(err.Error())\n\t}\n\tfmt.Printf("解密后的字符串为：%s\\n", string(pwdRow))\n\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br"),a("span",{staticClass:"line-number"},[s._v("99")]),a("br"),a("span",{staticClass:"line-number"},[s._v("100")]),a("br"),a("span",{staticClass:"line-number"},[s._v("101")]),a("br"),a("span",{staticClass:"line-number"},[s._v("102")]),a("br"),a("span",{staticClass:"line-number"},[s._v("103")]),a("br"),a("span",{staticClass:"line-number"},[s._v("104")]),a("br"),a("span",{staticClass:"line-number"},[s._v("105")]),a("br"),a("span",{staticClass:"line-number"},[s._v("106")]),a("br"),a("span",{staticClass:"line-number"},[s._v("107")]),a("br"),a("span",{staticClass:"line-number"},[s._v("108")]),a("br"),a("span",{staticClass:"line-number"},[s._v("109")]),a("br"),a("span",{staticClass:"line-number"},[s._v("110")]),a("br"),a("span",{staticClass:"line-number"},[s._v("111")]),a("br"),a("span",{staticClass:"line-number"},[s._v("112")]),a("br"),a("span",{staticClass:"line-number"},[s._v("113")]),a("br"),a("span",{staticClass:"line-number"},[s._v("114")]),a("br"),a("span",{staticClass:"line-number"},[s._v("115")]),a("br")])]),a("ul",[a("li",[s._v("加密用户的ID，并且写入到cookie中")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('// 将用户的ID转换为字节切片\nuidByte := []byte(strconv.FormatInt(user.ID, 10))\n\n// 对用户的uid加密，调用加密函数\nuidString, err := encrypt.EnPwdCode(uidByte)\n\nif err != nil {\n\tfmt.Println(err)\n}\n\n// 写入cookie\n// 这里设置了两个cookie，一个是未加密的uid，一个是加密的uid\ntool.GlobalCookie(u.Ctx, "uid", string(uidByte), 24*60*60)\ntool.GlobalCookie(u.Ctx, "sign", uidString, 24*60*60)\n\nreturn mvc.Response{\n\tPath:"/product",\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("ul",[a("li",[s._v("GlobalCookie函数为")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('func GlobalCookie(ctx iris.Context, name string, value string, timeout int) {\n\tctx.SetCookie(\n\t\t&http.Cookie{\n\t\t\tName:   name,\n\t\t\tValue:  value,\n\t\t\tPath:   "/",\n\t\t\tMaxAge: timeout,\n\t\t},\n\t)\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"三-对比cookie、session和jwt的用户认证方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-对比cookie、session和jwt的用户认证方式"}},[s._v("#")]),s._v(" (三) 对比cookie、session和jwt的用户认证方式")]),s._v(" "),a("ul",[a("li",[s._v("1：cookie认证的方式")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\t用户登录浏览器的时候，会获取用户的uid，然后将过期时间和uid一起进行对称加密后进行base64编码，将加密信息写入到浏览器的cookie中，例如【sign、adfkaldkfadfasdfj、yinhuanyi.com、\\】\n\t当用户访问后台的时候，此时获取sign对应的value，也就是adfkaldkfadfasdfj，先base64解码再对称解密，然后获取用户的uid和过期时间，如果cookie过期，直接跳转到登录页面。如果没有过期返回数据给用户\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("2：session认证的方式")])]),s._v(" "),a("p",[a("img",{attrs:{src:t(719),alt:"Alt text"}})]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\t用户登录的时候，系统会查询用户是否存在，如果用户存在，基于用户的信息，生成一个session记录到数据库中，然后将sessionid写入到用户的cookie中\n\tcookie写入到浏览器的Application对应的域名下面，一般会有name、value、domain、path、expires/max-age这几个字段。如果是session会话，那么name=sessionid，value=2ia4ehcsfc4466xkcnt7h7vohlmn946l，当用户访问后台的时候，后台获取sessionid的value值，也就是2ia4ehcsfc4466xkcnt7h7vohlmn946l，在Django的django_session表中查询，获取到session_data和expire_date，如果session没有过期，然后将session_data解密，就可以获取到用户的信息了\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:t(720),alt:"Alt text"}})]),s._v(" "),a("ul",[a("li",[s._v("3：jwt认证的方式")])]),s._v(" "),a("p",[a("img",{attrs:{src:t(721),alt:"Alt text"}})]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\tJWT中Header和Payload在服务器端会被Base64编码，编码后的结果加上服务器端secret，再借助HS256算法获得Signature，则JWT = Header + Payload + Signature，这里的Signature=HS256(Header,Payload,服务器的secret)。服务器将JWT返回给客户端，保存到浏览器中，当浏览器再次请求，服务器端只需要再次借助HS256算法基于用户的Header,Payload和服务器的secret获得新的Signature，与客户端JWT的Signature对比，如果一样，说明客户端用户认证合法，再取出Payload中有个用户的非敏感信息，对用户进行数据展示。如果不一样，说明用户非法，直接返回错误信息\n    JWT同时也减轻了服务器端session的存储压力和session的同步压力\n\n\tjwt的算法实现思路如下：\n\t①：当用户登录时候，将用户传递的密码md5加密和数据库中加密的md5密码对比，如果相等，说明用户登录正确，再获取用户的uid和username等字段，再结合过期时间、签发人等信息，创建一个claim, 对claim进行sh256加密，获取token，token再结合secret，获取jwt\n\n\t②：当用户携带jwt访问服务器某个接口的时候，jwt的token一般会在HTTP的header中，那么header的name可以自己定义，其格式可以是 Authorization: 'Bearer Token'这种格式，或者Token: 'Token'这种格式，因此这个需要与前端定义好。Bearer是Authorization的一种标准schema。当服务器获取Authorization的value后，需要切割字符串，获取Token的值，然后开始解析Token，也是调用解析函数，如果判断jwt的没有超时，且校验正确，就会得到一个claim的结构体，从claim的结构体中可以获取到用户的uid和username，并且可以将这两个字段封装到gin的context上下文中，以便于handler处理函数中可以获取到这个两个字段的值，就知道是哪个用户登录了系统\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"四-hash环和一致性hash原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四-hash环和一致性hash原理"}},[s._v("#")]),s._v(" (四) Hash环和一致性Hash原理")]),s._v(" "),a("ul",[a("li",[s._v("Memcached的"),a("code",[s._v("伪分布式")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\t我们知道Memcached的分布式其实是一种“伪分布式”，也就是它的服务器结点之间其实是相互无关联的，之间没有网络拓扑关系，由客户端来决定一个key是存放到哪台机器。\n\t\n\t具体来讲，假设我有多台memcached服务器，编号分别为m0,m1,m2,…。对于一个key，由客户端来决定存放到哪台机器，那最简单的hash公式就是 key % N，其中N是机器的总数。\n\n\t但这有个问题，一旦机器数变少，或者增加机器，N发生变化，那之前存放的数据就全部无效了。因为你按照新的N值取模计算出的机器编号，和当时按旧的N值取模算出的机器编号肯定是不等的，也就意味着绝大部分缓存会失效。\n\n\t这个问题的解决办法就是用1种特别的Hash函数，尽可能使得，增加机器/减少机器时，缓存失效的数目降到最低，这就是Hash环，或者叫一致性Hash。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("Hash环")]),s._v("的基本原理")])]),s._v(" "),a("p",[a("img",{attrs:{src:t(722),alt:"Alt text"}})]),s._v(" "),a("p",[a("img",{attrs:{src:t(723),alt:"Alt text"}})]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("上面说的Hash函数，只经过了1次hash，即把key hash到对应的机器编号。\n\nHash环有2次Hash：\n（1）把所有机器编号hash到这个环上\n（2）把key也hash到这个环上。然后在这个环上进行匹配，看这个key和哪台机器匹配。\n\n\n\n具体来讲，如下：\n假定有这样一个Hash函数，其值空间为（0到2的32次方-1) ，也就是说，其hash值是个32位无整型数字 ，这些数字组成一个环。\n\n然后，先对机器进行hash(比如根据机器的ip)，算出每台机器在这个环上的位置； 再对key进行hash，算出该key在环上的位置，然后从这个位置往前走，遇到的第一台机器就是该key对应的机器，就把该(key, value) 存储到该机器上。\n\n首先计算出每台Cache服务器在环上的位置（图中的大圆圈）；然后每来一个(key, value)，计算出在环上的位置（图中的小圆圈），然后顺时针走，遇到的第1个机器，就是其要存储的机器。\n\n这里的关键点是：当你增加/减少机器时，其他机器在环上的位置并不会发生改变。这样只有增加的那台机器、或者减少的那台机器附近的数据会失效，其他机器上的数据都还是有效的。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("ul",[a("li",[s._v("数据倾斜问题")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("当你机器不多的时候，很可能出现几台机器在环上面贴的很近，不是在环上均匀分布。这将会导致大部分数据，都会集中在某1台机器上。\n\n为了解决这个问题，可以引入“虚拟机器”的概念，也就是说：1台机器，我在环上面计算出多个位置。怎么弄呢？ 假设用机器的ip来hash，我可以在ip后面加上几个编号, ip_1, ip_2, ip_3, … 把1台物理机器生个多个虚拟机器的编号。\n\n数据首先映射到“虚拟机器上”，再从“虚拟机器”映射到物理机器上。因为虚拟机器可以很多，在环上面均匀分布，从而保证数据均匀分布到物理机器上面。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ul",[a("li",[s._v("Zookeeper的引入")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("上面我们提到了服务器的机器增加、减少，问题是客户端怎么知道呢？\n\n一种笨办法就是手动的，当服务器机器增加、减少时候，重新配置客户端，重启客户端。\n\n另外一种，就是引入ZK，服务器的节点列表注册到ZK上面，客户端监听ZK。发现结点数发生变化，自动更新自己的配置。\n\n当然，不用ZK，用一个其他的中心结点，只要能实现这种更改的通知，也是可以的。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("ul",[a("li",[a("strong",[s._v("Hash环能够解决的问题")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\t一致性hash算法设计目标是为了解决因特网中的热点（Hot Spot）问题，将来自网络上的流量动态的划分到不同的服务器处理；使用一致性Hash算法将流量均匀分发到不同服务器”\n\n\t在数据分布式缓存策略中，在缓存节点增加或者减少时，不会或尽可能减少原有节点的数据缓存失效\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"五-一致性hash算法实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五-一致性hash算法实现"}},[s._v("#")]),s._v(" (五) 一致性hash算法实现")]),s._v(" "),a("ul",[a("li",[s._v("算法"),a("code",[s._v("实现的思想和使用到的编程技巧")]),s._v("如下")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1：自定义了一个切片类型，type uints []uint32，并且实现了uints类型的Len()、Less()、Swap()三个方法。目的是让uints类型可以被sort.Sort方法调用，实现切片的排序\n\n2：创建Consistent结构体，结构体四个属性，circle、sortedHashes、VituralNode、sync.RWMutex\n\n3：使用sort.Search() 二分查找算法获取切片中，【大于某个值的最小值的索引，然后获取到这个hash值，从circle中取出对应的服务器IP】，这个是实现\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ul",[a("li",[a("strong",[a("code",[s._v("consistent.go")]),s._v("具体实现如下")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('package common\n\nimport (\n\t"errors"\n\t"hash/crc32"\n\t"sort"\n\t"strconv"\n\t"sync"\n)\n\n// 自定义切片类型，目的是让自定义类型实现sort.Sort的接口方法\ntype uints []uint32\n\n// Len 返回切片长度\nfunc (u uints) Len() int {\n\treturn len(u)\n}\n\n// Less 比较切片中两个数大小(通过索引位置)\nfunc (u uints) Less(i, j int) bool {\n\treturn u[i] < u[j]\n}\n\n// Swap 交换切片中的两个数的位置（通过索引位置）\nfunc (u uints) Swap(i, j int) {\n\tu[i], u[j] = u[j], u[i]\n}\n\n// Consistent 定义一个保存一致性hash信息的结构体\ntype Consistent struct {\n\t// hash集合, key是hash值，值存放节点的信息\n\tcircle map[uint32]string\n\t// 已经排序的节点hash切片，利用切片有序特性，将hash集合逻辑化为环状结构\n\tsortedHashes uints\n\t// 虚拟节点个数，用于添加hash的平衡发布, 一个物理节点对应几个虚拟节点\n\tVituralNode int\n\t// map读写锁， 这个是一个继承，Consistent结构体继承了sync.RWMutex结构体，可以调用sync.RWMutex的所有方法\n\tsync.RWMutex\n}\n\n// NewConsistent 构造函数\nfunc NewConsistent() *Consistent { \n\treturn &Consistent{\n\t\tcircle:      make(map[uint32]string),\n\t\tVituralNode: 20,\n\t}\n}\n\n// generateKey 返回ip+i，例如127.0.0.11\nfunc (c *Consistent) generateKey(element string, index int) string { \n\treturn element + strconv.Itoa(index)\n}\n\n// hashKey 计算字符串的hash值\nfunc (c *Consistent) hashKey(key string) uint32 { \n\t// 凑一个64位数组\n\tif len(key) < 64 {\n\n\t\tsrcatch := make([]byte, 64)\n\t\tcopy(srcatch, key)  // 由于key是string类型，string的底层，第一个是字符串指向的底层字节数组，第二个是字节数组的长度\n\t\t// 使用crc32计算校验和\n\t\treturn crc32.ChecksumIEEE(srcatch[:len(key)])\n\t}\n\n\t// 只要这个一句就可以了，上面的代码是多此一举\n\treturn crc32.ChecksumIEEE([]byte(key))\n}\n\n// updateSortedHashes 更新切片排序，每次新增物理节点或删除物理节点都需调用这个方法，这个方法是让所有的circle的key切片重新排序\nfunc (c *Consistent) updateSortedHashes() { \n\t// 获取一个空的切片，由于切片是指针类型，那么hashes与sortedHashes其实是指向同一个底层数组\n\thashes := c.sortedHashes[:0]\n\t// 判断hashes是否过大，过大则重置\n\t// 判断hashes是否过大，过大则重置，重置的话，底层数组查询分配内存\n\t// todo: 这个是啥意思，切片的容量\n\tif cap(c.sortedHashes) / (c.VituralNode*4) > len(c.circle) {\n\t\thashes = nil\n\t}\n\t// 将circle集合中节点key，加入hashed中, 将key进行排序\n\tfor key := range c.circle {\n\t\thashes = append(hashes, key)\n\t}\n\t// 对key的切片进行排序\n\tsort.Sort(hashes)\n\t// 将排序好的key切片，赋值，这里直接赋值不是就覆盖了吗？这里就是覆盖，因为每次Add或者Delete的时候，那么c.circle这个map中保留的是所有物理节点的hash数据，所以每次都应该让circle的key重新排序\n\tc.sortedHashes = hashes\n}\n\n// Add 像hash环中添加节点，注意map线程不安全，   这里的element是IP， i是虚拟节点的索引，\nfunc (c *Consistent) Add(element string) {  \n\tc.Lock()\n\tdefer c.Unlock()\n\n\t// 一个物理节点对应20个虚拟节点\n\tfor i := 0; i < c.VituralNode; i++ {\n\t\t// 根据生成的节点添加到hash环中， c.generateKey(element, i) == 127.0.0.01， c.hashKey(c.generateKey(element, i)) == hash指纹\n\t\t// c.circle的结构=={"asldjflla": "127.0.0.1", "asldjfll2": "127.0.0.1", }\n\t\tc.circle[c.hashKey(c.generateKey(element, i))] = element\n\t}\n\t// 让hash切片排序\n\tc.updateSortedHashes()\n}\n\n// Remove 线程安全的删除节点\nfunc (c *Consistent) Remove(element string) { \n\tc.Lock()\n\tdefer c.Unlock()\n\tfor i := 0; i < c.VituralNode; i++ {\n\t\tdelete(c.circle, c.hashKey(c.generateKey(element, i)))\n\t}\n\t// 删完要更新排序\n\tc.updateSortedHashes()\n}\n\n// Get 根据name这个hash值，获取服务器信息，name是uid\nfunc (c *Consistent) Get(name string) (string, error) {  \n\tc.Lock()\n\tdefer c.Unlock()\n\n\tif len(c.circle) == 0 {\n\t\treturn "", errors.New("Hash 环上没有数据")\n\t}\n\n\t// 传入name计算的hash值，通过hash值，获取大于此hash值的最小值索引\n\tindex := c.search(c.hashKey(name))\n\n\t// 根据返回的最小值索引，获取切片中索引对应的hash，再基于hash获取到哈希环上的hash值，也就是服务器IP\n\treturn c.circle[c.sortedHashes[index]], nil\n}\n\n//search 这里的key是name计算的hash值，大于这个hash值的最小值的索引\nfunc (c *Consistent) search(key uint32) int {\n\n\tf := func(i int) bool {\n\t\treturn c.sortedHashes[i] >= key\n\t}\n\n\t// 使用"二分查找"算法来搜索指定切片满足条件的最小值\n\t// sort.Search是二分法查找， 找到[0, n)区间内最小的满足f(i)==true的值i\n\ti := sort.Search(len(c.sortedHashes), f)\n\n\t// 如果超出范围，设置i=0\n\tif i >= len(c.sortedHashes) {\n\t\ti = 0\n\t}\n\n\treturn i\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br"),a("span",{staticClass:"line-number"},[s._v("99")]),a("br"),a("span",{staticClass:"line-number"},[s._v("100")]),a("br"),a("span",{staticClass:"line-number"},[s._v("101")]),a("br"),a("span",{staticClass:"line-number"},[s._v("102")]),a("br"),a("span",{staticClass:"line-number"},[s._v("103")]),a("br"),a("span",{staticClass:"line-number"},[s._v("104")]),a("br"),a("span",{staticClass:"line-number"},[s._v("105")]),a("br"),a("span",{staticClass:"line-number"},[s._v("106")]),a("br"),a("span",{staticClass:"line-number"},[s._v("107")]),a("br"),a("span",{staticClass:"line-number"},[s._v("108")]),a("br"),a("span",{staticClass:"line-number"},[s._v("109")]),a("br"),a("span",{staticClass:"line-number"},[s._v("110")]),a("br"),a("span",{staticClass:"line-number"},[s._v("111")]),a("br"),a("span",{staticClass:"line-number"},[s._v("112")]),a("br"),a("span",{staticClass:"line-number"},[s._v("113")]),a("br"),a("span",{staticClass:"line-number"},[s._v("114")]),a("br"),a("span",{staticClass:"line-number"},[s._v("115")]),a("br"),a("span",{staticClass:"line-number"},[s._v("116")]),a("br"),a("span",{staticClass:"line-number"},[s._v("117")]),a("br"),a("span",{staticClass:"line-number"},[s._v("118")]),a("br"),a("span",{staticClass:"line-number"},[s._v("119")]),a("br"),a("span",{staticClass:"line-number"},[s._v("120")]),a("br"),a("span",{staticClass:"line-number"},[s._v("121")]),a("br"),a("span",{staticClass:"line-number"},[s._v("122")]),a("br"),a("span",{staticClass:"line-number"},[s._v("123")]),a("br"),a("span",{staticClass:"line-number"},[s._v("124")]),a("br"),a("span",{staticClass:"line-number"},[s._v("125")]),a("br"),a("span",{staticClass:"line-number"},[s._v("126")]),a("br"),a("span",{staticClass:"line-number"},[s._v("127")]),a("br"),a("span",{staticClass:"line-number"},[s._v("128")]),a("br"),a("span",{staticClass:"line-number"},[s._v("129")]),a("br"),a("span",{staticClass:"line-number"},[s._v("130")]),a("br"),a("span",{staticClass:"line-number"},[s._v("131")]),a("br"),a("span",{staticClass:"line-number"},[s._v("132")]),a("br"),a("span",{staticClass:"line-number"},[s._v("133")]),a("br"),a("span",{staticClass:"line-number"},[s._v("134")]),a("br"),a("span",{staticClass:"line-number"},[s._v("135")]),a("br"),a("span",{staticClass:"line-number"},[s._v("136")]),a("br"),a("span",{staticClass:"line-number"},[s._v("137")]),a("br"),a("span",{staticClass:"line-number"},[s._v("138")]),a("br"),a("span",{staticClass:"line-number"},[s._v("139")]),a("br"),a("span",{staticClass:"line-number"},[s._v("140")]),a("br"),a("span",{staticClass:"line-number"},[s._v("141")]),a("br"),a("span",{staticClass:"line-number"},[s._v("142")]),a("br"),a("span",{staticClass:"line-number"},[s._v("143")]),a("br"),a("span",{staticClass:"line-number"},[s._v("144")]),a("br"),a("span",{staticClass:"line-number"},[s._v("145")]),a("br"),a("span",{staticClass:"line-number"},[s._v("146")]),a("br"),a("span",{staticClass:"line-number"},[s._v("147")]),a("br"),a("span",{staticClass:"line-number"},[s._v("148")]),a("br")])]),a("ul",[a("li",[a("strong",[a("code",[s._v("consistent_test.go")]),s._v("具体实现如下")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('package common\n\nimport (\n\t"fmt"\n\t"reflect"\n\t"testing"\n)\n\nvar hashConsistent *Consistent\n\n\nfunc TestAdd(t *testing.T) {\n\t// 初始化\n\thashConsistent = NewConsistent()\n\n\t// 给hash环添加3个节点\n\tvar hostArray = []string{"192.168.100.101", "192.168.100.102", "192.168.100.103", "192.168.100.104"}\n\tfor _, host := range hostArray {\n\t\thashConsistent.Add(host)\n\t}\n\n\t// 获取uid一致性hash调度到的IP\n\tuid := "349873948734739"\n\tip, err := hashConsistent.Get(uid)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t}\n\tfmt.Printf("uid=1001对应的服务器IP为：%s\\n", ip)\n\n\t// 再次添加一个节点\n\thashConsistent.Add("192.168.100.105")\n\tipAdd, err := hashConsistent.Get(uid)\n\tfmt.Printf("新增节点后对应的IP：%s\\n", ipAdd)\n\t// 对结果进行断言\n\tif !reflect.DeepEqual(ip, ipAdd) {\n\t\tt.Errorf("excepted:%v, got:%v\\n", ip, ipAdd)\n\t}\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br")])]),a("ul",[a("li",[s._v("一句话解释清楚一致性哈希算法")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("根据用户uid获取hash值(32位校验和)，根据哈希值获取切片的索引(基于二分查找算法，获取大于某个哈希值的最小值的索引)，根据哈希索引从切片中获取哈希，根据哈希从map中获取服务器的IP\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"六-将map数据映射到结构体-使用reflect反射"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六-将map数据映射到结构体-使用reflect反射"}},[s._v("#")]),s._v(" (六) 将map数据映射到结构体（使用reflect反射）")]),s._v(" "),a("ul",[a("li",[s._v("将map数据映射到结构体的操作一般会在两个地方应用")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1：用户请求的数据，一般会在request对象中封装，在gin框架中，有c.ShouldBindJSON(params)，将用户的json请求映射到params结构体指针中，是基于结构体的json标签实现的，其实也是使用了反射的方法\n\n2：查询数据库的数据，在sqlx库中，基于用户的id获取数据，err = db.Get(user, sqlStr, userId)，这里是将查询的数据库数据，映射到user结构体指针中，是基于结构体标签sql实现的，其实也是使用了反射的方法\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[a("p",[s._v("这里comm.go中，"),a("strong",[s._v("DataToStructByTagSql函数就是应用了reflect反射，将map数据映射到结构体obj中，注意这里的map是map[string]string类型")]),s._v("，也就是说map的value类型已经设定好了，因此在TypeConversion函数中，只需要将"),a("code",[s._v("字符串")]),s._v("向其他的类型转换，例如"),a("code",[s._v("string")]),s._v("转int64等")])]),s._v(" "),a("li",[a("p",[s._v("下面是DataToStructByTagSql函数和TypeConversion函数，TypeConversion函数是为DataToStructByTagSql函数服务的。"),a("strong",[s._v("这里的技术点就是reflect反射的应用和string类型转换")]),s._v("，这是标签应用的底层原理")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('package common\n\nimport (\n\t"errors"\n\t"reflect"\n\t"strconv"\n\t"time"\n)\n\n//DataToStructByTagSql 基于sql标签，将map类型映射到结构体\nfunc DataToStructByTagSql(data map[string]string, obj interface{}) {\n\n\t// 结构体\n\tobjValue := reflect.ValueOf(obj).Elem()  // reflect.ValueOf(obj)获取接口的类型值，.Elem()是获取指针对应的值\n\t// objValue.NumField()获取到结构体的成员数量\n\tfor i := 0; i < objValue.NumField(); i++ {\n\t\t/*\n\t\t这里以结构体Product的第一个属性为例： Id int64 `json:"id" sql:"id"`\n\t\tdata := map[string]string{"id": "1"}\n\t\t*/\n\n\t\t// objValue.Type().Field(i).Tag.Get("sql")为id\n\t\ttagKey := objValue.Type().Field(i).Tag.Get("sql")\n\t\t// data["id"]就是"1"，类型是string\n\t\tmapValue := data[tagKey]\n\t\t// 结构体名称是Id\n\t\tobjFiledName := objValue.Type().Field(i).Name\n\t\t// 结构体名称是Id对应的类型: int64\n\t\tobjFieldType := objValue.Field(i).Type()\n\t\t// 获取原始值 "1", 类型是Value\n\t\treflectVal := reflect.ValueOf(mapValue)\n\n\t\tvar err error\n\n\t\t// objFieldType:int64， var.Type()为:string\n\t\tif objFieldType != reflectVal.Type() { // 判断类型是否相等，\n\t\t\t// 将"1"转换为int64类型\n\t\t\treflectVal, err = TypeConversion(mapValue, objFieldType.Name())\n\t\t\tif err != nil {\n\t\t\t\tpanic(err)\n\t\t\t}\n\t\t}\n\n\t\t// 给objValue结构体对应的字段设置值\n\t\tobjValue.FieldByName(objFiledName).Set(reflectVal)\n\t}\n}\n\n/*\nTypeConversion 类型转换， 将value对应的string类型，转换为ntype类型\n满足将string类型的值转换为time.Time、Time、int、int8、int32、int64、float32、float64类型\n*/\nfunc TypeConversion(value string, ntype string) (reflect.Value, error) {\n\tif ntype == "string" {\n\t\treturn reflect.ValueOf(value), nil\n\t} else if ntype == "time.Time" {\n\t\tt, err := time.ParseInLocation("2006-01-02 15:04:05", value, time.Local)\n\t\treturn reflect.ValueOf(t), err\n\t} else if ntype == "Time" {\n\t\tt, err := time.ParseInLocation("2006-01-02 15:04:05", value, time.Local)\n\t\treturn reflect.ValueOf(t), err\n\t} else if ntype == "int" {\n\t\ti, err := strconv.Atoi(value)\n\t\treturn reflect.ValueOf(i), err\n\t} else if ntype == "int8" {\n\t\ti, err := strconv.ParseInt(value, 10, 64)\n\t\treturn reflect.ValueOf(int8(i)), err\n\t} else if ntype == "int32" {\n\t\ti, err := strconv.ParseInt(value, 10, 64)\n\t\treturn reflect.ValueOf(int32(i)), err\n\t} else if ntype == "int64" {\n\t\ti, err := strconv.ParseInt(value, 10, 64)\n\t\treturn reflect.ValueOf(i), err\n\t} else if ntype == "float32" {\n\t\ti, err := strconv.ParseFloat(value, 64)\n\t\treturn reflect.ValueOf(float32(i)), err\n\t} else if ntype == "float64" {\n\t\ti, err := strconv.ParseFloat(value, 64)\n\t\treturn reflect.ValueOf(i), err\n\t}\n\t//else if .......增加其他一些类型的转换\n\n\treturn reflect.ValueOf(value), errors.New("未知的类型：" + ntype)\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br")])]),a("ul",[a("li",[s._v("上面DataToStructByTagSql函数的测试用例如下")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('package common\n\nimport (\n\t"encoding/json"\n\t"fmt"\n\t"testing"\n)\n\ntype obj struct {\n\tId int64 `json:"id" sql:"id"`\n\tUsername string `json:"username" sql:"username"`\n\tAge int32 `json:"age" sql:"age"`\n}\n\nfunc (o *obj)toString() string {\n\tjsonBye, err := json.Marshal(o)\n\tif err != nil {\n\t\tfmt.Println(err)\n\t}\n\treturn string(jsonBye)\n}\n\nfunc TestDataToStructByTagSql(t *testing.T) {\n\tdata := map[string]string{\n\t\t"id": "123456",\n\t\t"username": "Robby",\n\t\t"age": "30",\n\t}\n\n\tobjInstance := &obj{\n\t\tId: 123456,\n\t\tUsername: "Robby",\n\t\tAge: 30,\n\t}\n\n\tnewObjInstance := new(obj)\n\tDataToStructByTagSql(data, newObjInstance)\n\n\t// 判断两个结构体数据是否相等\n\tif objInstance.toString() != newObjInstance.toString() {\n\t\tt.Errorf("excepted:%v, got:%v\\n", objInstance.toString(), newObjInstance.toString())\n\t}\n\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br")])]),a("h3",{attrs:{id:"七-golang中http的拦截器-对原有handler函数进行功能增强"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七-golang中http的拦截器-对原有handler函数进行功能增强"}},[s._v("#")]),s._v(" (七) golang中HTTP的拦截器，对原有handler函数进行功能增强")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("这里只是举例一种增强函数的方法，举个例子："),a("strong",[a("code",[s._v("在http路由请求调用handler处理之前，对请求进行预处理")])]),s._v("，这种情况就是对handler进行了增强，"),a("strong",[s._v("就像写一个http拦截器一样")]),s._v("。"),a("strong",[s._v("因此这里写了一个HTTP请求的拦截器实现了对原始HTTP handler函数的增强")])])]),s._v(" "),a("li",[a("p",[s._v("HTTP拦截器代码如下："),a("strong",[s._v("这里FilterHandle、WebHandle都是函数类型，函数类型和struct类型一样，使用type定义")]),s._v("，定义FilterHandle的意义是：map的value是函数类型，定义WebHandle的意义是：真实的handler是函数类型，需要从参数传递进来，在增强数中被调用，因此是用于指定参数的类型")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('package common\n\n\nimport (\n\t"net/http"\n)\n\n// FilterHandle 声明一个函数类型，这个函数类型是一个标准的http handler类型函数\ntype FilterHandle func(rw http.ResponseWriter, r *http.Request) error\n\n// Filter 拦截器结构体\ntype Filter struct {\n\t// 用来存储要拦截的url\n\tfilterMap map[string]FilterHandle\n}\n\n// NewFilter 构造函数实例化Filter结构体\nfunc NewFilter() *Filter {\n\treturn &Filter{filterMap: make(map[string]FilterHandle)}\n}\n\n// RegisterFilterUri 注册拦截器\nfunc (f *Filter) RegisterFilterUri(uri string, handler FilterHandle) {\n\tf.filterMap[uri] = handler\n}\n\n// GetFilterHandle 根据uri获取对应handle\nfunc (f *Filter) GetFilterHandle(uri string) FilterHandle {\n\treturn f.filterMap[uri]\n}\n\n// WebHandle 定义一个新的函数类型\ntype WebHandle func(rw http.ResponseWriter, r *http.Request)\n\n// handle方法，拦截器实例通过调用handle，传入一个函数，返回一个新函数。\n// 确切的说，传入的函数被改装了，增加了拦截器实例内的路径和方法执行，如果请求的路径是一致的，则直接使用拦截器内的方法处理 ,如果路径不一致，则使用传入函数的逻辑处理\n\n// Handle 这个有点点像Python的装饰器函数，也是接收一个函数，将函数进行增强，然后返回这个函数\nfunc (f *Filter) Handle(webHandle WebHandle) func(rw http.ResponseWriter, r *http.Request) {\n\treturn func(rw http.ResponseWriter, r *http.Request) {\n\t\tfor path, handle := range f.filterMap {\n\t\t\tif path == r.RequestURI {   // 判断URL路径是否与request的路径是否相等, 如果相等，那么使用已经存储的函数执行，如果不相等使用WebHandle函数执行\n\t\t\t\terr := handle(rw, r)\n\t\t\t\tif err != nil {\n\t\t\t\t\trw.Write([]byte(err.Error()))\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// 执行正常的handler函数，就是请求处理函数\n\t\twebHandle(rw, r)\n\t}\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br")])]),a("ul",[a("li",[s._v("外部使用这个拦截器是这样使用的，Auth函数就是handler增强的功能，")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('// 调用构造函数，创建实例\nfilter := common.NewFilter()\n\n// 注册\nfilter.RegisterFilterUri("/check", Auth)  // 处理客户端的认证请求\nfilter.RegisterFilterUri("/checkRight", Auth) // 处理服务器的代理认证请求\n\n// 注册路由\nhttp.HandleFunc("/check", filter.Handle(Check))  // Auth认证通过后，才能处理的业务逻辑Check函数\nhttp.HandleFunc("/checkRight", filter.Handle(CheckRight))  // Auth认证通过后，才能处理的业务逻辑CheckRight函数\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"八-map类型的线程安全解决方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八-map类型的线程安全解决方法"}},[s._v("#")]),s._v(" (八) map类型的线程安全解决方法")]),s._v(" "),a("ul",[a("li",[s._v("使用结构体封装map，且设置读写互斥锁属性")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('// 把map属性包一层结构体\ntype AccessControl struct {\n\t// 这是缓存用户相关信息，这里才解释了一致性hash算法的意义\n\tsourceMap map[int]time.Time  // 这个map存储的是{"uid": 当前时间}\n\tsync.RWMutex\n}\n\n// 用户的访问时间信息初始化\nvar accessControl = &AccessControl{\n\tsourceMap: make(map[int]time.Time),\n}\n\n\n// 每次读写map中数据的时候，都加个锁，获取数据就加上读锁，\n// GetNewRecord 根据uid获取用户的访问时间\nfunc (m *AccessControl) GetNewRecord(uid int) time.Time {\n\tm.RLock() // 加个读锁\n\tdefer m.RUnlock() // 解锁\n\n\tdata := m.sourceMap[uid]\n\treturn data\n}\n\n// SetNewRecord 根据uid设置访问时间\nfunc (m *AccessControl) SetNewRecord(uid int) {\n\tm.Lock()\n\tdefer m.Unlock()\n\tm.sourceMap[uid] = time.Now()  // 这是是设置时间\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("h3",{attrs:{id:"九-获取当前主机的ip地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#九-获取当前主机的ip地址"}},[s._v("#")]),s._v(" (九) 获取当前主机的IP地址")]),s._v(" "),a("ul",[a("li",[s._v("获取当前主机的IP")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('// GetIntranceIP 获取本机IP\nfunc GetIntranceIP() (string, error) {\n\taddrs, err := net.InterfaceAddrs()\n\tif err != nil {\n\t\treturn "", err\n\t}\n\tfor _, address := range addrs {\n\t\tif ipnet, ok := address.(*net.IPNet); ok && ipnet.IP.IsGlobalUnicast() {\n\t\t\tif ipnet.IP.To4() != nil {\n\t\t\t\treturn ipnet.IP.String(), nil\n\t\t\t}\n\t\t}\n\t}\n\treturn "", errors.New("获取地址异常")\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h3",{attrs:{id:"十-rabbitmq-worker模型-手动ack-且进行qos限速"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#十-rabbitmq-worker模型-手动ack-且进行qos限速"}},[s._v("#")]),s._v(" (十) Rabbitmq worker模型，手动ack，且进行Qos限速")]),s._v(" "),a("ul",[a("li",[s._v("这个问题在rabbitmq中有介绍，worker模型中")])])])}),[],!1,null,null,null);n.default=e.exports},717:function(s,n,t){s.exports=t.p+"assets/img/2021-08-042.45.49.27e7c7e8.png"},718:function(s,n,t){s.exports=t.p+"assets/img/2021-07-305.03.31.15b5d8ac.png"},719:function(s,n,t){s.exports=t.p+"assets/img/2021-07-3011.40.22.bc970935.png"},720:function(s,n,t){s.exports=t.p+"assets/img/2021-07-3011.48.45.63e39715.png"},721:function(s,n,t){s.exports=t.p+"assets/img/2021-07-3012.00.43.7c5e5ea0.png"},722:function(s,n,t){s.exports=t.p+"assets/img/hash-nfdknalsknb394834.b251e887.jpeg"},723:function(s,n,t){s.exports=t.p+"assets/img/2021-10-272.12.03.15177e21.png"}}]);