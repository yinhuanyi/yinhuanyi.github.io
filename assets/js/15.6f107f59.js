(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{2078:function(s,t,a){s.exports=a.p+"assets/img/2020-11-0512.17.51.a93d91e2.png"},2079:function(s,t,a){s.exports=a.p+"assets/img/2020-11-0512.22.05.60b24fca.png"},2080:function(s,t,a){s.exports=a.p+"assets/img/2020-11-0512.26.54.b854111a.png"},2081:function(s,t,a){s.exports=a.p+"assets/img/2020-11-0512.36.12.fb5f89fd.png"},2082:function(s,t,a){s.exports=a.p+"assets/img/2020-11-0512.37.49.d57e13c6.png"},2083:function(s,t,a){s.exports=a.p+"assets/img/2020-11-0512.40.09.8a682c51.png"},2084:function(s,t,a){s.exports=a.p+"assets/img/2020-11-0511.21.53.c95cabba.png"},2085:function(s,t,a){s.exports=a.p+"assets/img/2020-11-0511.47.20.285ac8fc.png"},2086:function(s,t,a){s.exports=a.p+"assets/img/2020-11-0511.51.12.158a1c8d.png"},2087:function(s,t,a){s.exports=a.p+"assets/img/2020-11-0511.54.32.e5ae8395.png"},2088:function(s,t,a){s.exports=a.p+"assets/img/2020-11-0612.03.40.7d144f61.png"},2089:function(s,t,a){s.exports=a.p+"assets/img/2020-11-0610.11.15.feb2c16c.png"},2090:function(s,t,a){s.exports=a.p+"assets/img/2020-11-0610.25.42.8827840c.png"},2091:function(s,t,a){s.exports=a.p+"assets/img/2020-11-0610.29.39.ef8c88c9.png"},2092:function(s,t,a){s.exports=a.p+"assets/img/2020-11-0610.36.18.482ce57d.png"},2093:function(s,t,a){s.exports=a.p+"assets/img/2020-11-0610.48.23.42465344.png"},2094:function(s,t,a){s.exports=a.p+"assets/img/2020-11-0610.52.58.7597edc1.png"},2095:function(s,t,a){s.exports=a.p+"assets/img/2020-11-0610.59.23.daf1c306.png"},2096:function(s,t,a){s.exports=a.p+"assets/img/2020-11-0810.30.25.dde77402.png"},2097:function(s,t,a){s.exports=a.p+"assets/img/2020-11-0810.58.59.1ce70b8e.png"},2770:function(s,t,a){"use strict";a.r(t);var n=a(9),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[n("img",{attrs:{src:a(2078),alt:"Alt text"}})]),s._v(" "),n("h2",{attrs:{id:"一-http-协议"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-http-协议"}},[s._v("#")]),s._v(" 一：HTTP 协议")]),s._v(" "),n("h3",{attrs:{id:"一-http请求的标准格式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-http请求的标准格式"}},[s._v("#")]),s._v(" "),n("strong",[n("code",[s._v("（一）HTTP请求的标准格式")])])]),s._v(" "),n("p",[n("img",{attrs:{src:a(2079),alt:"Alt text"}})]),s._v(" "),n("h3",{attrs:{id:"二-真实地址查询-dns"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-真实地址查询-dns"}},[s._v("#")]),s._v(" "),n("strong",[n("code",[s._v("（二）真实地址查询 —— DNS")])])]),s._v(" "),n("ul",[n("li",[s._v("所以域名的层级关系类似一个树状结构")])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[s._v("根 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DNS")]),s._v(" 服务器\n顶级域 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DNS")]),s._v(" 服务器（com）\n权威 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DNS")]),s._v(" 服务器（server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com）\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("img",{attrs:{src:a(2080),alt:"Alt text"}})]),s._v(" "),n("ul",[n("li",[s._v("域名解析的工作流程")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(2081),alt:"Alt text"}})]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 首先会在计算机本机的"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DNS")]),s._v("缓存中查看是否有这个域名对应的"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 客户端首先会发出一个 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DNS")]),s._v(" 请求，问 www"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com 的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 是啥，并发给本地 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DNS")]),s._v(" 服务器（也就是客户端的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 设置中填写的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DNS")]),s._v(" 服务器地址）\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 本地域名服务器收到客户端的请求后，如果缓存里的表格能找到 www"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com，则它直接返回 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址。如果没有，本地 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DNS")]),s._v(" 会去问它的根域名服务器：“老大， 能告诉我 www"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com 的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址吗？” 根域名服务器是最高层次的，它不直接用于域名解析，但能指明一条道路。\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 根 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DNS")]),s._v(" 收到来自本地 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DNS")]),s._v(" 的请求后，发现后置是 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com，说：“www"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com 这个域名归 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com 区域管理”，我给你 "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com 顶级域名服务器地址给你，你去问问它吧。”\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("收到顶级域名服务器的地址后，发起请求问“老二")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com 顶级域名服务器"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("， 你能告诉我 www"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com  的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址吗？”\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com顶级域名服务器说：“我给你负责 www"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com 区域的权威 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DNS")]),s._v(" 服务器的地址，你去问它应该能问到”。\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 于是转向问权威 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DNS")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("服务器：“老三")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，www"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com对应的"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v("是啥呀？” server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com 的权威 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DNS")]),s._v(" 服务器，它是域名解析结果的原出处。为啥叫权威呢？就是我的域名我做主\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" server"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("com服务器查询后将对应的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("X")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("X")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("X")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("X")]),s._v(" 告诉本地 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DNS")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 本地 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DNS")]),s._v(" 再将 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址返回客户端，客户端和目标建立连接\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h3",{attrs:{id:"三-真实地址查询-dns"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三-真实地址查询-dns"}},[s._v("#")]),s._v(" "),n("strong",[n("code",[s._v("（三）真实地址查询 —— DNS")])])]),s._v(" "),n("ul",[n("li",[s._v("通过 DNS 获取到 IP 后，就可以把 HTTP 的传输工作交给操作系统中的协议栈。")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(2082),alt:"Alt text"}})]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 应用程序（浏览器）通过调用 Socket 库，来委托协议栈工作。协议栈的上半部分有两块，分别是负责收发数据的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v(" 和 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("UDP")]),s._v(" 协议，它们两会接受应用层的委托执行收发数据的操作。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 协议栈的下面一半是用 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 协议控制网络包收发操作，在互联网上传数据时，数据刽被切分成一块块的网络包，而将网络包发送给对方的操作就是由 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 负责的。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 此外 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 中还包括 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ICMP")]),s._v(" 协议和 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARP")]),s._v(" 协议。"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ICMP")]),s._v(" 用于告知网络包传送过程中产生的错误以及各种控制信息。"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARP")]),s._v(" 用于根据 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址查询相应的以太网 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址。\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"四-可靠传输-tcp"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四-可靠传输-tcp"}},[s._v("#")]),s._v(" "),n("strong",[n("code",[s._v("（四）可靠传输 —— TCP")])])]),s._v(" "),n("ul",[n("li",[s._v("TCP 包头格式")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(2083),alt:"Alt text"}})]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("：首先，【源端口号】和【目标端口号】是不可少的，如果没有这两个端口号，数据就不知道应该发给哪个应用。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("：接下来有包的【序号】，这个是为了解决包乱序的问题。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("：还有应该有的是【确认号】，目的是确认发出去对方是否有收到。如果没有收到就应该重新发送，直到送达，这个是为了解决不丢包的问题。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("：接下来还有一些【状态位】。例如 【"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SYN")]),s._v("】 是发起一个连接，【"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ACK")]),s._v("】 是回复，【"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RST")]),s._v("】 是重新连接，【"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FIN")]),s._v("】 是结束连接等。"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v(" 是面向连接的，因而双方要维护连接的状态，这些带状态位的包的发送，会引起双方的状态变更。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("：还有一个重要的就是【窗口大小】。"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v(" 要做【流量控制】，通信双方各声明一个窗口（缓存大小），标识自己当前能够的处理能力，别发送的太快，撑死我，也别发的太慢，饿死我\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("：除了做流量控制以外，"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v("还会做【拥塞控制】，对于真正的通路堵车不堵车，它无能为力，唯一能做的就是控制自己，也即控制发送的速度。不能改变世界，就改变自己嘛\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("ul",[n("li",[s._v("TCP 传输数据之前，要先三次握手建立连接")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(2084),alt:"Alt text"}})]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[s._v("在 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTTP")]),s._v(" 传输数据之前，首先需要 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v(" 建立连接，"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v(" 连接的建立，通常称为三次握手。\n这个所谓的「连接」，只是双方计算机里维护一个状态机，在连接建立的过程中，双方的状态变化时序图就像这样。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("TCP三次握手(这里说的比较简单，不易于理解)")])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 一开始，客户端和服务端都处于 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CLOSED")]),s._v(" 状态。先是服务端主动监听某个端口，处于 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("LISTEN")]),s._v(" 状态。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 然后客户端主动发起连接 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SYN")]),s._v("，之后处于 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SYN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SENT")]),s._v(" 状态。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 服务端收到发起的连接，返回 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SYN")]),s._v("，并且 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ACK")]),s._v(" 客户端的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SYN")]),s._v("，之后处于 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SYN")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("RCVD")]),s._v(" 状态。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 客户端收到服务端发送的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SYN")]),s._v(" 和 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ACK")]),s._v(" 之后，发送 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ACK")]),s._v(" 的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ACK")]),s._v("，之后处于 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ESTABLISHED")]),s._v(" 状态，因为它一发一收成功了。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 服务端收到 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ACK")]),s._v(" 的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ACK")]),s._v(" 之后，处于 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ESTABLISHED")]),s._v(" 状态，因为它也一发一收了。\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("ul",[n("li",[s._v("如何查看 TCP 的连接状态")])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[s._v("我们通常查看本机的监听端口使用：netstat "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("lntup， l表示listen，n表示number，t表示tcp，u表示udp，p表示process\n"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v(" 的连接状态查看，在 Linux 可以通过 netstat "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("napt，a表示所有的状态，n表示number，t表示tcp，p表示process\n下面可以看到有客户端的"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SYN_SENT")]),s._v("状态，和服务器端的"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ESTABLISHED")]),s._v("、"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("LISTEN")]),s._v("状态\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@node1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("# netstat "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("tanp\nActive Internet "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("connections")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("servers and established"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nProto Recv"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Q")]),s._v(" Send"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("Q")]),s._v(" Local Address           Foreign Address         State       "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PID")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("Program name       \ntcp        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("               "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("LISTEN")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2608")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("nginx"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" master  \ntcp        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("               "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("LISTEN")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("sshd           \ntcp        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.18")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".157")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".35")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("56656")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.1")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("443")]),s._v("            "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("SYN_SENT")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8591")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("flanneld       \ntcp        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.18")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".157")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".35")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("22")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("116.30")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".195")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".172")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("50519")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ESTABLISHED")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("19658")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("sshd"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" root@pt \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("ul",[n("li",[s._v("TCP 分割数据")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(2085),alt:"Alt text"}})]),s._v(" "),n("p",[n("img",{attrs:{src:a(2086),alt:"Alt text"}})]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("：如果 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTTP")]),s._v(" 请求消息比较长，超过了 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MSS")]),s._v(" 的长度，这时 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v(" 就需要把 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTTP")]),s._v(" 的数据拆解一块块的数据发送，而不是一次性发送所有数据。\n\t"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MTU")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Maximum Transmission Unit 最大传输单元"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("：一个网络包的最大长度，以太网中一般为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v(" 字节。\n\t"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MSS")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Maximum Segment Size 最大报文长度"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("：除去 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 和 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v(" 头部之后，一个网络包所能容纳的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v(" 数据的最大长度。\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("：数据会被以 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MSS")]),s._v(" 的长度为单位进行拆分，拆分出来的每一块数据都会被放进单独的网络包中。也就是在每个被拆分的数据加上 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v(" 头信息，然后交给 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 模块来发送数据。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("ul",[n("li",[s._v("TCP 报文生成")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(2087),alt:"Alt text"}})]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v(" 协议里面会有两个端口，一个是浏览器监听的端口（通常是随机生成的），一个是 Web 服务器监听的端口（"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTTP")]),s._v(" 默认端口号是 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("， "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTTPS")]),s._v(" 默认端口号是 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("443")]),s._v("）。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 在双方建立了连接后，"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTTP")]),s._v("协议的头部和数据就被封装在"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v("协议的数据部分中，组装好 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v(" 报文之后，就需交给下面的网络层处理。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("：此时的"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTTP")]),s._v("包应该会激动的想：终于搭载了"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v("这艘快船了，以后不再怕丢包了，因为"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v("具有序列号和确认序列好，保证了数据不会丢失，丢失的数据包会重传\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"五-远程定位-ip"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#五-远程定位-ip"}},[s._v("#")]),s._v(" "),n("strong",[n("code",[s._v("（五）远程定位 —— IP")])])]),s._v(" "),n("ul",[n("li",[s._v("IP 包头格式")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(2088),alt:"Alt text"}})]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v(" 模块在执行连接、收发、断开等各阶段操作时，都需要委托 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 模块将数据封装成网络包发送给通信对象。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("：在 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 协议里面需要有源地址 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 和 目标地址 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v("：\n\t源地址"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v("，即是客户端输出的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址\n\t目标地址，即通过 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("DNS")]),s._v(" 域名解析得到的 Web 服务器 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v("。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("：因为 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTTP")]),s._v(" 是经过 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v(" 传输的，所以在 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 包头的协议号，要填写为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("06")]),s._v("（十六进制），表示协议为 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v("。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("ul",[n("li",[s._v("假设客户端有多个网卡，就会有多个 IP 地址，那 IP 头部的源地址应该选择哪个 IP 呢？")])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 当存在多个网卡时，在填写源地址 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 时，就需要判断到底应该填写哪个地址。这个判断相当于在多块网卡中判断应该使用哪个一块网卡来发送包。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 这个时候就需要根据路由表规则，来判断哪一个网卡作为源地址 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v("。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 在 Linux 操作系统，我们可以使用 route "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("n 命令查看当前系统的路由表。\n\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@node1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("# route "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("n\n\tKernel "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" routing table\n\tDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\n\t"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.18")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".159")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".253")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("UG")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" eth0\n\t"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".255")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("UG")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" flannel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".2")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".2")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".255")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("UG")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" flannel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("169.254")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("U")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1002")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" eth0\n\t"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.17")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("U")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" docker0\n\t"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.18")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".144")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("         "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".240")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("U")]),s._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("        "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" eth0\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("ul",[n("li",[s._v("举个例子，根据上面的路由表，我们假设 Web 服务器的目标地址是 192.168.10.200")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(2089),alt:"Alt text"}})]),s._v(" "),n("ul",[n("li",[s._v("那么整个路由分析过程如下")])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 首先先和第一条条目的子网掩码（Genmask）进行 【与运算】，得到结果为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".10")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("，但是第一个条目的 Destination 是 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".3")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("，两者不一致所以匹配失败。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 再与第二条目的子网掩码进行 【与运算】，得到的结果为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".10")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("，与第二条目的 Destination "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".10")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v(" 匹配成功，所以将使用 eth1 网卡的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址作为 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 包头的源地址。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("：那么假设 Web 服务器的目标地址是 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.100")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".20")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".100")]),s._v("，那么依然依照上面的路由表规则判断，判断后的结果是和第三条目匹配。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("：第三条目比较特殊，它目【标地址】和【子网掩码】都是 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v("，这表示【默认网关】，如果其他所有条目都无法匹配，就会自动匹配这一行。并且后续就把包发给路由器，Gateway "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".3")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),s._v(" 即是路由器的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ul",[n("li",[s._v("IP 报文生成")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(2090),alt:"Alt text"}})]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[s._v("此时，加上了 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 头部的"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v("包表示 ：“有 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 大佬给我指路了，感谢 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 层给我加上了 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 包头，让我有了远程定位的能力！不会害怕在浩瀚的互联网迷茫了！可是目的地好远啊，我下一站应该去哪呢？”\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"六-两点传输-mac"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#六-两点传输-mac"}},[s._v("#")]),s._v(" "),n("strong",[n("code",[s._v("（六）两点传输 —— MAC")])])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[s._v("生成了 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 头部之后，接下来网络包还需要在 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 头部的前面加上 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 头部。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("MAC 包头格式")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(2091),alt:"Alt text"}})]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("："),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 头部是以太网使用的头部，它包含了接收方和发送方的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址等信息\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("：在 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 包头里需要发送方 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址和接收方目标 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址，用于两点之间的传输。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("MAC 发送方和接收方如何确认?")])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 发送方的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址获取就比较简单了，"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址是在网卡生产时写入到 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ROM")]),s._v(" 里的，只要将这个值读取出来写入到 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 头部就可以了。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 接收方的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址就有点复杂了，只要告诉以太网对方的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 的地址，以太网就会帮我们把包发送过去，那么很显然这里应该填写对方的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("IP既然知道要发给谁，按如何获取对方的 MAC 地址呢")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(2092),alt:"Alt text"}})]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 不知道对方 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址？不知道就喊呗。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 此时就需要 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARP")]),s._v(" 协议帮我们找到路由器的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARP")]),s._v(" 协议会在以太网中以广播的形式，对以太网所有的设备喊出：“这个 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址是谁的？请把你的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址告诉我”。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 然后就会有人回答：“这个 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址是我的，我的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址是 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("XXXX")]),s._v("”。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 如果对方和自己处于同一个子网中，那么通过上面的操作就可以得到对方的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址。然后，我们将这个 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址写入 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 头部，"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 头部就完成了。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("ul",[n("li",[s._v("好像每次都要广播获取，这不是很麻烦吗？")])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 放心，在后续操作系统会把本次查询结果放到一块叫做 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARP")]),s._v(" 缓存的内存空间留着以后用，不过缓存的时间就几分钟。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 也就是说，在发包时：\n\t先查询 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARP")]),s._v(" 缓存，如果其中已经保存了对方的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址，就不需要发送 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARP")]),s._v(" 查询，直接使用 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARP")]),s._v(" 缓存中的地址。\n\t而当 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARP")]),s._v(" 缓存中不存在对方 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址时，则发送 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARP")]),s._v(" 广播查询。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 查看 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARP")]),s._v(" 缓存内容"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.17")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".4")]),s._v("是"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v("，"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("02")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("42")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("ac"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("04")]),s._v("是Mac地址，docker0是网卡名称\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@node1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("# arp "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("a\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.17")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" at "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("02")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("42")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("ac"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("04")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ether"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" on docker0\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("ul",[n("li",[s._v("MAC 报文生成")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(2093),alt:"Alt text"}})]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[s._v("此时，加上了 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 头部的"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v("数据包万分感谢，说道 ：“感谢 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 大佬，我知道我下一步要去了哪了！我现在有很多头部兄弟，相信我可以到达最终的目的地！”。带着众多头部兄弟的数据包，终于准备要出门了。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"七-出口-网卡"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#七-出口-网卡"}},[s._v("#")]),s._v(" "),n("strong",[n("code",[s._v("（七）出口 —— 网卡")])])]),s._v(" "),n("p",[n("img",{attrs:{src:a(2094),alt:"Alt text"}})]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 生成的网络包只是存放在内存中的一串二进制数字信息，没有办法直接发送给对方。因此，我们需要将数字信息转换为电信号，才能在网线上传输，也就是说，这才是真正的数据发送过程\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 负责执行这一操作的是网卡，要控制网卡还需要靠网卡驱动程序。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 网卡驱动从 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 模块获取到包之后，会将其复制到网卡内的缓存区中，接着会其开头加上报头和起始帧分界符，在末尾加上用于检测错误的帧校验序列。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 起始帧分界符是一个用来表示包起始位置的标记\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 末尾的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FCS")]),s._v("（帧校验序列）用来检查包传输过程是否有损坏\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 最后网卡会将包转为电信号，通过网线发送出去。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h3",{attrs:{id:"八-送别者-交换机"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#八-送别者-交换机"}},[s._v("#")]),s._v(" "),n("strong",[n("code",[s._v("（八）送别者 —— 交换机")])])]),s._v(" "),n("ul",[n("li",[s._v("下面来看一下包是如何通过交换机的。交换机的设计是将网络包原样转发到目的地。交换机工作在 MAC 层，也称为二层网络设备，是基于以太网设计的设备。")])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 首先，电信号到达网线接口，交换机里的模块进行接收，接下来交换机里的模块将电信号转换为数字信号。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 然后通过包末尾的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FCS")]),s._v(" 校验错误，如果没问题则放到缓冲区。这部分操作基本和计算机的网卡相同，但交换机的工作方式和网卡不同。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 计算机的网卡本身具有 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址，并通过核对收到的包的接收方 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址判断是不是发给自己的，如果不是发给自己的则丢弃；相对地，交换机的端口不核对接收方 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址，而是直接接收所有的包并存放到缓冲区中。因此，和网卡不同，交换机的端口不具有 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 将包存入缓冲区后，接下来需要查询一下这个包的接收方 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址是否已经在 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址表中有记录了。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ul",[n("li",[s._v("交换机的 MAC 地址表主要包含两个信息：")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(2095),alt:"Alt text"}})]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 一个是设备的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址，\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 另一个是该设备连接在交换机的哪个端口上。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("举个例子")])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[s._v("如果收到的包的接收方 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("00")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("02")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("B3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("C"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("C"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("F9")]),s._v("，则与图中表中的第 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" 行匹配，根据端口列的信息，可知这个地址位于 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" 号端口上，然后就可以通过交换电路将包发送到相应的端口了。\n所以，交换机根据 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址表查找 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址，然后将信号发送到相应的端口。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("当 MAC 地址表找不到指定的 MAC 地址会怎么样？")])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("：地址表中找不到指定的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址。这可能是因为具有该地址的设备还没有向交换机发送过包，或者这个设备一段时间没有工作导致地址被从地址表中删除了。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("：地址表中找不到指定的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址。这可能是因为具有该地址的设备还没有向交换机发送过包，或者这个设备一段时间没有工作导致地址被从地址表中删除了。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("：这种情况下，交换机无法判断应该把包转发到哪个端口，只能将包转发到除了源端口之外的所有端口上，无论该设备连接在哪个端口上都能收到这个包。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("：这样做不会产生什么问题，因为以太网的设计本来就是将包发送到整个网络的，然后只有相应的接收者才接收包，而其他设备则会忽略这个包。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("：有人会说：“这样做会发送多余的包，会不会造成网络拥塞呢？”\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("：其实完全不用过于担心，因为发送了包之后目标设备会作出响应，只要返回了响应包，交换机就可以将它的地址写入 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址表，下次也就不需要把包发到所有端口了。局域网中每秒可以传输上千个包，多出一两个包并无大碍。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("：此外，如果接收方 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址是一个广播地址，那么交换机会将包发送到除源端口之外的所有端口。以下两个属于广播地址：\n\t"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址中的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FF")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FF")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FF")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FF")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FF")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FF")]),s._v("\n\t"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址中的 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".255")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".255")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br")])]),n("h3",{attrs:{id:"九-出境大门-路由器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#九-出境大门-路由器"}},[s._v("#")]),s._v(" "),n("strong",[n("code",[s._v("（九）出境大门 —— 路由器")])])]),s._v(" "),n("ul",[n("li",[s._v("路由器与交换机的区别")])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("：网络包经过交换机之后，现在到达了路由器，并在此被转发到下一个路由器或目标设备。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("：这一步转发的工作原理和交换机类似，也是通过查表判断包转发的目标。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("：不过在具体的操作过程上，路由器和交换机是有区别的。\n\t因为路由器是【基于 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 设计的】，俗称三层网络设备，路由器的各个端口都具有 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址和 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址；\n\t而交换机是【基于以太网设计的】，俗称二层网络设备，交换机的端口不具有 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址，交换机只具备端口\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ul",[n("li",[s._v("路由器基本原理")])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("：路由器的端口具有 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址，因此它就能够成为以太网的发送方和接收方；同时还具有 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址，从这个意义上来说，它和计算机的网卡是一样的\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("：当转发包时，首先路由器端口会接收发给自己的以太网包，然后路由表查询转发目标，再由相应的端口作为发送方将以太网包发送出去\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[s._v("路由器的包接收操作")])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("：首先，电信号到达网线接口部分，路由器中的模块会将电信号转成数字信号，然后通过包末尾的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("FCS")]),s._v(" 进行错误校验。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("：如果没问题则检查 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 头部中的接收方 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址，看看是不是发给自己的包，如果是就放到接收缓冲区中，否则就丢弃这个包。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("：总的来说，路由器的端口都具有 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址，只接收与自身地址匹配的包，遇到不匹配的包则直接丢弃。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("ul",[n("li",[s._v("查询路由表确定输出端口")])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("：完成包接收操作之后，路由器就会去掉包开头的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 头部。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("："),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 头部的作用【就是将包送达路由器】，其中的接收方 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址就是路由器端口的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址。因此，【当包到达路由器之后，"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 头部的任务就完成了，于是 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 头部就会被丢弃。】\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("：接下来，路由器会根据 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 头部后方的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 头部中的内容进行包的转发操作。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("：转发操作分为几个阶段，首先是查询路由表判断转发目标。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[n("img",{attrs:{src:a(2096),alt:"Alt text"}})]),s._v(" "),n("ul",[n("li",[s._v("根据上面的图，举个例子")])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("：假设地址为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.10")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".101")]),s._v(" 的计算机要向地址为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".100")]),s._v(" 的服务器发送一个包，这个包先到达图中的路由器。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("：判断转发目标的第一步，就是根据包的接收方 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址查询路由表中的目标地址栏，以找到相匹配的记录。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("：路由匹配和前面讲的一样，每个条目的子网掩码和 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".100")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 做 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" 与运算后，得到的结果与对应条目的目标地址进行匹配，如果匹配就会作为候选转发目标，如果不匹配就继续与下个条目进行路由匹配。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("：如第二条目的子网掩码 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".255")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v(" 与 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".100")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 做 "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&")]),s._v(" 与运算后，得到结果是 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v(" ，这与第二条目的目标地址 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v(" 匹配，该第二条目记录就会被作为转发目标。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("：实在找不到匹配路由时，就会选择默认路由，路由表中子网掩码为 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),s._v(" 的记录表示「默认路由」。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("：接下来就会进入包的发送操作。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("：首先，我们需要根据路由表的网关列判断对方的地址。\n\t如果网关是一个 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址，则这个"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址就是我们要转发到的目标地址，还未抵达终点，还需继续需要路由器转发。\n\t如果网关为空，则 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 头部中的接收方 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址就是要转发到的目标地址，也是就终于找到 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 包头里的目标地址了，说明已抵达终点。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("：知道对方的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址之后，接下来需要通过 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARP")]),s._v(" 协议根据 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址查询 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址，并将查询的结果作为接收方 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("：路由器也有 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARP")]),s._v(" 缓存，因此首先会在 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARP")]),s._v(" 缓存中查询，如果找不到则发送 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("ARP")]),s._v(" 查询请求。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("：接下来是发送方 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址字段，这里填写输出端口的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址。还有一个以太类型字段，填写 "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("0080")]),s._v(" （十六进制）表示 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 协议。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("：网络包完成后，接下来会将其转换成电信号并通过端口发送出去。这一步的工作过程和计算机也是相同的。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("：发送出去的网络包会通过交换机到达下一个路由器。由于接收方 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址就是下一个路由器的地址，所以交换机会根据这一地址将包传输到下一个路由器。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v("：接下来，下一个路由器会将包转发给再下一个路由器，经过层层转发之后，网络包就到达了最终的目的地。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v("：不知你发现了没有，在网络包传输的过程中，【源 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 和目标 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 始终是不会变的】，一直变化的是 【"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址】，因为需要 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 地址在以太网内进行两个设备之间的包传输。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br")])]),n("h3",{attrs:{id:"十-互相扒皮-服务器-与-客户端"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#十-互相扒皮-服务器-与-客户端"}},[s._v("#")]),s._v(" "),n("strong",[n("code",[s._v("（十）互相扒皮 —— 服务器 与 客户端")])])]),s._v(" "),n("p",[n("img",{attrs:{src:a(2097),alt:"Alt text"}})]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTTP")]),s._v(" 响应报文也需要穿上 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v("、"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v("、"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("MAC")]),s._v(" 头部，不过这次是源地址是服务器 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址，目的地址是客户端 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 地址。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 穿好头部衣服后，从网卡出去，交由交换机转发到出城的路由器，路由器就把响应数据包发到了下一个路由器，就这样跳啊跳。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 最后跳到了客户端的城门把手的路由器，路由器扒开 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("IP")]),s._v(" 头部发现是要找城内的人，于是把包发给了城内的交换机，再由交换机转发到客户端。\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 客户端收到了服务器的响应数据包后，同样也非常的高兴，客户能拆快递了！\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 于是，客户端开始扒皮，把收到的数据包的皮扒剩 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("HTTP")]),s._v(" 响应报文后，交给浏览器去渲染页面，一份特别的数据包快递，就这样显示出来了！\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" 最后，客户端要离开了，向服务器发起了 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCP")]),s._v(" 四次挥手，至此双方的连接就断开了。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])])])}),[],!1,null,null,null);t.default=r.exports}}]);