(window.webpackJsonp=window.webpackJsonp||[]).push([[327],{2129:function(s,a,t){s.exports=t.p+"assets/img/2022-03-0910.58.07.3115a459.png"},2778:function(s,a,t){"use strict";t.r(a);var n=t(9),r=Object(n.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"一-进程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-进程"}},[s._v("#")]),s._v(" 一：进程")]),s._v(" "),n("h3",{attrs:{id:"一-单道批系统、多道批系统、分时系统"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-单道批系统、多道批系统、分时系统"}},[s._v("#")]),s._v(" (一)：单道批系统、多道批系统、分时系统")]),s._v(" "),n("ul",[n("li",[n("p",[n("strong",[n("code",[s._v("单道批系统")])]),s._v("：只有一个进程运行，当进程阻塞的时候，CPU就停止工作了")])]),s._v(" "),n("li",[n("p",[n("strong",[n("code",[s._v("多道批系统")])]),s._v("：多个进程运行，当进程阻塞的时候，操作系统会调度其他进程到CPU上运行，使得CPU尽量忙碌")])]),s._v(" "),n("li",[n("p",[n("strong",[n("code",[s._v("分时系统")])]),s._v("：操作系统以很短的时间片为单位(5ms)，把CPU轮流分配给每个进程使用")])])]),s._v(" "),n("h3",{attrs:{id:"二-进程的状态"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-进程的状态"}},[s._v("#")]),s._v(" (二)：进程的状态")]),s._v(" "),n("ul",[n("li",[s._v("进程有5种状态")])]),s._v(" "),n("p",[n("img",{attrs:{src:t(2129),alt:"Alt text"}})]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("：创建状态：进程正在被创建时的状态\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("：就绪状态：可运行，但因为其他进程正在运行而暂停停止\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("：运行状态：该时刻进程占用 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CPU")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("：阻塞状态：该进程正在等待某一事件发生（"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("I")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("O")]),s._v("阻塞）而暂时停止运行，即使拥有"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CPU")]),s._v("，也无法运行\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("：结束状态：进程正在从系统中消失时的状态\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("ul",[n("li",[s._v("还有一个状态叫**"),n("code",[s._v("挂起状态")]),n("strong",[s._v("，它表示进程没有占有物理内存空间。这跟"),n("code",[s._v("阻塞状态")]),s._v("是不一样，阻塞状态是等待某个事件的返回。由于")]),s._v("虚拟内存管理原因**，"),n("strong",[s._v("进程所使用的虚拟空间可能并没有映射到物理内存，而是在硬盘上，需要从硬盘中加载到物理内存")]),s._v("，这时进程就会出现挂起状态，另外调用 sleep 也会被挂起")])]),s._v(" "),n("h3",{attrs:{id:"三-进程控制块-pcb"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三-进程控制块-pcb"}},[s._v("#")]),s._v(" (三)：进程控制块 PCB")]),s._v(" "),n("ul",[n("li",[s._v("PCB 是进程存在的唯一标识，一个进程的存在，必然会有一个 PCB。PCB包含的信息如下")])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("：进程描述信息：进程标识符，用户标识符\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("：进程控制和管理信息：进程当前状态，进程优先级\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("：资源分配清单：有关内存地址空间或虚拟地址空间的信息，所打开文件的列表和所使用的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("I")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("O")]),s._v(" 设备信息\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("："),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CPU")]),s._v(" 相关信息："),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CPU")]),s._v(" 的状态信息\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"四-进程的上下文切换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四-进程的上下文切换"}},[s._v("#")]),s._v(" (四)：进程的上下文切换")]),s._v(" "),n("ul",[n("li",[n("p",[n("strong",[s._v("进程的上下文切换")]),s._v("：各个进程之间是共享 CPU 资源的，在不同的时候进程之间需要切换，让不同的进程可以在 CPU 执行")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("进程是由内核管理和调度的")]),s._v("，"),n("strong",[s._v("所以"),n("code",[s._v("进程的切换只能发生在内核态")])]),s._v("。进程的上下文切换不仅包含了虚拟内存、栈、全局变量等用户空间的资源，还包括了内核堆栈、寄存器等内核空间的资源")])])]),s._v(" "),n("h2",{attrs:{id:"二-线程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-线程"}},[s._v("#")]),s._v(" 二：线程")]),s._v(" "),n("h3",{attrs:{id:"一-什么是线程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-什么是线程"}},[s._v("#")]),s._v(" (一)：什么是线程")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("线程是进程当中的一条执行流程")]),s._v("，是操作系统执行任务的最基本的单元。线程是调度的基本单位，而进程则是资源拥有的基本单位")])]),s._v(" "),n("h3",{attrs:{id:"二-线程上下文切换"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-线程上下文切换"}},[s._v("#")]),s._v(" (二)：线程上下文切换")]),s._v(" "),n("ul",[n("li",[n("p",[n("strong",[s._v("当两个线程不是属于同一个进程")]),s._v("，则切换的过程就跟进程上下文切换一样")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("当两个线程是属于同一个进程")]),s._v("，因为虚拟内存是共享的，所以在切换时，虚拟内存这些资源就保持不动，只需要切换线程的私有数据、寄存器等不共享的数据")])])]),s._v(" "),n("h3",{attrs:{id:"三-线程的实现"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三-线程的实现"}},[s._v("#")]),s._v(" (三)：线程的实现")]),s._v(" "),n("ul",[n("li",[n("p",[n("strong",[s._v("用户线程")]),s._v("：在用户空间实现的线程，不是由内核管理的线程，是由用户态的线程库来完成线程的管理")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("内核线程")]),s._v("：在内核中实现的线程，是由内核管理的线程")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("轻量级进程")]),s._v("：在内核中来支持用户线程")])])]),s._v(" "),n("h3",{attrs:{id:"四-用户线程和内核线程的对应关系"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四-用户线程和内核线程的对应关系"}},[s._v("#")]),s._v(" (四)：用户线程和内核线程的对应关系")]),s._v(" "),n("ul",[n("li",[n("p",[n("strong",[s._v("第一种关系是多对一的关系")]),s._v("："),n("code",[s._v("多个用户线程")]),s._v("对应同"),n("code",[s._v("一个内核线程")])])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("第二种是一对一的关系")]),s._v("："),n("code",[s._v("一个用户线程")]),s._v("对应"),n("code",[s._v("一个内核线程")])])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("第三种是多对多的关系")]),s._v("："),n("code",[s._v("多个用户线程")]),s._v("对应到"),n("code",[s._v("多个内核线程")])])])]),s._v(" "),n("h3",{attrs:{id:"五-用户线程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#五-用户线程"}},[s._v("#")]),s._v(" (五)：用户线程")]),s._v(" "),n("ul",[n("li",[n("p",[n("strong",[s._v("用户线程的整个线程管理和调度，操作系统是不直接参与的")]),s._v("，而"),n("code",[s._v("是由用户级线程库函数")]),s._v("来完成线程的管理，包括线程的创建、终止、同步和调度等。"),n("strong",[s._v("用户级线程的模型，也就类似前面提到的多对一的关系")]),s._v("，即"),n("code",[s._v("多个用户线程对应同一个内核线程")])])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("用户线程的优点")])])])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("：每个进程都需要有它私有的线程控制块（"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCB")]),s._v("）列表，用来跟踪记录它各个线程状态信息（"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PC")]),s._v("、栈指针、寄存器），"),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCB")]),s._v(" 由用户级线程库函数来维护，可用于不支持线程技术的操作系统\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("：用户线程的切换也是由线程库函数来完成的，无需用户态与内核态的切换，所以速度特别快\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[n("strong",[s._v("用户线程的的缺点")])])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("：由于操作系统不参与线程的调度，如果一个线程发起了系统调用而阻塞，那进程所包含的用户线程都不能执行了")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("类似于Python的多线程"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("：当一个线程开始运行后，除非它主动交出 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CPU")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("的使用权")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("类似Python的协程"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("，否则它所在的进程当中的其他线程无法运行，因为用户态的线程没法打断当前运行中的线程，它没有这个特权，只有操作系统才有，但是用户线程不是由操作系统管理的")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("类似Python的多线程"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("：由于时间片分配给进程，故与其他进程比，在多线程执行时，每个线程得到的时间片较少，执行会比较慢")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("类似Python的多线程"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"六-内核线程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#六-内核线程"}},[s._v("#")]),s._v(" (六)：内核线程")]),s._v(" "),n("ul",[n("li",[n("p",[n("strong",[s._v("内核线程是由操作系统管理的")]),s._v("，线程对应的 TCB 自然是放在操作系统里的，"),n("strong",[s._v("这样线程的创建、终止和管理都是由"),n("code",[s._v("操作系统负责")])]),s._v("。"),n("strong",[s._v("内核线程的模型，也就类似前面提到的一对一的关系")]),s._v("，即"),n("code",[s._v("一个用户线程对应一个内核线程")])])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("内核线程的优点")])])])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("：在一个进程当中，如果某个内核线程发起系统调用而被阻塞，并不会影响其他内核线程的运行\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("：分配给多线程的进程获得更多的 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CPU")]),s._v(" 运行时间\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("ul",[n("li",[n("strong",[s._v("内核线程的缺点")])])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("：在支持内核线程的操作系统中，由内核来维护进程和线程的上下信息，如 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("PCB")]),s._v(" 和 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("TCB")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("：内核线程的创建、终止和切换都是通过系统调用的方式来进行，因此对于系统来说，系统开销比较大\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"七-轻量级进程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#七-轻量级进程"}},[s._v("#")]),s._v(" (七)：轻量级进程")]),s._v(" "),n("ul",[n("li",[n("p",[n("strong",[s._v("轻量级进程是内核支持的用户线程")]),s._v("，一个进程可有一个或多个 轻量级进程，每个 轻量级进程 是跟内核线程一对一映射的，也就是 轻量级进程 都是由一个内核线程支持。轻量级进程 只能由内核管理并像普通进程一样被调度，Linux 内核是支持 轻量级进程 的典型例子")])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("轻量级进程与普通进程的区别也在于它只有一个最小的执行上下文和调度程序所需的统计信息")]),s._v("，一般来说，一个进程代表程序的"),n("code",[s._v("一个实例")]),s._v("，而 轻量级进程 代表程序的"),n("code",[s._v("执行线程")])])]),s._v(" "),n("li",[n("p",[n("strong",[s._v("在 轻量级进程 之上也是可以使用用户线程的")]),s._v("：对应关系如下")])])]),s._v(" "),n("div",{staticClass:"language-javascript line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("："),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，即一个 轻量级进程 对应 一个用户线程\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("："),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("N")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("，即一个 轻量级进程 对应 多个用户线程\n\n"),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("："),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("M")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("N")]),s._v("，即多个 轻量级进程 对应 多个用户线程，多个 轻量级进程 对应 "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("多个内核级线程")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("类似Golang的Goroutine"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("，综合了前两种优点，大部分的线程上下文发生在用户空间，且多个线程又可以充分利用多核 "),n("span",{pre:!0,attrs:{class:"token constant"}},[s._v("CPU")]),s._v(" 的资源\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);