(window.webpackJsonp=window.webpackJsonp||[]).push([[176],{2164:function(t,s,a){"use strict";a.r(s);var e=a(9),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"一-thrift-概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-thrift-概念"}},[t._v("#")]),t._v(" 一：Thrift 概念")]),t._v(" "),e("h3",{attrs:{id:"一-thrift的定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-thrift的定义"}},[t._v("#")]),t._v(" (一) Thrift的定义")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Thrift是一个轻量级、跨语言的RPC框架，主要用于各个服务之间的RPC通信，最初有Facebook在2007年开发，2008年进入Apache开源项目。它通过自身的IDL中间语言，并且借助代码生成引擎生成各种主流语言的RPC服务端/客户端代码模板。Thrift支持多种不同的编程语言，包括C++、Java、Python、Golang、PHP等")])]),t._v(" "),e("li",[e("p",[t._v("RPC全称为Remote Procedure Call，即远程过程调用。RPC技术是为了解决远程调用服务的一种技术，使得调用者就像调用本地服务一样方便透明")])])]),t._v(" "),e("h3",{attrs:{id:"二-thrift的架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-thrift的架构"}},[t._v("#")]),t._v(" (二) Thrift的架构")]),t._v(" "),e("ul",[e("li",[t._v("Thrift 技术栈分层从下向上分别为：传输层、协议层、处理层、服务层")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(639),alt:"Alt text"}})]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("：传输层：传输层负责使用socket进行数据传输，直接从socket中读取和写入数据，它定义了具体的网络传输协议，例如：基于"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TCP")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IP")]),t._v("实现的传输层协议\n\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v("：Thrift数据传输方式如下：\n\t\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),t._v("：TSocket"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 阻塞式socket\n\t\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".2")]),t._v("：TFramedTransport"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 以frame为单位进行传输，非阻塞式服务中使用\n\t\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".3")]),t._v("：TFileTransport"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 以文件形式进行传输\n\t\t\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("：协议层：协议层定义了数据的传输格式，负责网络传输数据的序列化和反序列化，例如："),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),t._v("、"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("XML")]),t._v("、数据帧等\n\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.1")]),t._v("：Thrift传输格式如下：\n\t\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.1")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),t._v("：TBinaryProtocol"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 二进制格式\n\t\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.1")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".2")]),t._v("：TCompactProtocol"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 压缩格式\n\t\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.1")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".3")]),t._v("：TJSONProtocol"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),t._v("格式\n\t\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.1")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".4")]),t._v("：TSimpleJSONProtocol"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 提供只写的"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),t._v("协议\n\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("：处理层：处理层是由具体的"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IDL")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("接口描述语言"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("生成的，封装了具体的底层网络传输和序列化方式，并委托给用户实现Handler进行处理\n\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("：服务层：整合上述组件，提供具体的网络"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("模型")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("单线程、多线程、事件驱动"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，形成最终的服务\n\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.1")]),t._v("：Thrift 服务器端实现方式：\n\t\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.1")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),t._v("：TSimpleServer"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 简单的单线程服务模型，常用于测试\n\t\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.1")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".2")]),t._v("：TThreadPoolServer"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 多线程服务模型，使用标准的阻塞式"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IO")]),t._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.1")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".3")]),t._v("：TNonBlockingServer"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 多线程服务模型，使用非阻塞式"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IO")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("需要使用TFramedTransport数据传输方式"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.1")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".4")]),t._v("：THsHaServer"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" THsHa引入了线程池去处理，其模型读写任务放到线程池去处理，Half"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("sync"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("Half"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v("处理模式，Half"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v("是在处理"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IO")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("事件上")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("accept"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("read"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("write io"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("，Half"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("sync用于handler对rpc的同步处理\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br")])]),e("ul",[e("li",[t._v("Thrift 采用TCP/IP作为更底层的通信协议，整个通信过程如下")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(640),alt:"Alt text"}})]),t._v(" "),e("h2",{attrs:{id:"二-thrift-特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-thrift-特性"}},[t._v("#")]),t._v(" 二：Thrift 特性")]),t._v(" "),e("h3",{attrs:{id:"一-开发速度快"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-开发速度快"}},[t._v("#")]),t._v(" (一) 开发速度快")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("通过编写RPC接口Thrift IDL文件，利用编译生成器自动生成服务器端骨架(Skeletons)和客户端桩(Stubs)，从而省去开发者自定义和维护接口编解码、消息传递、服务器多线程模型等基础工作。")])]),t._v(" "),e("li",[e("p",[t._v("服务端：只需要按照服务器骨架，编写好具体的业务处理程序(Handler)，实现服务的接口即可")])]),t._v(" "),e("li",[e("p",[t._v("客户端：只需要拷贝IDL定义好的客户端桩和服务对象，然后就像调用本地对象的方法一样调用远端服务")])])]),t._v(" "),e("h3",{attrs:{id:"二-接口维护简单"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-接口维护简单"}},[t._v("#")]),t._v(" (二) 接口维护简单")]),t._v(" "),e("ul",[e("li",[t._v("通过维护Thrift格式的IDL(接口描述语言)文件(注意写好注释)，即可作为给Client使用的接口文档使用，也自动生成接口代码，始终保持代码和文档一致性。Thrift协议可灵活支持接口的扩展性")])]),t._v(" "),e("h3",{attrs:{id:"三-学习成本低"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-学习成本低"}},[t._v("#")]),t._v(" (三) 学习成本低")]),t._v(" "),e("ul",[e("li",[t._v("IDL文件风格类似于Google Protobuf，且更加已读易懂，一个PRC服务的接口编写就像写一个Class接口一样简单")])]),t._v(" "),e("h3",{attrs:{id:"四-多语言支持"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四-多语言支持"}},[t._v("#")]),t._v(" (四) 多语言支持")]),t._v(" "),e("ul",[e("li",[t._v("Thrift支持C++、Golang、Java、Python、PHP等多种语言")])]),t._v(" "),e("h3",{attrs:{id:"五-稳定且广泛使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#五-稳定且广泛使用"}},[t._v("#")]),t._v(" (五) 稳定且广泛使用")]),t._v(" "),e("ul",[e("li",[t._v("Thrift在诸多开源项目中都被验证是稳定高效的，例如：Cassandra、Hadoop、HBase等，国外在Facebook中有广泛使用，国内包括百度、美团、小米等")])]),t._v(" "),e("h2",{attrs:{id:"三-thrift-详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-thrift-详解"}},[t._v("#")]),t._v(" 三：Thrift 详解")]),t._v(" "),e("h3",{attrs:{id:"一-架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-架构"}},[t._v("#")]),t._v(" (一) 架构")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("Thrift是一个典型的CS结构，客户端和服务器端可以使用不同的语言开发，IDL(接口描述语言)作为一种中间语言来关联客户端和服务器端的语言")])]),t._v(" "),e("li",[e("p",[t._v("Thrift采用IDL来定义通用的服务接口，然后通过Thrift提供的编译器，可以将服务接口编译成不同语言的代码，通过这个方式来实现跨语言功能")])])]),t._v(" "),e("h2",{attrs:{id:"四-idl语法详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四-idl语法详解"}},[t._v("#")]),t._v(" 四：IDL语法详解")]),t._v(" "),e("h3",{attrs:{id:"一-基本类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-基本类型"}},[t._v("#")]),t._v(" (一) 基本类型")]),t._v(" "),e("ul",[e("li",[t._v("Thrift支持下面几种基本类型")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("Type")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("Desc")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("Java")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("Go")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("i8")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("有符合的8位整数")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("byte")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("int8")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("i16")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("有符合的16位整数")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("float")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("int16")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("i32")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("有符合的32位整数")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("int")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("int32")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("i64")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("有符合的64位整数")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("long")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("int64")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("64位浮点数")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("double")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("float64")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("bool")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("布尔值")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("doublean")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("bool")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("string")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("文本字符串(utf-8编码格式)")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("String")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("string")])])])]),t._v(" "),e("h3",{attrs:{id:"二-特殊类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-特殊类型"}},[t._v("#")]),t._v(" (二) 特殊类型")]),t._v(" "),e("ul",[e("li",[t._v("banary：未编码的字节序列，是string的一种特殊形式，这种类型主要是方便某些场景下JAVA调用，"),e("strong",[t._v("Golang中对应的是[]byte")])])]),t._v(" "),e("h3",{attrs:{id:"三-集合容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-集合容器"}},[t._v("#")]),t._v(" (三) 集合容器")]),t._v(" "),e("ul",[e("li",[t._v("有三种可用的容器类型。使用容器数据类型的时候必须指定泛型，否则无法编译IDL文件。集合中的元素可以是除了service之外的任何类型，包括exception")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("Type")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("Desc")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("Java")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("Go")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("list<T>")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("元素的有序列表")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("List")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("[]T")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("set<T>")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("元素无序列表，不允许重复")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Set")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("map[T]struct{}")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[e("code",[t._v("map<K,V>")])]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("key-value数据结构，key不允许重复")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Map")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("map[K]V")])])])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Test是结构体，内部是字段")]),t._v("\nstruct Test "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" map"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" user"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" usermap"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" set"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("i32"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" intset"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" list"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("double"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" doublelist\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("h3",{attrs:{id:"四-常量及类型别名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四-常量及类型别名"}},[t._v("#")]),t._v(" (四) 常量及类型别名")]),t._v(" "),e("ul",[e("li",[t._v("常量和类型别名都可以在IDL文件中定义")])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义常量")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" i32 "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("MALE_INT")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" map"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("i32"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" string"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GENDER_MAP")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"male"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"female"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义别名")]),t._v("\ntypedef map"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("i32"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" string"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" gmp\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("h3",{attrs:{id:"五-struct类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#五-struct类型"}},[t._v("#")]),t._v(" (五) struct类型")]),t._v(" "),e("ul",[e("li",[t._v("在面向对象语言中，表现为“类定义”，在弱类型语言、动态语言中，表现为“结构/结构体”，格式定义如下")])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("struct "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("结构体名称"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("序号"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("字段性质"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("字段类型"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("字段名称"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("默认值"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("ul",[e("li",[t._v("例如如下的User结构")])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("struct User "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" required string name"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 该字段必须填写")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" optional i32 age "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认值为0")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" bool gender           "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 字段类型为bool，但是没有给此字段传递值，字段不会被序列化")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("ul",[e("li",[t._v("Struct有以下一些约束")])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("：struct不能继承，但是可以嵌套，不能嵌套自己\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("：其成员都是有明确类型\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("：成员是被正整数编号过的，编号不能重复，这个是为了在传输过程中编码使用\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("：成员分隔符可以是逗号、分号，且可以混用\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v("：字段有 optional 和 required 之分，与protobuf类似，但是如果不能指定则为无类型，可以不传递改值，但是在序列化传输的时候，也会序列化进去，optional是不传递值则不序列化，required是必须传递值必须序列化\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v("：每个字段可以设置默认值\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("：同一个文件可以定义多个struct，也可以在一个文件中include导入另外一个文件的struct\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("h3",{attrs:{id:"六-枚举类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#六-枚举类型"}},[t._v("#")]),t._v(" (六) 枚举类型")]),t._v(" "),e("ul",[e("li",[t._v("Thrift不支持枚举类型嵌套，枚举常量必须是32位正整数")])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// enum是类型名称，HttpStatus是变量名称")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("enum")]),t._v(" HttpStatus "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OK")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NOTFOUND")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("h3",{attrs:{id:"七-异常"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#七-异常"}},[t._v("#")]),t._v(" (七) 异常")]),t._v(" "),e("ul",[e("li",[t._v("异常在语法和功能上类似于结构体，差别是异常使用关键字exception，而且异常是继承每种语言的基础异常类")])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("exception MyException "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" i32 errorCode\n\t"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string message\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义服务")]),t._v("\nservice ExampleService "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tstring GetName "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("throws")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" MyException e"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("h3",{attrs:{id:"八-服务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#八-服务"}},[t._v("#")]),t._v(" (八) 服务")]),t._v(" "),e("ul",[e("li",[t._v("服务的定义在语义上与面向对象语言的接口类似，服务内部定义了需要实现的方法")])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("service HelloService "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\ti32 "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayInt")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" i32 param"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sayInt方法，接收param参数，返回i32的结果")]),t._v("\n\tstring "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayString")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string param"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\tbool "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayBoolean")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" bool param"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayVoid")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("h3",{attrs:{id:"九-namespace-名称空间"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#九-namespace-名称空间"}},[t._v("#")]),t._v(" (九) NameSpace 名称空间")]),t._v(" "),e("ul",[e("li",[t._v("Thrift中的名称空间类似于Golang中的package，它们提供一种组织代码的快捷方式，名称空间也可以用于解决类型定义中的名字冲突。由于每种语言有自己的命名空间定义方式(Python中使用module，Golang使用package)，Thrift允许开发者针对特定语言定义namespace")])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("namespace go Sample\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h3",{attrs:{id:"十-注释"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#十-注释"}},[t._v("#")]),t._v(" (十) 注释")]),t._v(" "),e("ul",[e("li",[t._v("Thrift支持C多行注释和单行注释")])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n* 注释\n*/")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注释")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("h3",{attrs:{id:"十一-include导入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#十一-include导入"}},[t._v("#")]),t._v(" (十一) Include导入")]),t._v(" "),e("ul",[e("li",[t._v("为了便于管理，Thrift可以将不同业务的Service、Struct等，定义在不同的IDL文件中，允许一个IDL文件包含一个或多个IDL文件，通过include进行导入")])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("include "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test.thrift"')]),t._v("  \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])])])}),[],!1,null,null,null);s.default=n.exports},639:function(t,s,a){t.exports=a.p+"assets/img/2022-03-1312.53.22.3c222cb1.png"},640:function(t,s,a){t.exports=a.p+"assets/img/2022-03-1312.56.08.3f0e29ec.png"}}]);