(window.webpackJsonp=window.webpackJsonp||[]).push([[253],{2257:function(n,s,a){"use strict";a.r(s);var t=a(9),r=Object(t.a)({},(function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("ul",[t("li",[n._v("注意")])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("\t在java中，数组是一块连续的存储空间，一旦开辟之后无法改变数组的长度。因此java中的数组需要与Python中的列表区分，java中的数组无法对元素进行添加和删除，但是可以对元素进行赋值\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br")])]),t("h3",{attrs:{id:"_1-数组的定义和赋值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-数组的定义和赋值"}},[n._v("#")]),n._v(" 1：数组的定义和赋值")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("// 申明整形数组\nint[] intArr;\n\n// 申明字符串数组变量\nString[] stringArr;\n\n// 创建数组\nintArr = new int[5];\nstringArr = new String[10];\n\n// 申明数组的同时创建数组\nfloat[] floatArr = new float[4];\n\nchar[] charArr = {'1', '2', '3', '4'};\n\nSystem.out.println(floatArr[2]);\nSystem.out.println(charArr);\n// 计算数组的长度\nSystem.out.println(charArr.length);\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br")])]),t("h3",{attrs:{id:"_2-增强型的for循环"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-增强型的for循环"}},[n._v("#")]),n._v(" 2：增强型的for循环")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("// 类似于Python中的for循环\nint[] intArr = {1,2,3,4,5};\nfor (int n: intArr){\n    System.out.println(n);\n}\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br")])]),t("h3",{attrs:{id:"_3-冒泡排序"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-冒泡排序"}},[n._v("#")]),n._v(" 3：冒泡排序")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('# 冒泡排序的思想是：每一次内循环将最大的数放在最后，第一次外循环是的最大数放在最后，那么下一次比较最需要比较前n-1个数。5个数排序，外循环只要进行4次。内循环每次循环都需要减去外循环的次数，例如外循环是第3次循环，那么内循环中，后面的最大3个数不需要再比较，只需要比较全面的数，那么循环次数就是：数组长度 - 外循环次数 - i\nint[] intArr = {13,12,32,4,5};\nfor (int j = 0;j< intArr.length - 1; j++){\n    for (int i = 0; i < intArr.length - j - 1; i++){\n        if (intArr[i] ### intArr[i+1]) {\n            int temp = intArr[i];\n            intArr[i] = intArr[i+1];\n            intArr[i+1] = temp;\n        }\n    }\n}\nfor (int i: intArr){\n    System.out.print(i + " ");\n}\n\n// 输出结果\n4 5 12 13 32 \n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br")])]),t("h3",{attrs:{id:"_4-二维数组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-二维数组"}},[n._v("#")]),n._v(" 4：二维数组")]),n._v(" "),t("ul",[t("li",[n._v("二维数组可以看做一张二维表")])]),n._v(" "),t("p",[t("img",{attrs:{src:a(780),alt:"Alt text"}})]),n._v(" "),t("ul",[t("li",[n._v("二维数组声明的方式")])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("int[][] intArray1;\nint intArray2;\nint[] intArray3[];\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br")])]),t("ul",[t("li",[n._v("二维数组赋值和遍历")])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('int[][] chars = {{1,2,3}, {1,2,3,4,5}, {1,2,3,4,5,6,7}};\n\n// 遍历循环\nfor (int i = 0; i < chars.length; i++) {\n    System.out.println();\n    for (int j = 0; j < chars[i].length; j++) {\n        System.out.print(chars[i][j] + ",");\n    }\n}\n\n// 增强循环\nfor (int[] i: chars){\n    System.out.println();\n    for (int j: i){\n        System.out.print(j + ",");\n    }\n}\n\n// 输出结果\n1,2,3,\n1,2,3,4,5,\n1,2,3,4,5,6,7,\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br")])])])}),[],!1,null,null,null);s.default=r.exports},780:function(n,s,a){n.exports=a.p+"assets/img/6A52D17D0A168BE73E33793B9981463B.bdfcfa57.png"}}]);