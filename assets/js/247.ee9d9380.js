(window.webpackJsonp=window.webpackJsonp||[]).push([[247],{2241:function(n,s,t){"use strict";t.r(s);var a=t(9),e=Object(a.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("p",[a("img",{attrs:{src:t(769),alt:"Alt text"}})]),n._v(" "),a("h2",{attrs:{id:"一-withcancel方法派生的根cancelctx和子cancelctx介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-withcancel方法派生的根cancelctx和子cancelctx介绍"}},[n._v("#")]),n._v(" 一：WithCancel方法派生的根cancelCtx和子cancelCtx介绍")]),n._v(" "),a("h3",{attrs:{id:"一-cancelctx-回溯树介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-cancelctx-回溯树介绍"}},[n._v("#")]),n._v(" (一) cancelCtx 回溯树介绍")]),n._v(" "),a("ul",[a("li",[a("strong",[n._v("empty类型")]),n._v("：是一个int类型的别名，"),a("code",[n._v("context.Background()")]),n._v("返回的是一个new(empty)类型，因此"),a("code",[n._v("context.Background()")]),n._v("获取的根context本质上是一个0值。调用"),a("code",[n._v("context.Background()")]),n._v("和"),a("code",[n._v("context.TODO()")]),n._v("本质上是一样的，但是语义不一样，"),a("code",[n._v("不知道使用什么值合适时，可以使用 context.TODO()")]),n._v("，一般情况下创建父Context接口类型，都使用"),a("code",[n._v("context.Background()")])])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("type emptyCtx int\n\nvar (\n\tbackground = new(emptyCtx)\n\ttodo       = new(emptyCtx)\n)\n\nfunc Background() Context {\n\treturn background\n}\n\nfunc TODO() Context {\n\treturn todo\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br")])]),a("ul",[a("li",[a("strong",[n._v("cancelCtx类型")]),n._v("：是通过"),a("code",[n._v("WithCancel()")]),n._v("方法基于"),a("code",[n._v("empty类型")]),n._v("或者"),a("code",[n._v("根cancelCtx类型")]),n._v("派生出来的，派生方法是Golang中常用的embedded形式")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("type cancelCtx struct {\n\tContext // 父Context，可能是emptyCtx类型，也可以是cancelCtx类型\n\tmu       sync.Mutex // 互斥锁\n\tdone     chan struct{} // 只读channel\n\t// children是一个map，key是cancelCtx类型，value是struct{}{}空值，只要实现了canceler接口方法的类型都可以作为key\n\tchildren map[canceler]struct{}\n\terr      error // 错误信息\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br")])]),a("h3",{attrs:{id:"二-cancelctx是根context"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-cancelctx是根context"}},[n._v("#")]),n._v(" (二) cancelCtx是根Context")]),n._v(" "),a("ul",[a("li",[n._v("有回溯树可知，基于emptyCtx，使用"),a("code",[n._v("WithCancel()")]),n._v("方法派生了根Context(黄色cancelCtx)，如果基于cancelCtx根再调用"),a("code",[n._v("WithCancel()")]),n._v("方法，派生出来的是子Context(红色cancelCtx)，所有的子Context都会被根Context添加到map对象中，也就是说，如果多次调用"),a("code",[n._v("WithCancel()")]),n._v("方法，都会被根Context添加到map对象中。")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("func WithCancel(parent Context) (ctx Context, cancel CancelFunc) {\n\tc := newCancelCtx(parent) // 基于父context，初始化一个子cancelCtx\n\n\t// 这里必须保证c实现了cancel和Done方法\n\tpropagateCancel(parent, &c) // 当parent调用了cancel方法，那么让所有的child也调用cancel方法\n\n\t// 将child实例对象和cancelFunc返回\n\treturn &c, func() { c.cancel(true, Canceled) }\n}\n\n\n// propagateCancel // 当parent调用了cancel方法，那么让所有的child也调用cancel方法\nfunc propagateCancel(parent Context, child canceler) {\n\n\tdone := parent.Done() // 获取父Context的只读channel\n\tif done == nil {\n\t\treturn\n\t}\n\n\tselect {\n\n\tcase <-done: // 如果父Context的只读channel关闭了，那么子context也必须关闭，并且把父context的err传递到子context\n\n\t\tchild.cancel(false, parent.Err())\n\t\treturn\n\n\tdefault:\n\n\t}\n\n\t// 判断parent是否是cancelCtx类型\n\tif p, ok := parentCancelCtx(parent); ok { // 如果parent是cancelCtx类型\n\n\t\tp.mu.Lock()\n\n\t\tif p.err != nil { // 如果parent有err错误，让子cancelCtx关闭channel\n\t\t\tchild.cancel(false, p.err)\n\n\t\t} else { // 如果parent没有err错误\n\t\t\tif p.children == nil {  // 判断一下parent的children是不是空\n\t\t\t\tp.children = make(map[canceler]struct{}) // 如果是空，初始化一下\n\t\t\t}\n\t\t\tp.children[child] = struct{}{} // 将子cancelCtx加入到parent的children map中存储\n\n\t\t}\n\n\t\tp.mu.Unlock()\n\n\t} else { // 如果parent不是cancelCtx类型, 可能parent是自己实现的Context，才会启动goroutine,让child调用cancel方法，否则只是将child加入到children的map中\n\n\t\tatomic.AddInt32(&goroutines, +1) // 让goroutines+1\n\n\t\tgo func() { // 开启一个goroutine，\n\t\t\tselect {\n\t\t\tcase <-parent.Done(): // 那么只要parent的channel关闭了，那么所有的child也应该调用cancel方法\n\t\t\t\tchild.cancel(false, parent.Err())\n\n\t\t\tcase <-child.Done(): // 如果是child的channel关闭了，那么什么也不做\n\t\t\t}\n\t\t}()\n\t}\n\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br")])]),a("h3",{attrs:{id:"三-当父context-emptyctx-调用了cancelfunc-函数会发生什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-当父context-emptyctx-调用了cancelfunc-函数会发生什么"}},[n._v("#")]),n._v(" (三) 当父Context(emptyCtx)调用了cancelFunc()函数会发生什么")]),n._v(" "),a("ul",[a("li",[n._v("当完成本次api或rpc调用后，会执行"),a("code",[n._v("defer cancelFunc()函数")]),n._v("，此时会触发根cancelCtx调用cancel()方法，目的是关闭只读channel，让"),a("code",[n._v("<-ctx.Done()")]),n._v("返回struct{}{}，从而结束goroutine。在cancel()方法里面，根cancelCtx会遍历自己的children属性，获取所有的cancelCtx，所有的cancelCtx都调用一次cancel()方法，关闭自己的只读channel，让所有的子goroutine结束。"),a("code",[n._v("根cancelCtx同时也会将children属性设置为nil，让GC回收子cancelCtx内存空间")])])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('// 这里的c是根cancelCtx\nc.cancel(true, Canceled)\n\n// cancel cancel函数的功能是关闭channel\nfunc (c *cancelCtx) cancel(removeFromParent bool, err error) {\n\n\t// 在关闭channel的时候，必须给一个err\n\tif err == nil {\n\t\tpanic("context: internal error: missing cancel error")\n\t}\n\n\tc.mu.Lock()\n\tif c.err != nil {\n\t\tc.mu.Unlock()\n\t\treturn\n\t}\n\t// 将错误赋值给context\n\tc.err = err\n\n\tif c.done == nil {  // 如果只读channel是nil，那么初始化一个空channel\n\t\tc.done = closedchan\n\t} else {\n\t\tclose(c.done) // 这是函数的核心，关闭只读channel\n\t}\n\n\t// 这里是遍历canceler，只获取key\n\tfor child := range c.children {\n\t\t// 让所有的canceler都调用自己的cancel方法，但是没有让canceler从父context中移除\n\t\tchild.cancel(false, err)\n\t}\n\n\t// 所有的子canceler都关闭了channel后，就可以将children释放掉了\n\tc.children = nil\n\n\tc.mu.Unlock() // 再次解锁，避免死锁\n\t\n\t\n\tif removeFromParent {\n\t\tremoveChild(c.Context, c)\n\t}\n}\n\n// 将child自己从parent中移除掉\nfunc removeChild(parent Context, child canceler) {\n\tp, ok := parentCancelCtx(parent) // 先判断一下parent是否是cancelCtx类型\n\tif !ok { // 如果不是那么直接return，不需要移除\n\t\treturn\n\t}\n\tp.mu.Lock()\n\tif p.children != nil { // 如果parent是cancelCtx类型，且有children这个map属性，那么从children中移除掉对应的child这个key\n\t\tdelete(p.children, child)\n\t}\n\tp.mu.Unlock()\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br")])]),a("h3",{attrs:{id:"四-当子context-cancelctx-调用了cancelfunc-函数会发生什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四-当子context-cancelctx-调用了cancelfunc-函数会发生什么"}},[n._v("#")]),n._v(" (四) 当子Context(cancelCtx)调用了cancelFunc()函数会发生什么")]),n._v(" "),a("ul",[a("li",[n._v("由于"),a("code",[n._v("WithCancel(parent Context) (ctx Context, cancel CancelFunc)")]),n._v("方法可以多次调用，生成新的子cancelCtx，那么当前这个cancelCtx就会成为这些子cancelCtx的根cancelCtx，如果当前的cancelCtx调用了其cancel()方法，它只能管理器子cancelCtx，让子cancelCtx调用他们的cancel()方法，当前这个cancelCtx的parent是根cancelCtx，所以会从根cancelCtx的children属性中移除掉，被GC回收，且结束当前cancelCtx的所管理的有子goroutine，也包括自己的goroutine，设置children为nil，让子cancelCtx也被GC回收")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("// 让当前cancelCtx从根cancelCtx中移除\nfunc removeChild(parent Context, child canceler) {\n\tp, ok := parentCancelCtx(parent) // 先判断一下parent是否是cancelCtx类型\n\tif !ok { // 如果不是那么直接return，不需要移除\n\t\treturn\n\t}\n\tp.mu.Lock()\n\tif p.children != nil { // 如果parent是cancelCtx类型，且有children这个map属性，那么从children中移除掉对应的child这个key\n\t\tdelete(p.children, child)\n\t}\n\tp.mu.Unlock()\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br")])]),a("h2",{attrs:{id:"二-withtimeout方法、withdeadline方法派生的timerctx介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-withtimeout方法、withdeadline方法派生的timerctx介绍"}},[n._v("#")]),n._v(" 二：WithTimeout方法、WithDeadline方法派生的timerCtx介绍")]),n._v(" "),a("h3",{attrs:{id:"一-阅读context源码后-对结构体的继承、方法重写的思考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-阅读context源码后-对结构体的继承、方法重写的思考"}},[n._v("#")]),n._v(" (一) 阅读Context源码后，对结构体的继承、方法重写的思考")]),n._v(" "),a("ul",[a("li",[n._v("下面这个例子涵盖的知识点有：\n"),a("ul",[a("li",[n._v("1：结构体基于embeded的形式实现继承")]),n._v(" "),a("li",[n._v("2：子结构体拥有父结构体的所有方法和属性")]),n._v(" "),a("li",[n._v("3：构造函数返回的一般是接口类型，而不是结构体类型，目的是验证结构体实现了接口的方法")]),n._v(" "),a("li",[n._v("4：结构体的方法是指针接受者，那么在构造函数中返回的必须是结构体实例的指针")]),n._v(" "),a("li",[n._v("5：子结构体可以重写父类的方法，包括父类实现接口的方法")])])])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('// Adder 接口\ntype Adder interface {\n\tadd(x, y int) int\n}\n\n// addFather 父类结构体\ntype addFather struct {\n\ta int\n}\n\n// NewAddFather 父类构造函数\nfunc NewAddFather() Adder  {\n\treturn &addFather{}\n}\n\n// add 父类实现接口的方法\nfunc (a *addFather) add(x, y int) int {\n\treturn x + y\n}\n\n// addSon 子类结构体\ntype addSon struct {\n\taddFather\n}\n\n// NewAddSon 子类构造函数\nfunc NewAddSon() Adder {\n\treturn &addSon{}\n}\n\n// sub 子类的sub方法\nfunc (a *addSon) sub(x, y int) int {\n\treturn x - y\n}\n\n// add 子结构体重写父结构体的add方法\nfunc (a *addSon) add(x, y int) int {\n\treturn x + x + y\n}\n\n\n\nfunc main() {\n\n\tson := NewAddSon()\n\tfmt.Printf("son.add(1, 2)=%d\\n", son.add(1, 2))\n\t//son.sub(1,2) // Adder接口类型没有这个方法, 报错内容：son.sub undefined (type Adder has no field or method sub)\n\n\t// 如果要想调用sub方法，必须实现结构体，这也就是golang中构造函数返回实例，和直接初始化结构体的区别\n\ttrueSon := &addSon{}\n\tfmt.Printf("trueSon.sub(1,2) = %d\\n", trueSon.sub(1,2))\n\ttrueSon.a = 2\n\tfmt.Printf("trueSon.a = %d\\n", trueSon.a)\n\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br")])]),a("h3",{attrs:{id:"二-timerctx继承cancelctx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-timerctx继承cancelctx"}},[n._v("#")]),n._v(" (二) timerCtx继承cancelCtx")]),n._v(" "),a("ul",[a("li",[n._v("1：在timerCtx结构体中，继承了cancelCtx，在cancelCtx基础之上添加了timer和deadline属性")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("type timerCtx struct {\n\tcancelCtx\n\ttimer *time.Timer\n\n\tdeadline time.Time\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br")])]),a("ul",[a("li",[n._v("2："),a("code",[n._v("WithDeadline")]),n._v("方法也是在"),a("code",[n._v("WithCancel")]),n._v("方法的基础之上，添加了超时逻辑，一旦超时，会自动调用"),a("code",[n._v("cancelCtx.WithCancel")]),n._v("方法，最后返回"),a("code",[n._v("timerCtx实例和调用了cancel方法的闭包函数对象")])])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("func WithDeadline(parent Context, d time.Time) (Context, CancelFunc) {\n\n\t// 当parent为父Context的时候，cur为time.Time类型的0值，ok为false\n\tif cur, ok := parent.Deadline(); ok && cur.Before(d) {\n\t\treturn WithCancel(parent)\n\t}\n\n\t// 实例化timerCtx\n\tc := &timerCtx{\n\t\tcancelCtx: newCancelCtx(parent),\n\t\tdeadline:  d,\n\t}\n\n\t// 主要作用是如果parent是父Context，直接return，什么都不做，如果父parent是cancelCtx，那么将child加入到cancelCtx的children属性中\n\tpropagateCancel(parent, c)\n\n\t// 获取当前时间到d时间的时间间隔\n\tdur := time.Until(d)\n\n\t// 如果时间间隔超时了，那么直接调用cancel方法\n\tif dur <= 0 {\n\t\tc.cancel(true, DeadlineExceeded)\n\t\treturn c, func() { c.cancel(false, Canceled) }\n\t}\n\n\tc.mu.Lock()\n\tdefer c.mu.Unlock()\n\tif c.err == nil { // 基于超时时间间隔设置一个定时任务，一旦超时，就调用cancel方法\n\t\tc.timer = time.AfterFunc(dur, func() {\n\t\t\tc.cancel(true, DeadlineExceeded)\n\t\t})\n\t}\n\t// 最后返回一个timerCtx对象和调用了cancel方法的闭包函数对象\n\treturn c, func() { c.cancel(true, Canceled) }\n\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br")])]),a("ul",[a("li",[n._v("3：timerCtx重写了父类cancelCtx的cancel方法，在父类的cancel方法之上，添加了从父Context中移除timerCtx功能，以及清空定时器让timer内存被GC回收")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("func (c *timerCtx) cancel(removeFromParent bool, err error) {\n\n\t// 先调用父类的cancel方法\n\tc.cancelCtx.cancel(false, err)\n\n\t// 将parent的parent从父Context中移除\n\tif removeFromParent {\n\t\tremoveChild(c.cancelCtx.Context, c)\n\t}\n\n\t// 停止定时器，并且释放定时器的内存空间\n\tc.mu.Lock()\n\tif c.timer != nil {\n\t\tc.timer.Stop()\n\t\tc.timer = nil\n\t}\n\tc.mu.Unlock()\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br")])]),a("h3",{attrs:{id:"三-withtimeout实现过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-withtimeout实现过程"}},[n._v("#")]),n._v(" (三) WithTimeout实现过程")]),n._v(" "),a("ul",[a("li",[n._v("1：WithTimeout就是在WithDeadline基础上，将时间间隔转换为了时间点，最后调用WithDeadline方法")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("// WithTimeout 其实就是在WithDeadline方法上计算了时间间隔，核心逻辑与timerCtx一样\nfunc WithTimeout(parent Context, timeout time.Duration) (Context, CancelFunc) {\n\treturn WithDeadline(parent, time.Now().Add(timeout))\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br")])]),a("h2",{attrs:{id:"三-valuectx结构体、withvalue方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-valuectx结构体、withvalue方法"}},[n._v("#")]),n._v(" 三：valueCtx结构体、WithValue方法")]),n._v(" "),a("h3",{attrs:{id:"一-valuectx继承了context接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-valuectx继承了context接口"}},[n._v("#")]),n._v(" (一) valueCtx继承了Context接口")]),n._v(" "),a("ul",[a("li",[n._v("1：valueCtx 是直接继承父Context，并且添加了两个属性 key和val")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("type valueCtx struct {\n\tContext\n\tkey, val interface{}\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br")])]),a("h3",{attrs:{id:"二-withvalue方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-withvalue方法"}},[n._v("#")]),n._v(" (二) WithValue方法")]),n._v(" "),a("ul",[a("li",[n._v("1：WithValue 返回一个valueCtx实例，但是没有cancelFunc函数")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('func WithValue(parent Context, key, val interface{}) Context {\n\tif key == nil {\n\t\tpanic("nil key")\n\t}\n\t// 判断类型是否是可比较的\n\tif !reflectlite.TypeOf(key).Comparable() {\n\t\tpanic("key is not comparable")\n\t}\n\t// 判断 返回一个ctx对象\n\treturn &valueCtx{parent, key, val}\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br")])]),a("ul",[a("li",[n._v("2：valueCtx重写了分类的Value方法")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("// Value 重写父类的value方法，基于key返回valueCtx的value值\nfunc (c *valueCtx) Value(key interface{}) interface{} {\n\tif c.key == key {\n\t\treturn c.val\n\t}\n\treturn c.Context.Value(key)\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br")])]),a("h2",{attrs:{id:"四-最后贴出context包的实现代码-带注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四-最后贴出context包的实现代码-带注释"}},[n._v("#")]),n._v(" 四：最后贴出context包的实现代码，带注释")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('/**\n * @Author: Robby\n * @File name: main.go\n * @Create date: 2021-08-26\n * @Function:\n **/\n\npackage context\n\nimport (\n\t"errors"\n\t"internal/reflectlite"\n\t"sync"\n\t"sync/atomic"\n\t"time"\n)\n\n\n// Context 接口 【看懂了】\ntype Context interface {\n\n\t// Deadline返回一个到期的time时间点, 以及当前是否以及到期\n\tDeadline() (deadline time.Time, ok bool)\n\n\t// Done()返回一个只读channel，只要可以从里面读取到值，说明context关闭了， 可以控制goroutine的停止\n\tDone() <-chan struct{}\n\n\t// 如果context关闭了，返回一个具体的错误\n\tErr() error\n\n\t// 返回context携带的value值\n\tValue(key interface{}) interface{}\n}\n\n// 全局的error实例 【看懂了】\nvar Canceled = errors.New("context canceled")\n\n// emptyCtx类型是int的别名 【看懂了】\ntype emptyCtx int\n\n// background和todo是int类型的指针【看懂了】\nvar (\n\tbackground = new(emptyCtx)\n\ttodo       = new(emptyCtx)\n)\n\n// 这里是实现Context接口的四个方法 【看懂了】\nfunc (*emptyCtx) Deadline() (deadline time.Time, ok bool) {\n\treturn\n}\n\n// 【看懂了】\nfunc (*emptyCtx) Done() <-chan struct{} {\n\treturn nil\n}\n\n// 【看懂了】\nfunc (*emptyCtx) Err() error {\n\treturn nil\n}\n\n// 【看懂了】\nfunc (*emptyCtx) Value(key interface{}) interface{} {\n\treturn nil\n}\n\n// 这里还多了一个String类型的方法 【看懂了】\nfunc (e *emptyCtx) String() string {\n\tswitch e {\n\tcase background:\n\t\treturn "context.Background"\n\tcase todo:\n\t\treturn "context.TODO"\n\t}\n\treturn "unknown empty Context"\n}\n\n// 这里返回的是一个int指针，正好这个int指针实现了Context接口的四个方法 【看懂了】\nfunc Background() Context {\n\treturn background\n}\n\n// 这里和Background()函数返回是一样的，也是一个int指针 【看懂了】\nfunc TODO() Context {\n\treturn todo\n}\n\n// CancelFunc是一个没有参数和返回值的函数 【看懂了】\ntype CancelFunc func()\n\n// WithCancel 返回一个子ctx和cancel函数， 主要的派生方法，这个方法非常重要\nfunc WithCancel(parent Context) (ctx Context, cancel CancelFunc) {\n\tc := newCancelCtx(parent) // 基于父context，初始化一个子cancelCtx\n\n\t// 这里必须保证c实现了cancel和Done方法, 如果parent是父Context，直接return，什么都不做，如果父parent是cancelCtx，那么将child加入到cancelCtx的children属性中\n\tpropagateCancel(parent, &c) // 当parent调用了cancel方法，那么让所有的child也调用cancel方法\n\n\t// 将child实例对象和cancelFunc返回\n\treturn &c, func() { c.cancel(true, Canceled) }\n}\n\nvar goroutines int32\n\n// propagateCancel 主要作用是如果parent是父Context，直接return，什么都不做，如果父parent是cancelCtx，那么将child加入到cancelCtx的children属性中\nfunc propagateCancel(parent Context, child canceler) {\n\n\tdone := parent.Done() // 获取父Context的只读channel\n\tif done == nil {\n\t\treturn\n\t}\n\n\tselect {\n\n\tcase <-done: // 如果父Context的只读channel关闭了，那么子context也必须关闭，并且把父context的err传递到子context\n\n\t\tchild.cancel(false, parent.Err())\n\t\treturn\n\n\tdefault:\n\n\t}\n\n\t// 判断parent是否是cancelCtx类型\n\tif p, ok := parentCancelCtx(parent); ok { // 如果parent是cancelCtx类型\n\n\t\tp.mu.Lock()\n\n\t\tif p.err != nil { // 如果parent有err错误，让子cancelCtx关闭channel\n\t\t\tchild.cancel(false, p.err)\n\n\t\t} else { // 如果parent没有err错误\n\t\t\tif p.children == nil {  // 判断一下parent的children是不是空\n\t\t\t\tp.children = make(map[canceler]struct{}) // 如果是空，初始化一下\n\t\t\t}\n\t\t\tp.children[child] = struct{}{} // 将子cancelCtx加入到parent的children map中存储\n\n\t\t}\n\n\t\tp.mu.Unlock()\n\n\t} else { // 如果parent不是cancelCtx类型, 可能parent是自己实现的Context，才会启动goroutine,让child调用cancel方法，否则只是将child加入到children的map中\n\n\t\tatomic.AddInt32(&goroutines, +1) // 让goroutines+1\n\n\t\tgo func() { // 开启一个goroutine，\n\t\t\tselect {\n\t\t\tcase <-parent.Done(): // 那么只要parent的channel关闭了，那么所有的child也应该调用cancel方法\n\t\t\t\tchild.cancel(false, parent.Err())\n\n\t\t\tcase <-child.Done(): // 如果是child的channel关闭了，那么什么也不做\n\t\t\t}\n\t\t}()\n\t}\n\n}\n\n//\nvar cancelCtxKey int\n\n// parentCancelCtx 判断parent是否是cancelCtx 【看懂了】\nfunc parentCancelCtx(parent Context) (*cancelCtx, bool) {\n\n\t// 获取父context的只读channel\n\tdone := parent.Done()\n\t// 基于父context的只读channel判断，\n\tif done == closedchan || done == nil { // 如果channel为全局的closedchan，或者为nil，那么parent不是cancelCtx\n\t\treturn nil, false\n\t}\n\n\t// 判断一下，父context的value是不是cancelCtx类型，如果不是，那么说明父context不是cancelCtx\n\t// parent.Value(&cancelCtxKey)返回的是parent的类型本身\n\tp, ok := parent.Value(&cancelCtxKey).(*cancelCtx)\n\tif !ok {\n\t\treturn nil, false\n\t}\n\n\tp.mu.Lock()\n\tok = p.done == done  // 判断done属性 和 Done()的返回值是否相等，如果不是那么父context不是cancelCtx\n\tp.mu.Unlock()\n\n\tif !ok {\n\t\treturn nil, false\n\t}\n\n\treturn p, true\n\n}\n\n// 将child自己从parent中移除掉\nfunc removeChild(parent Context, child canceler) {\n\tp, ok := parentCancelCtx(parent) // 先判断一下parent是否是cancelCtx类型\n\tif !ok { // 如果不是那么直接return，不需要移除\n\t\treturn\n\t}\n\tp.mu.Lock()\n\tif p.children != nil { // 如果parent是cancelCtx类型，且有children这个map属性，那么从children中移除掉对应的child这个key\n\t\tdelete(p.children, child)\n\t}\n\tp.mu.Unlock()\n}\n\n// canceler child实例必须实现两个方法cancel和Done， 接口的实例是cancelCtx\ntype canceler interface {\n\tcancel(removeFromParent bool, err error)\n\tDone() <-chan struct{}\n}\n\nvar closedchan = make(chan struct{})\n\n// 刚刚导入包，会先将全局的只读channel关闭\nfunc init() {\n\tclose(closedchan)\n}\n\n// 这个是主要的结构体 【看懂了】\ntype cancelCtx struct {\n\tContext // 这里切入到一个Context接口，其实就是父context\n\n\tmu       sync.Mutex // 互斥锁\n\tdone     chan struct{} // 只读channel\n\t// children是一个map，key是cancelCtx类型，value是struct{}{}空值\n\tchildren map[canceler]struct{}\n\terr      error // 错误信息\n}\n\n// 初始化方法，初始化一个子context实例\nfunc newCancelCtx(parent Context) cancelCtx {\n\treturn cancelCtx{Context: parent}\n}\n\n// 返回一个只读的channel，一旦这个channel关闭，就会立即读出struct{}的零值 【】\nfunc (c *cancelCtx) Done() <-chan struct{} {\n\tc.mu.Lock()\n\n\tif c.done == nil {\n\t\tc.done = make(chan struct{})\n\t}\n\td := c.done\n\n\tc.mu.Unlock()\n\n\treturn d\n}\n\n// Err 返回err错误， 错误从cancelCtx获取到\nfunc (c *cancelCtx) Err() error {\n\tc.mu.Lock()\n\terr := c.err\n\tc.mu.Unlock()\n\treturn err\n}\n\n// 实现了string方法\ntype stringer interface {\n\tString() string\n}\n\n// 返回Context的名称 【看懂了】\nfunc contextName(c Context) string {\n\tif s, ok := c.(stringer); ok {\n\t\treturn s.String()\n\t}\n\treturn reflectlite.TypeOf(c).String()\n}\n\n// String 对cancelCtx结构体打印字符串 【看懂了】\nfunc (c *cancelCtx) String() string {\n\treturn contextName(c.Context) + ".WithCancel"\n}\n\n// cancel cancel函数的功能是关闭channel 【看懂了】\nfunc (c *cancelCtx) cancel(removeFromParent bool, err error) {\n\n\t// 在关闭channel的时候，必须给一个err\n\tif err == nil {\n\t\tpanic("context: internal error: missing cancel error")\n\t}\n\n\tc.mu.Lock()\n\tif c.err != nil {\n\t\tc.mu.Unlock()\n\t\treturn\n\t}\n\t// 将错误赋值给context\n\tc.err = err\n\n\tif c.done == nil {  // 如果只读channel是nil，那么初始化一个空channel\n\t\tc.done = closedchan\n\t} else {\n\t\tclose(c.done) // 这是函数的核心，关闭只读channel\n\t}\n\n\t// 这里是遍历canceler，只获取key\n\tfor child := range c.children {\n\t\t// 让所有的canceler都调用自己的cancel方法，但是没有让canceler从父context中移除\n\t\tchild.cancel(false, err)\n\t}\n\n\t// 所有的子canceler都关闭了channel后，就可以将children释放掉了\n\tc.children = nil\n\n\tc.mu.Unlock() // 再次解锁，避免死锁\n\n\tif removeFromParent {\n\t\tremoveChild(c.Context, c)\n\t}\n}\n\n\n// Value 重写了父Context的Value方法\nfunc (c *cancelCtx) Value(key interface{}) interface{} {\n\t// 如果key是nil，那么直接返回自己\n\tif key == &cancelCtxKey {\n\t\treturn c\n\t}\n\t// 否则返回\n\treturn c.Context.Value(key)\n}\n\n// ################################ 下面是WithDeadline和WithTimeout的实现逻辑 #################################################\n\n\ntype deadlineExceededError struct{} // deadline结构体\nvar DeadlineExceeded error = deadlineExceededError{} // 构造函数\nfunc (deadlineExceededError) Error() string   { return "context deadline exceeded" } // 方法\nfunc (deadlineExceededError) Timeout() bool   { return true }\nfunc (deadlineExceededError) Temporary() bool { return true }\n\n// timerCtx 继承cancelCtx类型，在cancelCtx基础之上添加了timer和deadline属性\ntype timerCtx struct {\n\tcancelCtx\n\ttimer *time.Timer\n\n\tdeadline time.Time\n}\n\n// WithDeadline 接收一个父Context和Time对象\nfunc WithDeadline(parent Context, d time.Time) (Context, CancelFunc) {\n\n\t// 当parent为父Context的时候，cur为time.Time类型的0值，ok为false\n\tif cur, ok := parent.Deadline(); ok && cur.Before(d) {\n\t\treturn WithCancel(parent)\n\t}\n\n\t// 实例化timerCtx\n\tc := &timerCtx{\n\t\tcancelCtx: newCancelCtx(parent),\n\t\tdeadline:  d,\n\t}\n\n\t// 主要作用是如果parent是父Context，直接return，什么都不做，如果父parent是cancelCtx，那么将child加入到cancelCtx的children属性中\n\tpropagateCancel(parent, c)\n\n\t// 获取当前时间到d时间的时间间隔\n\tdur := time.Until(d)\n\n\t// 如果时间间隔超时了，那么直接调用cancel方法\n\tif dur <= 0 {\n\t\tc.cancel(true, DeadlineExceeded)\n\t\treturn c, func() { c.cancel(false, Canceled) }\n\t}\n\n\tc.mu.Lock()\n\tdefer c.mu.Unlock()\n\tif c.err == nil { // 基于超时时间间隔设置一个定时任务，一旦超时，就调用cancel方法\n\t\tc.timer = time.AfterFunc(dur, func() {\n\t\t\tc.cancel(true, DeadlineExceeded)\n\t\t})\n\t}\n\t// 最后返回一个timerCtx对象和调用了cancel方法的闭包函数对象\n\treturn c, func() { c.cancel(true, Canceled) }\n\n}\n\n\n\n// Deadline 重写父类的Deadline方法\nfunc (c *timerCtx) Deadline() (deadline time.Time, ok bool) {\n\treturn c.deadline, true\n}\n\n// String 重写父类的String方法\nfunc (c *timerCtx) String() string {\n\treturn contextName(c.cancelCtx.Context) + ".WithDeadline(" +\n\t\tc.deadline.String() + " [" +\n\t\ttime.Until(c.deadline).String() + "])"\n}\n\n// cancel 重写父类的cancel方法\nfunc (c *timerCtx) cancel(removeFromParent bool, err error) {\n\n\t// 先调用父类的cancel方法\n\tc.cancelCtx.cancel(false, err)\n\n\t// 将parent的parent从父Context中移除\n\tif removeFromParent {\n\t\tremoveChild(c.cancelCtx.Context, c)\n\t}\n\n\t// 停止定时器，并且释放定时器的内存空间\n\tc.mu.Lock()\n\tif c.timer != nil {\n\t\tc.timer.Stop()\n\t\tc.timer = nil\n\t}\n\tc.mu.Unlock()\n}\n\n// WithTimeout 其实就是在WithDeadline方法上计算了时间间隔，核心逻辑与timerCtx一样\nfunc WithTimeout(parent Context, timeout time.Duration) (Context, CancelFunc) {\n\treturn WithDeadline(parent, time.Now().Add(timeout))\n}\n\n// ################################ 下面是WithValue的实现逻辑 #################################################\n\n// valueCtx 是直接继承父Context，并且添加了两个属性 key和val\ntype valueCtx struct {\n\tContext\n\tkey, val interface{}\n}\n\n// WithValue 返回一个valueCtx实例，但是没有cancelFunc函数\nfunc WithValue(parent Context, key, val interface{}) Context {\n\tif key == nil {\n\t\tpanic("nil key")\n\t}\n\t// 判断类型是否是可比较的\n\tif !reflectlite.TypeOf(key).Comparable() {\n\t\tpanic("key is not comparable")\n\t}\n\t// 判断 返回一个ctx对象\n\treturn &valueCtx{parent, key, val}\n}\n\n// 返回value的字符串类型\nfunc stringify(v interface{}) string {\n\tswitch s := v.(type) {\n\tcase stringer:\n\t\treturn s.String()\n\tcase string:\n\t\treturn s\n\t}\n\treturn "<not Stringer>"\n}\n\n// 打印valueCtx的key和value\nfunc (c *valueCtx) String() string {\n\treturn contextName(c.Context) + ".WithValue(type " +\n\t\treflectlite.TypeOf(c.key).String() +\n\t\t", val " + stringify(c.val) + ")"\n}\n\n// Value 重写父类的value方法，基于key返回valueCtx的value值\nfunc (c *valueCtx) Value(key interface{}) interface{} {\n\tif c.key == key {\n\t\treturn c.val\n\t}\n\treturn c.Context.Value(key)\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br"),a("span",{staticClass:"line-number"},[n._v("69")]),a("br"),a("span",{staticClass:"line-number"},[n._v("70")]),a("br"),a("span",{staticClass:"line-number"},[n._v("71")]),a("br"),a("span",{staticClass:"line-number"},[n._v("72")]),a("br"),a("span",{staticClass:"line-number"},[n._v("73")]),a("br"),a("span",{staticClass:"line-number"},[n._v("74")]),a("br"),a("span",{staticClass:"line-number"},[n._v("75")]),a("br"),a("span",{staticClass:"line-number"},[n._v("76")]),a("br"),a("span",{staticClass:"line-number"},[n._v("77")]),a("br"),a("span",{staticClass:"line-number"},[n._v("78")]),a("br"),a("span",{staticClass:"line-number"},[n._v("79")]),a("br"),a("span",{staticClass:"line-number"},[n._v("80")]),a("br"),a("span",{staticClass:"line-number"},[n._v("81")]),a("br"),a("span",{staticClass:"line-number"},[n._v("82")]),a("br"),a("span",{staticClass:"line-number"},[n._v("83")]),a("br"),a("span",{staticClass:"line-number"},[n._v("84")]),a("br"),a("span",{staticClass:"line-number"},[n._v("85")]),a("br"),a("span",{staticClass:"line-number"},[n._v("86")]),a("br"),a("span",{staticClass:"line-number"},[n._v("87")]),a("br"),a("span",{staticClass:"line-number"},[n._v("88")]),a("br"),a("span",{staticClass:"line-number"},[n._v("89")]),a("br"),a("span",{staticClass:"line-number"},[n._v("90")]),a("br"),a("span",{staticClass:"line-number"},[n._v("91")]),a("br"),a("span",{staticClass:"line-number"},[n._v("92")]),a("br"),a("span",{staticClass:"line-number"},[n._v("93")]),a("br"),a("span",{staticClass:"line-number"},[n._v("94")]),a("br"),a("span",{staticClass:"line-number"},[n._v("95")]),a("br"),a("span",{staticClass:"line-number"},[n._v("96")]),a("br"),a("span",{staticClass:"line-number"},[n._v("97")]),a("br"),a("span",{staticClass:"line-number"},[n._v("98")]),a("br"),a("span",{staticClass:"line-number"},[n._v("99")]),a("br"),a("span",{staticClass:"line-number"},[n._v("100")]),a("br"),a("span",{staticClass:"line-number"},[n._v("101")]),a("br"),a("span",{staticClass:"line-number"},[n._v("102")]),a("br"),a("span",{staticClass:"line-number"},[n._v("103")]),a("br"),a("span",{staticClass:"line-number"},[n._v("104")]),a("br"),a("span",{staticClass:"line-number"},[n._v("105")]),a("br"),a("span",{staticClass:"line-number"},[n._v("106")]),a("br"),a("span",{staticClass:"line-number"},[n._v("107")]),a("br"),a("span",{staticClass:"line-number"},[n._v("108")]),a("br"),a("span",{staticClass:"line-number"},[n._v("109")]),a("br"),a("span",{staticClass:"line-number"},[n._v("110")]),a("br"),a("span",{staticClass:"line-number"},[n._v("111")]),a("br"),a("span",{staticClass:"line-number"},[n._v("112")]),a("br"),a("span",{staticClass:"line-number"},[n._v("113")]),a("br"),a("span",{staticClass:"line-number"},[n._v("114")]),a("br"),a("span",{staticClass:"line-number"},[n._v("115")]),a("br"),a("span",{staticClass:"line-number"},[n._v("116")]),a("br"),a("span",{staticClass:"line-number"},[n._v("117")]),a("br"),a("span",{staticClass:"line-number"},[n._v("118")]),a("br"),a("span",{staticClass:"line-number"},[n._v("119")]),a("br"),a("span",{staticClass:"line-number"},[n._v("120")]),a("br"),a("span",{staticClass:"line-number"},[n._v("121")]),a("br"),a("span",{staticClass:"line-number"},[n._v("122")]),a("br"),a("span",{staticClass:"line-number"},[n._v("123")]),a("br"),a("span",{staticClass:"line-number"},[n._v("124")]),a("br"),a("span",{staticClass:"line-number"},[n._v("125")]),a("br"),a("span",{staticClass:"line-number"},[n._v("126")]),a("br"),a("span",{staticClass:"line-number"},[n._v("127")]),a("br"),a("span",{staticClass:"line-number"},[n._v("128")]),a("br"),a("span",{staticClass:"line-number"},[n._v("129")]),a("br"),a("span",{staticClass:"line-number"},[n._v("130")]),a("br"),a("span",{staticClass:"line-number"},[n._v("131")]),a("br"),a("span",{staticClass:"line-number"},[n._v("132")]),a("br"),a("span",{staticClass:"line-number"},[n._v("133")]),a("br"),a("span",{staticClass:"line-number"},[n._v("134")]),a("br"),a("span",{staticClass:"line-number"},[n._v("135")]),a("br"),a("span",{staticClass:"line-number"},[n._v("136")]),a("br"),a("span",{staticClass:"line-number"},[n._v("137")]),a("br"),a("span",{staticClass:"line-number"},[n._v("138")]),a("br"),a("span",{staticClass:"line-number"},[n._v("139")]),a("br"),a("span",{staticClass:"line-number"},[n._v("140")]),a("br"),a("span",{staticClass:"line-number"},[n._v("141")]),a("br"),a("span",{staticClass:"line-number"},[n._v("142")]),a("br"),a("span",{staticClass:"line-number"},[n._v("143")]),a("br"),a("span",{staticClass:"line-number"},[n._v("144")]),a("br"),a("span",{staticClass:"line-number"},[n._v("145")]),a("br"),a("span",{staticClass:"line-number"},[n._v("146")]),a("br"),a("span",{staticClass:"line-number"},[n._v("147")]),a("br"),a("span",{staticClass:"line-number"},[n._v("148")]),a("br"),a("span",{staticClass:"line-number"},[n._v("149")]),a("br"),a("span",{staticClass:"line-number"},[n._v("150")]),a("br"),a("span",{staticClass:"line-number"},[n._v("151")]),a("br"),a("span",{staticClass:"line-number"},[n._v("152")]),a("br"),a("span",{staticClass:"line-number"},[n._v("153")]),a("br"),a("span",{staticClass:"line-number"},[n._v("154")]),a("br"),a("span",{staticClass:"line-number"},[n._v("155")]),a("br"),a("span",{staticClass:"line-number"},[n._v("156")]),a("br"),a("span",{staticClass:"line-number"},[n._v("157")]),a("br"),a("span",{staticClass:"line-number"},[n._v("158")]),a("br"),a("span",{staticClass:"line-number"},[n._v("159")]),a("br"),a("span",{staticClass:"line-number"},[n._v("160")]),a("br"),a("span",{staticClass:"line-number"},[n._v("161")]),a("br"),a("span",{staticClass:"line-number"},[n._v("162")]),a("br"),a("span",{staticClass:"line-number"},[n._v("163")]),a("br"),a("span",{staticClass:"line-number"},[n._v("164")]),a("br"),a("span",{staticClass:"line-number"},[n._v("165")]),a("br"),a("span",{staticClass:"line-number"},[n._v("166")]),a("br"),a("span",{staticClass:"line-number"},[n._v("167")]),a("br"),a("span",{staticClass:"line-number"},[n._v("168")]),a("br"),a("span",{staticClass:"line-number"},[n._v("169")]),a("br"),a("span",{staticClass:"line-number"},[n._v("170")]),a("br"),a("span",{staticClass:"line-number"},[n._v("171")]),a("br"),a("span",{staticClass:"line-number"},[n._v("172")]),a("br"),a("span",{staticClass:"line-number"},[n._v("173")]),a("br"),a("span",{staticClass:"line-number"},[n._v("174")]),a("br"),a("span",{staticClass:"line-number"},[n._v("175")]),a("br"),a("span",{staticClass:"line-number"},[n._v("176")]),a("br"),a("span",{staticClass:"line-number"},[n._v("177")]),a("br"),a("span",{staticClass:"line-number"},[n._v("178")]),a("br"),a("span",{staticClass:"line-number"},[n._v("179")]),a("br"),a("span",{staticClass:"line-number"},[n._v("180")]),a("br"),a("span",{staticClass:"line-number"},[n._v("181")]),a("br"),a("span",{staticClass:"line-number"},[n._v("182")]),a("br"),a("span",{staticClass:"line-number"},[n._v("183")]),a("br"),a("span",{staticClass:"line-number"},[n._v("184")]),a("br"),a("span",{staticClass:"line-number"},[n._v("185")]),a("br"),a("span",{staticClass:"line-number"},[n._v("186")]),a("br"),a("span",{staticClass:"line-number"},[n._v("187")]),a("br"),a("span",{staticClass:"line-number"},[n._v("188")]),a("br"),a("span",{staticClass:"line-number"},[n._v("189")]),a("br"),a("span",{staticClass:"line-number"},[n._v("190")]),a("br"),a("span",{staticClass:"line-number"},[n._v("191")]),a("br"),a("span",{staticClass:"line-number"},[n._v("192")]),a("br"),a("span",{staticClass:"line-number"},[n._v("193")]),a("br"),a("span",{staticClass:"line-number"},[n._v("194")]),a("br"),a("span",{staticClass:"line-number"},[n._v("195")]),a("br"),a("span",{staticClass:"line-number"},[n._v("196")]),a("br"),a("span",{staticClass:"line-number"},[n._v("197")]),a("br"),a("span",{staticClass:"line-number"},[n._v("198")]),a("br"),a("span",{staticClass:"line-number"},[n._v("199")]),a("br"),a("span",{staticClass:"line-number"},[n._v("200")]),a("br"),a("span",{staticClass:"line-number"},[n._v("201")]),a("br"),a("span",{staticClass:"line-number"},[n._v("202")]),a("br"),a("span",{staticClass:"line-number"},[n._v("203")]),a("br"),a("span",{staticClass:"line-number"},[n._v("204")]),a("br"),a("span",{staticClass:"line-number"},[n._v("205")]),a("br"),a("span",{staticClass:"line-number"},[n._v("206")]),a("br"),a("span",{staticClass:"line-number"},[n._v("207")]),a("br"),a("span",{staticClass:"line-number"},[n._v("208")]),a("br"),a("span",{staticClass:"line-number"},[n._v("209")]),a("br"),a("span",{staticClass:"line-number"},[n._v("210")]),a("br"),a("span",{staticClass:"line-number"},[n._v("211")]),a("br"),a("span",{staticClass:"line-number"},[n._v("212")]),a("br"),a("span",{staticClass:"line-number"},[n._v("213")]),a("br"),a("span",{staticClass:"line-number"},[n._v("214")]),a("br"),a("span",{staticClass:"line-number"},[n._v("215")]),a("br"),a("span",{staticClass:"line-number"},[n._v("216")]),a("br"),a("span",{staticClass:"line-number"},[n._v("217")]),a("br"),a("span",{staticClass:"line-number"},[n._v("218")]),a("br"),a("span",{staticClass:"line-number"},[n._v("219")]),a("br"),a("span",{staticClass:"line-number"},[n._v("220")]),a("br"),a("span",{staticClass:"line-number"},[n._v("221")]),a("br"),a("span",{staticClass:"line-number"},[n._v("222")]),a("br"),a("span",{staticClass:"line-number"},[n._v("223")]),a("br"),a("span",{staticClass:"line-number"},[n._v("224")]),a("br"),a("span",{staticClass:"line-number"},[n._v("225")]),a("br"),a("span",{staticClass:"line-number"},[n._v("226")]),a("br"),a("span",{staticClass:"line-number"},[n._v("227")]),a("br"),a("span",{staticClass:"line-number"},[n._v("228")]),a("br"),a("span",{staticClass:"line-number"},[n._v("229")]),a("br"),a("span",{staticClass:"line-number"},[n._v("230")]),a("br"),a("span",{staticClass:"line-number"},[n._v("231")]),a("br"),a("span",{staticClass:"line-number"},[n._v("232")]),a("br"),a("span",{staticClass:"line-number"},[n._v("233")]),a("br"),a("span",{staticClass:"line-number"},[n._v("234")]),a("br"),a("span",{staticClass:"line-number"},[n._v("235")]),a("br"),a("span",{staticClass:"line-number"},[n._v("236")]),a("br"),a("span",{staticClass:"line-number"},[n._v("237")]),a("br"),a("span",{staticClass:"line-number"},[n._v("238")]),a("br"),a("span",{staticClass:"line-number"},[n._v("239")]),a("br"),a("span",{staticClass:"line-number"},[n._v("240")]),a("br"),a("span",{staticClass:"line-number"},[n._v("241")]),a("br"),a("span",{staticClass:"line-number"},[n._v("242")]),a("br"),a("span",{staticClass:"line-number"},[n._v("243")]),a("br"),a("span",{staticClass:"line-number"},[n._v("244")]),a("br"),a("span",{staticClass:"line-number"},[n._v("245")]),a("br"),a("span",{staticClass:"line-number"},[n._v("246")]),a("br"),a("span",{staticClass:"line-number"},[n._v("247")]),a("br"),a("span",{staticClass:"line-number"},[n._v("248")]),a("br"),a("span",{staticClass:"line-number"},[n._v("249")]),a("br"),a("span",{staticClass:"line-number"},[n._v("250")]),a("br"),a("span",{staticClass:"line-number"},[n._v("251")]),a("br"),a("span",{staticClass:"line-number"},[n._v("252")]),a("br"),a("span",{staticClass:"line-number"},[n._v("253")]),a("br"),a("span",{staticClass:"line-number"},[n._v("254")]),a("br"),a("span",{staticClass:"line-number"},[n._v("255")]),a("br"),a("span",{staticClass:"line-number"},[n._v("256")]),a("br"),a("span",{staticClass:"line-number"},[n._v("257")]),a("br"),a("span",{staticClass:"line-number"},[n._v("258")]),a("br"),a("span",{staticClass:"line-number"},[n._v("259")]),a("br"),a("span",{staticClass:"line-number"},[n._v("260")]),a("br"),a("span",{staticClass:"line-number"},[n._v("261")]),a("br"),a("span",{staticClass:"line-number"},[n._v("262")]),a("br"),a("span",{staticClass:"line-number"},[n._v("263")]),a("br"),a("span",{staticClass:"line-number"},[n._v("264")]),a("br"),a("span",{staticClass:"line-number"},[n._v("265")]),a("br"),a("span",{staticClass:"line-number"},[n._v("266")]),a("br"),a("span",{staticClass:"line-number"},[n._v("267")]),a("br"),a("span",{staticClass:"line-number"},[n._v("268")]),a("br"),a("span",{staticClass:"line-number"},[n._v("269")]),a("br"),a("span",{staticClass:"line-number"},[n._v("270")]),a("br"),a("span",{staticClass:"line-number"},[n._v("271")]),a("br"),a("span",{staticClass:"line-number"},[n._v("272")]),a("br"),a("span",{staticClass:"line-number"},[n._v("273")]),a("br"),a("span",{staticClass:"line-number"},[n._v("274")]),a("br"),a("span",{staticClass:"line-number"},[n._v("275")]),a("br"),a("span",{staticClass:"line-number"},[n._v("276")]),a("br"),a("span",{staticClass:"line-number"},[n._v("277")]),a("br"),a("span",{staticClass:"line-number"},[n._v("278")]),a("br"),a("span",{staticClass:"line-number"},[n._v("279")]),a("br"),a("span",{staticClass:"line-number"},[n._v("280")]),a("br"),a("span",{staticClass:"line-number"},[n._v("281")]),a("br"),a("span",{staticClass:"line-number"},[n._v("282")]),a("br"),a("span",{staticClass:"line-number"},[n._v("283")]),a("br"),a("span",{staticClass:"line-number"},[n._v("284")]),a("br"),a("span",{staticClass:"line-number"},[n._v("285")]),a("br"),a("span",{staticClass:"line-number"},[n._v("286")]),a("br"),a("span",{staticClass:"line-number"},[n._v("287")]),a("br"),a("span",{staticClass:"line-number"},[n._v("288")]),a("br"),a("span",{staticClass:"line-number"},[n._v("289")]),a("br"),a("span",{staticClass:"line-number"},[n._v("290")]),a("br"),a("span",{staticClass:"line-number"},[n._v("291")]),a("br"),a("span",{staticClass:"line-number"},[n._v("292")]),a("br"),a("span",{staticClass:"line-number"},[n._v("293")]),a("br"),a("span",{staticClass:"line-number"},[n._v("294")]),a("br"),a("span",{staticClass:"line-number"},[n._v("295")]),a("br"),a("span",{staticClass:"line-number"},[n._v("296")]),a("br"),a("span",{staticClass:"line-number"},[n._v("297")]),a("br"),a("span",{staticClass:"line-number"},[n._v("298")]),a("br"),a("span",{staticClass:"line-number"},[n._v("299")]),a("br"),a("span",{staticClass:"line-number"},[n._v("300")]),a("br"),a("span",{staticClass:"line-number"},[n._v("301")]),a("br"),a("span",{staticClass:"line-number"},[n._v("302")]),a("br"),a("span",{staticClass:"line-number"},[n._v("303")]),a("br"),a("span",{staticClass:"line-number"},[n._v("304")]),a("br"),a("span",{staticClass:"line-number"},[n._v("305")]),a("br"),a("span",{staticClass:"line-number"},[n._v("306")]),a("br"),a("span",{staticClass:"line-number"},[n._v("307")]),a("br"),a("span",{staticClass:"line-number"},[n._v("308")]),a("br"),a("span",{staticClass:"line-number"},[n._v("309")]),a("br"),a("span",{staticClass:"line-number"},[n._v("310")]),a("br"),a("span",{staticClass:"line-number"},[n._v("311")]),a("br"),a("span",{staticClass:"line-number"},[n._v("312")]),a("br"),a("span",{staticClass:"line-number"},[n._v("313")]),a("br"),a("span",{staticClass:"line-number"},[n._v("314")]),a("br"),a("span",{staticClass:"line-number"},[n._v("315")]),a("br"),a("span",{staticClass:"line-number"},[n._v("316")]),a("br"),a("span",{staticClass:"line-number"},[n._v("317")]),a("br"),a("span",{staticClass:"line-number"},[n._v("318")]),a("br"),a("span",{staticClass:"line-number"},[n._v("319")]),a("br"),a("span",{staticClass:"line-number"},[n._v("320")]),a("br"),a("span",{staticClass:"line-number"},[n._v("321")]),a("br"),a("span",{staticClass:"line-number"},[n._v("322")]),a("br"),a("span",{staticClass:"line-number"},[n._v("323")]),a("br"),a("span",{staticClass:"line-number"},[n._v("324")]),a("br"),a("span",{staticClass:"line-number"},[n._v("325")]),a("br"),a("span",{staticClass:"line-number"},[n._v("326")]),a("br"),a("span",{staticClass:"line-number"},[n._v("327")]),a("br"),a("span",{staticClass:"line-number"},[n._v("328")]),a("br"),a("span",{staticClass:"line-number"},[n._v("329")]),a("br"),a("span",{staticClass:"line-number"},[n._v("330")]),a("br"),a("span",{staticClass:"line-number"},[n._v("331")]),a("br"),a("span",{staticClass:"line-number"},[n._v("332")]),a("br"),a("span",{staticClass:"line-number"},[n._v("333")]),a("br"),a("span",{staticClass:"line-number"},[n._v("334")]),a("br"),a("span",{staticClass:"line-number"},[n._v("335")]),a("br"),a("span",{staticClass:"line-number"},[n._v("336")]),a("br"),a("span",{staticClass:"line-number"},[n._v("337")]),a("br"),a("span",{staticClass:"line-number"},[n._v("338")]),a("br"),a("span",{staticClass:"line-number"},[n._v("339")]),a("br"),a("span",{staticClass:"line-number"},[n._v("340")]),a("br"),a("span",{staticClass:"line-number"},[n._v("341")]),a("br"),a("span",{staticClass:"line-number"},[n._v("342")]),a("br"),a("span",{staticClass:"line-number"},[n._v("343")]),a("br"),a("span",{staticClass:"line-number"},[n._v("344")]),a("br"),a("span",{staticClass:"line-number"},[n._v("345")]),a("br"),a("span",{staticClass:"line-number"},[n._v("346")]),a("br"),a("span",{staticClass:"line-number"},[n._v("347")]),a("br"),a("span",{staticClass:"line-number"},[n._v("348")]),a("br"),a("span",{staticClass:"line-number"},[n._v("349")]),a("br"),a("span",{staticClass:"line-number"},[n._v("350")]),a("br"),a("span",{staticClass:"line-number"},[n._v("351")]),a("br"),a("span",{staticClass:"line-number"},[n._v("352")]),a("br"),a("span",{staticClass:"line-number"},[n._v("353")]),a("br"),a("span",{staticClass:"line-number"},[n._v("354")]),a("br"),a("span",{staticClass:"line-number"},[n._v("355")]),a("br"),a("span",{staticClass:"line-number"},[n._v("356")]),a("br"),a("span",{staticClass:"line-number"},[n._v("357")]),a("br"),a("span",{staticClass:"line-number"},[n._v("358")]),a("br"),a("span",{staticClass:"line-number"},[n._v("359")]),a("br"),a("span",{staticClass:"line-number"},[n._v("360")]),a("br"),a("span",{staticClass:"line-number"},[n._v("361")]),a("br"),a("span",{staticClass:"line-number"},[n._v("362")]),a("br"),a("span",{staticClass:"line-number"},[n._v("363")]),a("br"),a("span",{staticClass:"line-number"},[n._v("364")]),a("br"),a("span",{staticClass:"line-number"},[n._v("365")]),a("br"),a("span",{staticClass:"line-number"},[n._v("366")]),a("br"),a("span",{staticClass:"line-number"},[n._v("367")]),a("br"),a("span",{staticClass:"line-number"},[n._v("368")]),a("br"),a("span",{staticClass:"line-number"},[n._v("369")]),a("br"),a("span",{staticClass:"line-number"},[n._v("370")]),a("br"),a("span",{staticClass:"line-number"},[n._v("371")]),a("br"),a("span",{staticClass:"line-number"},[n._v("372")]),a("br"),a("span",{staticClass:"line-number"},[n._v("373")]),a("br"),a("span",{staticClass:"line-number"},[n._v("374")]),a("br"),a("span",{staticClass:"line-number"},[n._v("375")]),a("br"),a("span",{staticClass:"line-number"},[n._v("376")]),a("br"),a("span",{staticClass:"line-number"},[n._v("377")]),a("br"),a("span",{staticClass:"line-number"},[n._v("378")]),a("br"),a("span",{staticClass:"line-number"},[n._v("379")]),a("br"),a("span",{staticClass:"line-number"},[n._v("380")]),a("br"),a("span",{staticClass:"line-number"},[n._v("381")]),a("br"),a("span",{staticClass:"line-number"},[n._v("382")]),a("br"),a("span",{staticClass:"line-number"},[n._v("383")]),a("br"),a("span",{staticClass:"line-number"},[n._v("384")]),a("br"),a("span",{staticClass:"line-number"},[n._v("385")]),a("br"),a("span",{staticClass:"line-number"},[n._v("386")]),a("br"),a("span",{staticClass:"line-number"},[n._v("387")]),a("br"),a("span",{staticClass:"line-number"},[n._v("388")]),a("br"),a("span",{staticClass:"line-number"},[n._v("389")]),a("br"),a("span",{staticClass:"line-number"},[n._v("390")]),a("br"),a("span",{staticClass:"line-number"},[n._v("391")]),a("br"),a("span",{staticClass:"line-number"},[n._v("392")]),a("br"),a("span",{staticClass:"line-number"},[n._v("393")]),a("br"),a("span",{staticClass:"line-number"},[n._v("394")]),a("br"),a("span",{staticClass:"line-number"},[n._v("395")]),a("br"),a("span",{staticClass:"line-number"},[n._v("396")]),a("br"),a("span",{staticClass:"line-number"},[n._v("397")]),a("br"),a("span",{staticClass:"line-number"},[n._v("398")]),a("br"),a("span",{staticClass:"line-number"},[n._v("399")]),a("br"),a("span",{staticClass:"line-number"},[n._v("400")]),a("br"),a("span",{staticClass:"line-number"},[n._v("401")]),a("br"),a("span",{staticClass:"line-number"},[n._v("402")]),a("br"),a("span",{staticClass:"line-number"},[n._v("403")]),a("br"),a("span",{staticClass:"line-number"},[n._v("404")]),a("br"),a("span",{staticClass:"line-number"},[n._v("405")]),a("br"),a("span",{staticClass:"line-number"},[n._v("406")]),a("br"),a("span",{staticClass:"line-number"},[n._v("407")]),a("br"),a("span",{staticClass:"line-number"},[n._v("408")]),a("br"),a("span",{staticClass:"line-number"},[n._v("409")]),a("br"),a("span",{staticClass:"line-number"},[n._v("410")]),a("br"),a("span",{staticClass:"line-number"},[n._v("411")]),a("br"),a("span",{staticClass:"line-number"},[n._v("412")]),a("br"),a("span",{staticClass:"line-number"},[n._v("413")]),a("br"),a("span",{staticClass:"line-number"},[n._v("414")]),a("br"),a("span",{staticClass:"line-number"},[n._v("415")]),a("br"),a("span",{staticClass:"line-number"},[n._v("416")]),a("br"),a("span",{staticClass:"line-number"},[n._v("417")]),a("br"),a("span",{staticClass:"line-number"},[n._v("418")]),a("br"),a("span",{staticClass:"line-number"},[n._v("419")]),a("br"),a("span",{staticClass:"line-number"},[n._v("420")]),a("br"),a("span",{staticClass:"line-number"},[n._v("421")]),a("br"),a("span",{staticClass:"line-number"},[n._v("422")]),a("br"),a("span",{staticClass:"line-number"},[n._v("423")]),a("br"),a("span",{staticClass:"line-number"},[n._v("424")]),a("br"),a("span",{staticClass:"line-number"},[n._v("425")]),a("br"),a("span",{staticClass:"line-number"},[n._v("426")]),a("br"),a("span",{staticClass:"line-number"},[n._v("427")]),a("br"),a("span",{staticClass:"line-number"},[n._v("428")]),a("br"),a("span",{staticClass:"line-number"},[n._v("429")]),a("br"),a("span",{staticClass:"line-number"},[n._v("430")]),a("br"),a("span",{staticClass:"line-number"},[n._v("431")]),a("br"),a("span",{staticClass:"line-number"},[n._v("432")]),a("br"),a("span",{staticClass:"line-number"},[n._v("433")]),a("br"),a("span",{staticClass:"line-number"},[n._v("434")]),a("br"),a("span",{staticClass:"line-number"},[n._v("435")]),a("br"),a("span",{staticClass:"line-number"},[n._v("436")]),a("br"),a("span",{staticClass:"line-number"},[n._v("437")]),a("br"),a("span",{staticClass:"line-number"},[n._v("438")]),a("br"),a("span",{staticClass:"line-number"},[n._v("439")]),a("br"),a("span",{staticClass:"line-number"},[n._v("440")]),a("br"),a("span",{staticClass:"line-number"},[n._v("441")]),a("br"),a("span",{staticClass:"line-number"},[n._v("442")]),a("br"),a("span",{staticClass:"line-number"},[n._v("443")]),a("br"),a("span",{staticClass:"line-number"},[n._v("444")]),a("br"),a("span",{staticClass:"line-number"},[n._v("445")]),a("br"),a("span",{staticClass:"line-number"},[n._v("446")]),a("br"),a("span",{staticClass:"line-number"},[n._v("447")]),a("br"),a("span",{staticClass:"line-number"},[n._v("448")]),a("br"),a("span",{staticClass:"line-number"},[n._v("449")]),a("br"),a("span",{staticClass:"line-number"},[n._v("450")]),a("br"),a("span",{staticClass:"line-number"},[n._v("451")]),a("br"),a("span",{staticClass:"line-number"},[n._v("452")]),a("br"),a("span",{staticClass:"line-number"},[n._v("453")]),a("br"),a("span",{staticClass:"line-number"},[n._v("454")]),a("br"),a("span",{staticClass:"line-number"},[n._v("455")]),a("br"),a("span",{staticClass:"line-number"},[n._v("456")]),a("br"),a("span",{staticClass:"line-number"},[n._v("457")]),a("br"),a("span",{staticClass:"line-number"},[n._v("458")]),a("br"),a("span",{staticClass:"line-number"},[n._v("459")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports},769:function(n,s,t){n.exports=t.p+"assets/img/2021-08-2912.43.27.2db053a1.png"}}]);