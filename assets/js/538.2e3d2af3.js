(window.webpackJsonp=window.webpackJsonp||[]).push([[538],{2534:function(s,n,e){"use strict";e.r(n);var a=e(9),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"一-事件名"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-事件名"}},[s._v("#")]),s._v(" 一：事件名")]),s._v(" "),e("h3",{attrs:{id:"一-事件名的命名规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-事件名的命名规则"}},[s._v("#")]),s._v(" （一）事件名的命名规则")]),s._v(" "),e("ul",[e("li",[s._v("事件的命名规则使用"),e("code",[s._v("小字母+中划线")]),s._v("的方式命名")])]),s._v(" "),e("h3",{attrs:{id:"二-v-model处理不同表单类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-v-model处理不同表单类型"}},[s._v("#")]),s._v(" （二）v-model处理不同表单类型")]),s._v(" "),e("ul",[e("li",[s._v("首先回顾一下v-model的处理type=text的input表单的写法，默认情况下，v-model会监听input事件，获取事件抛出的数据写入到value这个prop中")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('第一种语法糖写法：\n    <input v-model="message">\n\n\n第二种正规写法：\n    <input\n      v-bind:value="message"\n      v-on:input="message = $event.target.value"\n    >\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("ul",[e("li",[e("code",[s._v("如果v-model需要处理的input是checkbox类型(单选框)的表单")]),s._v("，那么在子组件中就需要使用model选项，明确指明子组件的接收的prop和事件，这样就不会与v-model默认的绑定方式冲突")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<body>\n\n    <div id="app">\n        <base-checkbox v-model="lovingVue"></base-checkbox>\n\n        <p>{{ lovingVue }}</p>\n    </div>\n\n\n    <script>\n\n        Vue.component(\'base-checkbox\', {\n            model: {\n                prop: \'checked\',\n                event: \'change\'\n            },\n            props: {\n                checked: Boolean\n            },\n            template: `\n                <input\n                  type="checkbox"\n                  v-bind:checked="checked"\n                  v-on:change="$emit(\'change\', $event.target.checked)"\n                >\n            `\n        })\n\n        var app = new Vue({\n            el: \'#app\',\n            data: {\n                lovingVue: ""\n            }\n        })\n\n    <\/script>\n\n</body>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br")])]),e("h3",{attrs:{id:"三-this-listeners-没有搞懂"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-this-listeners-没有搞懂"}},[s._v("#")]),s._v(" （三）this.$listeners(没有搞懂)")]),s._v(" "),e("ul",[e("li",[s._v("没有搞懂")])]),s._v(" "),e("h3",{attrs:{id:"四-sync修饰符解决子组件向父组件传递数据的问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四-sync修饰符解决子组件向父组件传递数据的问题"}},[s._v("#")]),s._v(" （四）.sync修饰符解决子组件向父组件传递数据的问题")]),s._v(" "),e("ul",[e("li",[s._v("由于组件之间的数据传递只能借助prop从父组件到子组件传递，那么子组件需要给父组件传递数据，就可以借助自定义事件完成。下面是子组件更新父组件数据的自定义事件")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('// 子组件对外抛出一个update:title的自定义事件，并且携带newTitle的数据\nthis.$emit(\'update:title\', newTitle)\n\n\n// 父组件监听自定义事件，将newTitle数据赋值给doc.title变量，doc.title再将数据赋值给title这个prop，title再传递到子组件\n<text-document\n  v-bind:title="doc.title"\n  v-on:update:title="doc.title = $event"\n></text-document>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("ul",[e("li",[s._v("下面代码中，父组件监听子组件自定义事件有一个语法糖，"),e("code",[s._v(".sync语法")])])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<text-document v-bind:title.sync="doc.title"></text-document>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("ul",[e("li",[s._v("这里是更新doc.title，如果需要更新doc对象中多个值，那么可以这样简写")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('<text-document v-bind.sync="doc"></text-document>\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);