(window.webpackJsonp=window.webpackJsonp||[]).push([[152],{2397:function(s,n,a){"use strict";a.r(n);var e=a(9),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"一-线程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-线程"}},[s._v("#")]),s._v(" 一：线程")]),s._v(" "),e("h3",{attrs:{id:"一-线程工作基本模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-线程工作基本模型"}},[s._v("#")]),s._v(" (一)： 线程工作基本模型")]),s._v(" "),e("ul",[e("li",[s._v("相关代码")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import threading\nimport time\nimport os\n\ncount = 0\n\ndef consumer():\n    global count\n    while True:\n        if count <= 0:\n            continue\n        count -= 1\n        print('我是消费者，count={}, 进程ID={}, 线程ID={}'.format(count, os.getpid(), threading.get_ident()))\n        time.sleep(1)\n\ndef producer():\n    global count\n    while True:\n        count += 1\n        print('我是生产者，count={}, 进程ID={}, 线程ID={}'.format(count, os.getpid(), threading.current_thread().ident))\n        time.sleep(1)\n\n\nif __name__ == '__main__':\n    t1 = threading.Thread(target=producer)\n    t2 = threading.Thread(target=consumer)\n\n    t1.start()\n    t2.start()\n\n    print(threading.activeCount())\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("h2",{attrs:{id:"二-单线程图片下载模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-单线程图片下载模型"}},[s._v("#")]),s._v(" 二：单线程图片下载模型")]),s._v(" "),e("h3",{attrs:{id:"一-单线程下载模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-单线程下载模型"}},[s._v("#")]),s._v(" (一)： 单线程下载模型")]),s._v(" "),e("ul",[e("li",[s._v("以图片下载、hash计算、图片存储为例，基于单线程完成图片下载、图片哈希值计算、图片存储等功能。其中下载和存储是IO密集型任务，哈希是计算密集型任务。任务模型如下")])]),s._v(" "),e("p",[e("img",{attrs:{src:a(970),alt:"Alt text"}})]),s._v(" "),e("ul",[e("li",[s._v("代码结构如下")])]),s._v(" "),e("p",[e("img",{attrs:{src:a(971),alt:"Alt text"}})]),s._v(" "),e("h3",{attrs:{id:"二-相关代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-相关代码"}},[s._v("#")]),s._v(" (二)：相关代码")]),s._v(" "),e("ul",[e("li",[s._v("utils.py：工具中完成图片地址列表化，运行时长计算")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import os\nimport time\n\ndef get_url_list():\n    list_file = os.path.join('/Users/yinhuanyi/Yinhuanyi_Project/Coroutine_Project/threading_test/download_server', 'picture_list/baidu.txt')\n    with open(list_file, 'r') as f:\n        url_list = [line.strip() for line in f]\n    return url_list[:]\n\n# 计时器，对程序运行过程进行时间统计\nclass Timer:\n    def __init__(self):\n        self.val = 0\n\n    def begine(self):\n        self.val = time.time()\n\n    def end(self):\n        return round(time.time() - self.val, 6)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("ul",[e("li",[s._v("const.py：常量文件，定义枚举变量")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("from enum import Enum\n\nclass CalcType(Enum):\n    SingleThread = 0\n    MultiThread = 1\n    MultiProcess = 2\n    PyCoroutine = 3\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("ul",[e("li",[s._v("modules/module_base.py：各个模块的基类")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("from ..const import CalcType\n\nclass BaseModule:\n\n    def __init__(self, *args, **kwargs):\n        # 这里获取的值是0\n        self.calc_type = CalcType.SingleThread\n\n    def set_calc_type(self, type):\n        self.calc_type = type\n    # 如果子类未重写父类方法，抛出异常\n    def _process(self, url):\n        raise NotImplementedError\n\n    def _process_single_thread(self, list_):\n        raise NotImplementedError\n\n    def process(self, list_):\n        if self.calc_type == CalcType.SingleThread:\n            return self._process_single_thread(list_)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("ul",[e("li",[s._v("modules/downloader.py：图片下载，图片内容转变为numpy的矩阵")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import requests\nfrom PIL import ImageFile\nimport numpy as np\nfrom .module_base import BaseModule\n\nclass Downloader(BaseModule):\n\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n\n    # 获取图片，将图片内容转换为\n    def _process(self, url):\n        # print('download url: {}'.format(url))\n        response = requests.get(url, verify=False)\n        content = response.content\n\n        # 将图片内容转换为numpy的数组\n        parser = ImageFile.Parser() # 获取一个parser对象\n        parser.feed(content)        # 将图片内容填充到parser对象\n        img = parser.close()        # 返回图片内容对象\n        img = np.array(img)         # 返回图片的numpy矩阵\n        return img\n\n    # 单线程处理\n    def _process_single_thread(self, picture_list):\n        response_list = []\n        for url in picture_list:\n            # 这里返回的是矩阵\n            img = self._process(url)\n            response_list.append(img)\n\n        return response_list\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br")])]),e("ul",[e("li",[s._v("modules/hasher.py：图片内容hash")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("from .module_base import BaseModule\nfrom scipy import signal\nfrom PIL import Image\nimport hashlib\n\nclass Hasher(BaseModule):\n\n    def _process(self, item):\n        # 这里传递进来的item是每一个numpy的矩阵，对矩阵进行卷积处理, 再次转换为图片二进制内容\n        cov = [[[0.1], [0.05], [0.1]]]\n        img = signal.convolve(item, cov)\n        # 将图片从矩阵还原为二进制内容\n        img = Image.fromarray(img.astype('uint8')).convert('RGB')\n        # 计算img的md5值，十六进制，是一个32位长度的字符串\n        md5 = hashlib.md5(str(img).encode('utf-8')).hexdigest()\n        return md5\n\n    def _process_single_thread(self, list_):\n        md5_list = []\n\n        # list_是numpy数组，数组每一个元素是图片的矩阵\n        for img in list_:\n            # 计算图片的MD5\n            md5 = self._process(img)\n            md5_list.append(md5)\n        return md5_list\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("ul",[e("li",[s._v("modules/storage.py：图片内容存储")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("from .module_base import BaseModule\nfrom PIL import Image\n\nclass Storager(BaseModule):\n\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n\n    def _process(self, item):\n        content, path = item\n        # 获取图片的二进制内容\n        content = Image.fromarray(content.astype('uint8')).convert('RGB')\n        content.save(path)\n        pass\n\n    def _process_single_thread(self, list_):\n        # list_中是\n        for item in list_:\n            self._process(item)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("ul",[e("li",[s._v("scheduler.py：调度器，控制各个模块的运行顺序")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import os\nimport prettytable\nfrom threading_test.download_server.modules.downloader import Downloader\nfrom threading_test.download_server.modules.hasher import Hasher\nfrom threading_test.download_server.modules.storage import Storager\nfrom threading_test.download_server.utils import get_url_list, Timer\n\n# 调用器\nclass Scheduler:\n\n    def __init__(self):\n        self.download = Downloader()\n        self.hasher = Hasher()\n        self.storager = Storager()\n\n    def _get_path(self, md5):\n        file_name = '{}.jpg'.format(md5)\n        file_path = os.path.join('/Users/yinhuanyi/Yinhuanyi_Project/Coroutine_Project/threading_test/download_server/images', file_name)\n        return file_path\n\n    def process(self):\n        timer = Timer()\n        time_statistics = {}\n        time_statistics['cpu'] = []\n        time_statistics['network'] = []\n        time_statistics['disk'] = []\n\n        # 1：加载图片的url\n        url_list = get_url_list()\n        # 2：返回图片的numpy数组列表\n        timer.begine()\n        content_list  = self.download.process(url_list)\n        time_statistics['network'] = timer.end()\n\n        # 3：返回md5列表\n        timer.begine()\n        md5_list = self.hasher.process(content_list)\n        time_statistics['cpu'] = timer.end()\n\n        # 4：将内容和md5路径组合，交给存储模块，存储图片\n        timer.begine()\n        item_list = [(content, self._get_path(md5)) for content, md5 in zip(content_list, md5_list)]\n        self.storager.process(item_list)\n        time_statistics['disk'] = timer.end()\n        return time_statistics\n\n    def statistics(self, log: dict):\n        # 设置表头\n        table = prettytable.PrettyTable(['类型', '单线程耗时'])\n        # 第一行数据\n        network_row = ['network']\n        # 第二行数据\n        cpu_row = ['cpu']\n        # 第三行数据\n        disk_row = ['disk']\n        network_row.append(log['network'])\n        cpu_row.append(log['cpu'])\n        disk_row.append(log['disk'])\n        # 将每一行数据加入到表格中\n        table.add_row(cpu_row)\n        table.add_row(disk_row)\n        table.add_row(network_row)\n        print(table)\n\nif __name__ == '__main__':\n    scheduler = Scheduler()\n    time_statistics = scheduler.process()\n    scheduler.statistics(time_statistics)\n\n    # 单线程输出结果\n    \"\"\"\n    +---------+------------+\n    |   类型  | 单线程耗时   |\n    +---------+------------+\n    |   cpu   |  26.92636  |\n    |   disk  |  2.174533  |\n    | network | 33.456683  |\n    +---------+------------+\n    \"\"\"\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br")])]),e("h2",{attrs:{id:"三-多线程图片下载模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-多线程图片下载模型"}},[s._v("#")]),s._v(" 三：多线程图片下载模型")]),s._v(" "),e("ul",[e("li",[s._v("什么是线程池")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("1：线程池是存放多个线程的容器\n2：CPU调度线程执行后不会销毁消除\n3：将线程放回线程池可以重复利用\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("ul",[e("li",[s._v("什么要使用线程池")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("1：线程不应该频繁的创建和销毁，降低程序运行的效率\n2：程序结构解耦，线程创建和业务逻辑解耦，逻辑更加清楚\n3：线程池是使用线程的最佳实践\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("ul",[e("li",[s._v("线程池基本模型")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import time\nimport threading\n\nclass ThreadPool:\n\n    def __init__(self, size):\n        self.pool = []\n        self.queue = []\n        # 将线程添加到池中\n        for i in range(size):\n            self.pool.append(threading.Thread(target=self.process))\n\n    def process(self):\n        while True:\n            if len(self.queue) == 0:\n                time.sleep(1)\n                continue\n            # 如果队列中有任务，执行任务\n            task = self.queue.pop()\n            task()\n\n    def submit(self, task):\n        self.queue.append(task)\n\n    def start(self):\n        # 启动池中的线程\n        for thread in self.pool:\n            thread.start()\n\n# 任务\ndef _task():\n    for i in range(10):\n        print('this is a task, task_id={}，thread_id={}'.format(i, threading.current_thread().ident))\n        time.sleep(1)\n\n\nif __name__ == '__main__':\n    pool = ThreadPool(10)\n    pool.start()\n    for i in range(10):\n        pool.submit(_task)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br")])]),e("h3",{attrs:{id:"一-使用threadpoolexecutor线程池优化模型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-使用threadpoolexecutor线程池优化模型"}},[s._v("#")]),s._v(" (一)： 使用ThreadPoolExecutor线程池优化模型")]),s._v(" "),e("ul",[e("li",[s._v("项目结构")])]),s._v(" "),e("p",[e("img",{attrs:{src:a(972),alt:"Alt text"}})]),s._v(" "),e("ul",[e("li",[s._v("在modules目录下新增executor.py模块，提供线程池的实例对象供外部调用，内容如下")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("from concurrent.futures import ThreadPoolExecutor\n\nMULTI_NUMS = 50\nthread_pool_executor = ThreadPoolExecutor(MULTI_NUMS)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("ul",[e("li",[s._v("修改module_base.py模块，新增多线程处理方法")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("from ..const import CalcType\n\n\nclass BaseModule:\n\n    def __init__(self, *args, **kwargs):\n        # 这里获取的值是0\n        self.calc_type = CalcType.SingleThread\n\n    def set_calc_type(self, type):\n        self.calc_type = type\n    # 如果子类未重写父类方法，抛出异常\n    def _process(self, url):\n        raise NotImplementedError\n\n    def _process_single_thread(self, list_):\n        raise NotImplementedError\n\n    def _process_multi_thread(self, list_):\n        raise NotImplementedError\n\n    def process(self, list_):\n        if self.calc_type == CalcType.SingleThread:\n            return self._process_single_thread(list_)\n\n        elif self.calc_type == CalcType.MultiProcess:\n            return self._process_multi_thread(list_)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("ul",[e("li",[s._v("修改downloader.py模块，实现多线程处理方法")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import requests\nfrom PIL import ImageFile\nimport numpy as np\nfrom .module_base import BaseModule\nfrom .executor import thread_pool_executor\n\nclass Downloader(BaseModule):\n\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n\n    # 获取图片，将图片内容转换为\n    def _process(self, url):\n        response = requests.get(url, verify=False)\n        content = response.content\n\n        # 将图片内容转换为numpy的数组\n        parser = ImageFile.Parser() # 获取一个parser对象\n        parser.feed(content)        # 将图片内容填充到parser对象\n        img = parser.close()        # 后去图片内容对象\n        img = np.array(img)         # 返回numpy数据\n        return img\n\n    # 单线程处理\n    def _process_single_thread(self, picture_list):\n        response_list = []\n        for url in picture_list:\n            # 这里返回的是向量\n            img = self._process(url)\n            response_list.append(img)\n\n        return response_list\n\n    # 多线程处理\n    def _process_multi_thread(self, picture_list):\n        response_list = []\n        task_list = []\n        for url in picture_list:\n            # 将任务处理放在线程池中， 返回结果是一个future对象，也就是说task是future对象\n            task = thread_pool_executor.submit(self._process, (url))\n            # 先将future对象添加的任务列表中\n            task_list.append(task)\n\n        # 再从任务列表中取出future对象\n        for task in task_list:\n            img = task.result()\n            response_list.append(img)\n        return response_list\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br")])]),e("ul",[e("li",[s._v("修改hasher.py模块，实现多线程处理方法")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("from .module_base import BaseModule\nfrom scipy import signal\nfrom PIL import Image\nimport hashlib\nfrom .executor import thread_pool_executor\n\nclass Hasher(BaseModule):\n\n    def _process(self, item):\n        # 这里传递进来的item是每一个numpy的矩阵，对矩阵进行卷积处理, 再次转换为图片二进制内容\n        cov = [[[0.1], [0.05], [0.1]]]\n        img = signal.convolve(item, cov)\n        # 将图片从矩阵还原为二进制内容\n        img = Image.fromarray(img.astype('uint8')).convert('RGB')\n        # 计算img的md5值，十六进制，是一个32位长度的字符串\n        md5 = hashlib.md5(str(img).encode('utf-8')).hexdigest()\n        return md5\n\n    def _process_single_thread(self, list_):\n        md5_list = []\n\n        # list_是numpy数组，数组每一个元素是图片的矩阵\n        for img in list_:\n            # 计算图片的MD5\n            md5 = self._process(img)\n            md5_list.append(md5)\n        return md5_list\n\n    def _process_multi_thread(self, list_):\n        md5_list = []\n        task_list = []\n\n        for img in list_:\n            task = thread_pool_executor.submit(self._process, (img))\n            task_list.append(task)\n\n        for task in task_list:\n            md5 = task.result()\n            md5_list.append(md5)\n\n        return md5_list\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br")])]),e("ul",[e("li",[s._v("修改storage.py模块，实现多线程处理方法")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("from .module_base import BaseModule\nfrom PIL import Image\nfrom .executor import thread_pool_executor\n\nclass Storager(BaseModule):\n\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n\n    def _process(self, item):\n        content, path = item\n        # 获取图片的二进制内容\n        content = Image.fromarray(content.astype('uint8')).convert('RGB')\n        content.save(path)\n        pass\n\n    def _process_single_thread(self, list_):\n        # list_中是\n        for item in list_:\n            self._process(item)\n\n    def _process_multi_thread(self, list_):\n        task_list = []\n        for item in list_:\n            task = thread_pool_executor.submit(self._process, (item))\n            task_list.append(task)\n\n        for task in task_list:\n            task.result()\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("ul",[e("li",[s._v("修改storage.py模块，实现多线程处理方法")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("from .module_base import BaseModule\nfrom PIL import Image\nfrom .executor import thread_pool_executor\n\nclass Storager(BaseModule):\n\n    def __init__(self, *args, **kwargs):\n        super().__init__(*args, **kwargs)\n\n    def _process(self, item):\n        content, path = item\n        # 获取图片的二进制内容\n        content = Image.fromarray(content.astype('uint8')).convert('RGB')\n        content.save(path)\n        pass\n\n    def _process_single_thread(self, list_):\n        # list_中是\n        for item in list_:\n            self._process(item)\n\n    def _process_multi_thread(self, list_):\n        task_list = []\n        for item in list_:\n            task = thread_pool_executor.submit(self._process, (item))\n            task_list.append(task)\n\n        for task in task_list:\n            task.result()\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("ul",[e("li",[s._v("修改scheduler.py模块，对比单线程和多线程处理结果")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("import os\nimport prettytable\nfrom threading_test.download_server.modules.downloader import Downloader\nfrom threading_test.download_server.modules.hasher import Hasher\nfrom threading_test.download_server.modules.storage import Storager\nfrom threading_test.download_server.utils import get_url_list, Timer\nfrom threading_test.download_server.const import CalcType\n# 调用器\nclass Scheduler:\n\n    # 模块初始化\n    def __init__(self):\n        self.download = Downloader()\n        self.hasher = Hasher()\n        self.storager = Storager()\n\n    # 将md5字符串转换为路径\n    def _get_path(self, md5):\n        file_name = '{}.jpg'.format(md5)\n        file_path = os.path.join('/Users/yinhuanyi/Yinhuanyi_Project/Coroutine_Project/threading_test/download_server/images', file_name)\n        return file_path\n\n    # 设置线程运行的方式\n    def set_calc_type(self, type):\n        self.download.set_calc_type(type)\n        self.hasher.set_calc_type(type)\n        self.storager.set_calc_type(type)\n\n    # 调用各个模块\n    def process(self):\n        timer = Timer()\n        time_statistics = {}\n        time_statistics['cpu'] = []\n        time_statistics['network'] = []\n        time_statistics['disk'] = []\n\n        # 1：加载图片的url\n        url_list = get_url_list()\n        # 2：返回图片的numpy数组列表\n        timer.begine()\n        content_list  = self.download.process(url_list)\n        time_statistics['network'] = timer.end()\n\n        # 3：返回md5列表\n        timer.begine()\n        md5_list = self.hasher.process(content_list)\n        time_statistics['cpu'] = timer.end()\n\n        # 4：将内容和md5路径组合，交给存储模块，存储图片\n        timer.begine()\n        item_list = [(content, self._get_path(md5)) for content, md5 in zip(content_list, md5_list)]\n        self.storager.process(item_list)\n        time_statistics['disk'] = timer.end()\n        return time_statistics\n\n    # 统计各个模块运行时长\n    def statistics(self, single_log: dict, multi_log: dict):\n        # 设置表头\n        table = prettytable.PrettyTable(['类型', '单线程耗时', '多线程耗时', '多线程提升率'])\n        # 第一行数据\n        network_row = ['network']\n        # 第二行数据\n        cpu_row = ['cpu']\n        # 第三行数据\n        disk_row = ['disk']\n\n        # 添加单线程数据\n        network_row.append(single_log['network'])\n        cpu_row.append(single_log['cpu'])\n        disk_row.append(single_log['disk'])\n\n        # 添加多线程数据\n        network_row.append(multi_log['network'])\n        cpu_row.append(multi_log['cpu'])\n        disk_row.append(multi_log['disk'])\n\n        # 计算多线程对比单线程的效率提升\n        time_ = single_log['network'] - multi_log['network']\n        rate = '{}%'.format(time_ / single_log['network'] * 100)\n        network_row.append(rate)\n\n        time_ = single_log['cpu'] - multi_log['cpu']\n        rate = '{}%'.format(time_ / single_log['cpu'] * 100)\n        cpu_row.append(rate)\n\n        time_ = single_log['disk'] - multi_log['disk']\n        rate = '{}%'.format(time_ / single_log['disk'] * 100)\n        disk_row.append(rate)\n\n        # 数据添加到表中\n        table.add_row(cpu_row)\n        table.add_row(disk_row)\n        table.add_row(network_row)\n        print(table)\n\n\nif __name__ == '__main__':\n\n    scheduler = Scheduler()\n    # 设置单线程运行\n    scheduler.set_calc_type(CalcType.SingleThread)\n    single_thread_statistics = scheduler.process()\n\n    # 设置多线程\n    scheduler.set_calc_type(CalcType.MultiProcess)\n    multi_thread_statistics = scheduler.process()\n\n    # 合并数据，对比单线程和多线程\n    scheduler.statistics(single_thread_statistics, multi_thread_statistics)\n\n\n    # 对比结果\n    \"\"\"\n    +---------+------------+------------+----------------------+\n    |   类型  | 单线程耗时 | 多线程耗时 |     多线程提升率     |\n    +---------+------------+------------+----------------------+\n    |   cpu   | 28.615242  | 33.323062  | -16.452141135133513% |\n    |   disk  |  2.318627  |  1.385825  | 40.230791757363306%  |\n    | network | 30.493606  |  5.587829  |  81.67540762479845%  |\n    +---------+------------+------------+----------------------+\n    \"\"\"\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br"),e("span",{staticClass:"line-number"},[s._v("95")]),e("br"),e("span",{staticClass:"line-number"},[s._v("96")]),e("br"),e("span",{staticClass:"line-number"},[s._v("97")]),e("br"),e("span",{staticClass:"line-number"},[s._v("98")]),e("br"),e("span",{staticClass:"line-number"},[s._v("99")]),e("br"),e("span",{staticClass:"line-number"},[s._v("100")]),e("br"),e("span",{staticClass:"line-number"},[s._v("101")]),e("br"),e("span",{staticClass:"line-number"},[s._v("102")]),e("br"),e("span",{staticClass:"line-number"},[s._v("103")]),e("br"),e("span",{staticClass:"line-number"},[s._v("104")]),e("br"),e("span",{staticClass:"line-number"},[s._v("105")]),e("br"),e("span",{staticClass:"line-number"},[s._v("106")]),e("br"),e("span",{staticClass:"line-number"},[s._v("107")]),e("br"),e("span",{staticClass:"line-number"},[s._v("108")]),e("br"),e("span",{staticClass:"line-number"},[s._v("109")]),e("br"),e("span",{staticClass:"line-number"},[s._v("110")]),e("br"),e("span",{staticClass:"line-number"},[s._v("111")]),e("br"),e("span",{staticClass:"line-number"},[s._v("112")]),e("br"),e("span",{staticClass:"line-number"},[s._v("113")]),e("br"),e("span",{staticClass:"line-number"},[s._v("114")]),e("br"),e("span",{staticClass:"line-number"},[s._v("115")]),e("br"),e("span",{staticClass:"line-number"},[s._v("116")]),e("br"),e("span",{staticClass:"line-number"},[s._v("117")]),e("br"),e("span",{staticClass:"line-number"},[s._v("118")]),e("br"),e("span",{staticClass:"line-number"},[s._v("119")]),e("br"),e("span",{staticClass:"line-number"},[s._v("120")]),e("br"),e("span",{staticClass:"line-number"},[s._v("121")]),e("br")])]),e("ul",[e("li",[s._v("总结")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("多线程对比单线程，在IO处理上，提升的效率比较明显，但是在CPU计算密集任务中，多线程的性能反而下降\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])])}),[],!1,null,null,null);n.default=t.exports},970:function(s,n,a){s.exports=a.p+"assets/img/2021-02-112.23.57.c73983fd.png"},971:function(s,n,a){s.exports=a.p+"assets/img/2021-02-112.30.02.806c38e5.png"},972:function(s,n,a){s.exports=a.p+"assets/img/2021-02-149.35.30.859111ec.png"}}]);