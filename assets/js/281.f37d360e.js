(window.webpackJsonp=window.webpackJsonp||[]).push([[281],{1306:function(s,e,a){s.exports=a.p+"assets/img/2019-10-033.13.44.910eb365.png"},2440:function(s,e,a){"use strict";a.r(e);var n=a(9),r=Object(n.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h3",{attrs:{id:"一-轮播图功能开发"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-轮播图功能开发"}},[s._v("#")]),s._v(" 一：轮播图功能开发")]),s._v(" "),n("ul",[n("li",[s._v("在urls.py文件中添加")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 轮播图展示\nrouter.register(r'banners', BannerViewSet, base_name='banners')\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("在goods.django_rest_view.banner.py中添加BannerViewSet\n"),n("img",{attrs:{src:a(1306),alt:"Alt text"}})])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("from rest_framework import mixins, viewsets\nfrom ..models import Banner\nfrom ..serializers import BannerSerializer\n\nclass BannerViewSet(mixins.ListModelMixin, viewsets.GenericViewSet):\n    queryset = Banner.objects.all().order_by('index')\n    serializer_class = BannerSerializer\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ul",[n("li",[s._v("在goods.serializers.banner.py中添加BannerSerializer")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("from rest_framework import serializers\nfrom ..models import Banner\n\nclass BannerSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Banner\n        fields = '__all__'\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ul",[n("li",[s._v("访问"),n("code",[s._v("http://node1:8000/banners/")])])]),s._v(" "),n("h3",{attrs:{id:"二-新商品开发"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-新商品开发"}},[s._v("#")]),s._v(" 二：新商品开发")]),s._v(" "),n("ul",[n("li",[s._v("goods新商品只需要在goods.filters.good.py模块中GoodsFilter中fields指定字段添加is_new字段即可")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("fields = ['pricemin', 'pricemax', 'name', 'is_hot', 'is_new']\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("h3",{attrs:{id:"三-使用首页分类显示功能开发"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三-使用首页分类显示功能开发"}},[s._v("#")]),s._v(" 三：使用首页分类显示功能开发")]),s._v(" "),n("ul",[n("li",[s._v("在urls.py文件中创建路由")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 首页类别查询\nrouter.register(r'index_category_goods', IndexCategoryViewSet, base_name='index_category_goods')\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("在goods.django_rest_view.index_goods.py模块中创建IndexCategoryViewSet接口")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("from rest_framework import mixins, viewsets\nfrom ..models import GoodsCategory\nfrom ..serializers import IndexCategorySerializer\n\n# 提供查询接口\nclass IndexCategoryViewSet(mixins.ListModelMixin, viewsets.GenericViewSet):\n    queryset = GoodsCategory.objects.filter(is_tab=True, name__in=['生鲜食品', '酒水饮料'])\n    serializer_class = IndexCategorySerializer\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("ul",[n("li",[s._v("在goods.serializers.index_goods.py模块中创建IndexCategorySerializer，关联GoodsCategory这个model，同时返回类别品牌，类别下的商品，一级类别中二级分类，广告商品.")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("from ..models import GoodsCategory, IndexAd\nfrom ..serializers import BrandSerializer, GoodsSerializer, GoodsCategorySerializer2\nfrom rest_framework import serializers\nfrom ..models import Goods\nfrom django.db.models import Q\n\nclass IndexCategorySerializer(serializers.ModelSerializer):\n    # 由于类别品牌属于类别，类别中有一个related_name=brands_to_category, 这里获取到类别之后，反向序列化获取类别品牌\n    # 反向查询many=True，正向查询many=False\n    brands_to_category = BrandSerializer(many=True)\n    # 虽然Goods Model中有一个外键category指向GoodsCategory，好像可以反向查询，当获取到category，可以查看包含了哪些商品，但是在GoodsCategory中，类别是分多级的，因此，当获取到category的时候，可能获取的是第一类，那么第一类就没有商品，只有第三类才有商品，因此需要自己自定义的返回category下的goods信息，如果是获取的第一类的category，那么需要获取到第一类下面的所有第二类，第二类下面所有第三类，根据第三类查找所有商品\n    goods = serializers.SerializerMethodField(read_only=True)\n    # 获取一级分类下的二级分类\n    sub_cat = GoodsCategorySerializer2(many=True)\n    ad_goods = serializers.SerializerMethodField(read_only=True)\n\n    def get_ad_goods(self, obj):\n        ad_goods = IndexAd.objects.filter(category_id=obj.id)\n        if ad_goods:\n            good_record = ad_goods[0].goods\n            return GoodsSerializer(good_record, many=False, context={'request': self.context['request']}).data\n\n    def get_goods(self, obj):\n        '''\n        :param obj: GoodsCategory中的记录\n        :return:\n        '''\n        # obj.id就是类别id，如果Goods这个Model中category_id等于用户请求的类别字段，那么此商品就会保留\n        all_goods_queryset = Goods.objects.filter(Q(category_id = obj.id) | \\\n                                         Q(category__parent_category_id = obj.id) | \\\n                                         Q(category__parent_category__parent_category_id = obj.id))\n        # 拿到所有的记录之后需要序列化返回, GoodsSerializer中的init方法可以将需要序列化的实例传递进来，返回实例的序列化结果\n        return GoodsSerializer(instance=all_goods_queryset, many=True, context={'request': self.context['request']}).data\n\n    class Meta:\n        model = GoodsCategory\n        fields = '__all__'\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br")])]),n("ul",[n("li",[s._v("上面代码的主要知识点")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("1: 在get_ad_goods和get_goods方法中, 查询到记录的数据模型后，例如goods的记录模型，直接使用GoodsSerializer序列化类序列化返回给前端， instance指定需要序列化的记录模型，context指定返回图片路径的时候，加上http://IP:PORT前缀\nGoodsSerializer(instance=good_record, many=False, context={'request': self.context['request']}).data\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"四-商品点击数和收藏数功能显示开发"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四-商品点击数和收藏数功能显示开发"}},[s._v("#")]),s._v(" 四：商品点击数和收藏数功能显示开发")]),s._v(" "),n("ul",[n("li",[s._v("在GoodsListViewSet接口中，重写get_queryset方法，后台给用户返回单个商品的查询结果的时候，让记录模型中的click_num字段加1，且写入数据表")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    # 重写retrieve方法，用户访问某个商品的时候，给商品点击数量加1\n    def retrieve(self, request, *args, **kwargs):\n        instance = self.get_object()\n        instance.click_num += 1\n        instance.save()\n        serializer = self.get_serializer(instance)\n        return Response(serializer.data)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ul",[n("li",[s._v("在UserFavViewSet接口中，重写perform_create方法，当用户点击某个商品收藏，发送post请求的时候，让这个商品的fav_num加1，这个instance是UserFav这个Model，Model有一个外键为goods")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("    # 当用户点击某个商品收藏，发送post请求的时候，让这个商品的fav_num加1\n    def perform_create(self, serializer):\n        # 这个instance是UserFav这个Model，Model有一个外键为goods\n        instance = serializer.save()\n        goods = instance.goods\n        goods.fav_num += 1\n        goods.save()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ul",[n("li",[s._v("基于Django信号量的解决方法")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\t由于Django的ORM中，进行delete、save操作的时候，都会发出信号量，因此可以捕获到这个信号量，在delete或save数据之前对数据进行操作\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("这里对UserFavViewSet接口中收藏商品和取消收藏商品之后，Goods这个Model中的fav_num的加一和减一操作在Django的信号量中完成，信号量能够有效的将降低代码的耦合性。首先注释掉上面的代码， 创建user_operation.signals.py模块，")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("from django.db.models.signals import post_save, post_delete\nfrom django.dispatch import receiver\nfrom .models import UserFav\n\n# 指定接收UserFav这个Model的post_save信号量\ndef create_userfav(sender, instance=None, created=False, **kwargs):\n    if created:\n        goods = instance.goods\n        goods.fav_num += 1\n        goods.save()\n\n\ndef delete_userfav(sender, instance=None, created=False, **kwargs):\n    goods = instance.goods\n    goods.fav_num -= 1\n    goods.save()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("ul",[n("li",[s._v("在user_operation.apps.py模块中注册信号量模块")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("from django.apps import AppConfig\n\nclass UserOperationConfig(AppConfig):\n    name = 'user_operation'\n    verbose_name = '用户操作'\n\n    def ready(self):\n        import user_operation.signals\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])])])}),[],!1,null,null,null);e.default=r.exports}}]);