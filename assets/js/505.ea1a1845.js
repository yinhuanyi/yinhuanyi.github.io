(window.webpackJsonp=window.webpackJsonp||[]).push([[505],{2478:function(n,a,s){"use strict";s.r(a);var e=s(9),l=Object(e.a)({},(function(){var n=this,a=n.$createElement,s=n._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("h2",{attrs:{id:"一-scala的隐式转换"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-scala的隐式转换"}},[n._v("#")]),n._v(" 一：Scala的隐式转换")]),n._v(" "),s("h3",{attrs:{id:"一-简单用法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-简单用法"}},[n._v("#")]),n._v(" (一)简单用法")]),n._v(" "),s("ul",[s("li",[n._v("知识点说明：\n"),s("ul",[s("li",[n._v("1：隐式转换就是基于一个高级类，将某个低级类转换为具有高级类一样的功能")])])])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('// 程序的入口\nobject Hello extends App {\n\n  // 隐式转换\n  implicit def manToSuper(man: Man):Superman = new Superman(man.name)\n\n  val man = new Man("Robby")\n  man.fly()\n\n}\n\nclass Man(val name: String){\n  def eat(): Unit ={\n    println(s"$name eat")\n  }\n}\n\nclass Superman(val name: String){\n  def fly(): Unit ={\n    println(s"$name fly")\n  }\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br")])]),s("h3",{attrs:{id:"二-将file类添加read-方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二-将file类添加read-方法"}},[n._v("#")]),n._v(" (二)将File类添加read()方法")]),n._v(" "),s("ul",[s("li",[n._v("知识点说明：\n"),s("ul",[s("li",[n._v("1：给java的File类，添加read()方法")])])])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('object Hello extends App {\n\n  // 使用隐式转换为File类添加方法\n  implicit def fileToAdvanceFile(file: File):AdvanceFile = new AdvanceFile(file: File)\n  val file = new File("/Users/yinhuanyi/test.txt")\n  var txt = file.read()\n  println(txt)\n  \n}\n\n\nclass AdvanceFile(var file: File){\n  def read(): String ={\n    scala.io.Source.fromFile(file.getPath).mkString.replace("\\n", "")\n  }\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br")])]),s("h2",{attrs:{id:"二-scala的隐式转换封装到其他文件中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二-scala的隐式转换封装到其他文件中"}},[n._v("#")]),n._v(" 二：Scala的隐式转换封装到其他文件中")]),n._v(" "),s("h3",{attrs:{id:"一-简单用法-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-简单用法-2"}},[n._v("#")]),n._v(" (一)简单用法")]),n._v(" "),s("ul",[s("li",[s("p",[n._v("知识点说明：")]),n._v(" "),s("ul",[s("li",[n._v("1：隐式转换进行封装")])])]),n._v(" "),s("li",[s("p",[n._v("AllImplicit文件")])])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("object AllImplicit {\n    implicit def fileToAdvanceFile(file: File):AdvanceFile = new AdvanceFile(file: File)\n    implicit def manToSuper(man: Man):Superman = new Superman(man.name)\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br")])]),s("ul",[s("li",[n._v("当前文件")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('// 直接导入进来就好了\nimport AllImplicit._\n\nobject Hello extends App {\n\n  val file = new File("/Users/yinhuanyi/test.txt")\n  var txt = file.read()\n  println(txt)\n}\n\nclass AdvanceFile(var file: File){\n  def read(): String ={\n    scala.io.Source.fromFile(file.getPath).mkString.replace("\\n", "")\n  }\n}\n\n\nclass Man(val name: String){\n  def eat(): Unit ={\n    println(s"$name eat")\n  }\n}\n\nclass Superman(val name: String){\n  def fly(): Unit ={\n    println(s"$name fly")\n  }\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br")])]),s("h2",{attrs:{id:"三-scala的隐式类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三-scala的隐式类"}},[n._v("#")]),n._v(" 三：Scala的隐式类")]),n._v(" "),s("h3",{attrs:{id:"一-简单用法-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一-简单用法-3"}},[n._v("#")]),n._v(" (一)简单用法")]),n._v(" "),s("ul",[s("li",[n._v("知识点说明：\n"),s("ul",[s("li",[n._v("1：隐式类")])])])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("object Hello extends App {\n  // implicit隐式了Int类型，因此，只有是Int类型的对象就有add()方法\n  implicit class Calcalator(x: Int){\n    def add(a: Int) = a + x\n  }\n\n  println(12.add(3))\n\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br")])])])}),[],!1,null,null,null);a.default=l.exports}}]);