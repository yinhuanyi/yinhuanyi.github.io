(window.webpackJsonp=window.webpackJsonp||[]).push([[175],{2163:function(t,s,a){"use strict";a.r(s);var e=a(9),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"一-grpc概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-grpc概念"}},[t._v("#")]),t._v(" 一： gRPC概念")]),t._v(" "),e("h3",{attrs:{id:"一-grpc的定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-grpc的定义"}},[t._v("#")]),t._v(" (一) gRPC的定义")]),t._v(" "),e("ul",[e("li",[t._v("gRPC是一个高性能、通用的开源RPC框架，其由Google 2015年主要面向移动应用开发并"),e("strong",[t._v("基于HTTP/2协议标准")]),t._v("而设计，"),e("strong",[t._v("基于ProtoBuf序列化协议开发")]),t._v("，且支持众多开发语言。在gRPC的开发模式下，客户端和服务器端之间的通信会更加专注于业务层面的内容，减少了底层通信协议和传输协议的关注")])]),t._v(" "),e("h3",{attrs:{id:"二-grpc的架构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-grpc的架构"}},[t._v("#")]),t._v(" (二) gRPC的架构")]),t._v(" "),e("ul",[e("li",[t._v("gRPC技术栈分层从下向上分别为：TCP层、HTTP2.0、gRPC、Protobuf、Data。Data就是具体的业务层")])]),t._v(" "),e("p",[e("img",{attrs:{src:a(633),alt:"Alt text"}})]),t._v(" "),e("h3",{attrs:{id:"三-grpc的特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-grpc的特性"}},[t._v("#")]),t._v(" (三) gRPC的特性")]),t._v(" "),e("ul",[e("li",[t._v("gRPC框架的主要特性如下")])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("：支持多种语言\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("：基于 "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("IDL")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("接口描述语言"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 文件定义服务，通过 proto3 "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("工具生成指定语言的数据结构、服务器端骨架")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Skeletons"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("、客户端桩")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Stubs"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("：通信协议基于标准的 "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" 设计，支持双向流、消息头压缩、单 "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TCP")]),t._v(" 的多路复用、服务端推送等特性，这些特性使得 gRPC 在移动端设备上更加省电和节省网络流量\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("：序列化支持 Protobuf 和 "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),t._v("，Protobuf 是一种语言无关的高性能序列化框架，基于 "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PB")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 保障了gRPC框架的高性能\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("h3",{attrs:{id:"四-grpc的交换过程"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四-grpc的交换过程"}},[t._v("#")]),t._v(" (四) gRPC的交换过程")]),t._v(" "),e("p",[e("img",{attrs:{src:a(634),alt:"Alt text"}})]),t._v(" "),e("ul",[e("li",[t._v("gRPC客户端与服务器端交换如下")])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("：客户端将需要发送的数据通过Protobuf进行编码，基于proto文件中定义的"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GRPC")]),t._v("交互协议将数据发送到服务器端\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("：服务器收到请求数据后，基于proto文件定义的协议解析数据，还原数据结构，进行请求响应处理\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("：服务器使用Protobuf编译应答数据，通过"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GRPC")]),t._v("交互协议将数据发送到客户端\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("：客户端收到响应数据后，解析数据，结束本次的gRPC交互\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("h2",{attrs:{id:"二-protobuf"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-protobuf"}},[t._v("#")]),t._v(" 二： Protobuf")]),t._v(" "),e("h3",{attrs:{id:"一-protobuf的定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-protobuf的定义"}},[t._v("#")]),t._v(" (一) Protobuf的定义")]),t._v(" "),e("ul",[e("li",[t._v("ProtoBuf是一种更加灵活、高效的数据存储格式，与JSON、XML类似。ProtoBuf在一些高性能且对响应速度有要求的数据传输场景非常适用，ProtoBuf在gRPC的框架中主要有三个作用")])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("：定义数据结构\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("：定义服务接口\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("：通过序列化和反序列化，提升传输效率\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("ul",[e("li",[t._v("使用XML、JSON进行数据编译时，"),e("strong",[t._v("数据文本格式更容易阅读")]),t._v("，但进行数据交换时，设备就需要耗费大量的CPU在I/O动作上，自然会影响整个传输速率。ProtoBuf将字符串进行序列化后再进行传输，即二进制数据")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("ProtoBuf编码")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("JSON编码")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("{")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("{")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v('1: "Robby"')]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v('"name": "Robby"')])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("2: 30")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v('"age": 30')])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("}")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("}")])])])]),t._v(" "),e("ul",[e("li",[t._v("从数据存储的格式上看，ProtoBuf和JSON内容都非常直观，"),e("strong",[t._v("但是ProtoBuf编码的内容是二进制数据")]),t._v("，比JSON编码的数据占用的存储空间少很多，效率更快")])]),t._v(" "),e("h3",{attrs:{id:"二-grpc是如何支持多语言的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-grpc是如何支持多语言的"}},[t._v("#")]),t._v(" (二) gRPC是如何支持多语言的")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Protobuf自带编译器，编译器可以将proto文件编译成对应语言的库文件")]),t._v("，开发者只需要实现库文件中Service的方法，处理对应的业务逻辑即可，无需更新传输层协议的通信细节和数据的序列化和反序列化")])]),t._v(" "),e("h2",{attrs:{id:"三-基于http-2-0标准设计"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-基于http-2-0标准设计"}},[t._v("#")]),t._v(" 三： 基于HTTP 2.0标准设计")]),t._v(" "),e("h3",{attrs:{id:"一-基于http2-0设计的优势"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-基于http2-0设计的优势"}},[t._v("#")]),t._v(" (一) 基于HTTP2.0设计的优势")]),t._v(" "),e("ul",[e("li",[t._v("HTTP2.0的主要优势如下")])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("：二进制传输\n\t请求数据和响应数据在发送到网络协议栈之前，都会经过二进制分帧层处理，将数据转换为帧数据发送\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("："),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("O")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("多路复用")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("net"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("rpc库也是这样的思路，在net"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("rpc中将seq作为请求编号"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t客户端的请求数据通过二进制分帧层处理后，会转换为以请求"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),t._v("为编号的帧数据，然后将帧数据发送到服务器端。服务器接收到所有的帧数据后，会将相同"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),t._v("编号的帧合并为一条完整的请求数据。然后服务器处理请求，获取响应数据，响应数据再通过二进制分帧层处理为帧数据，发送给浏览器，浏览器合并"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("ID")]),t._v("编号相同的帧数据为一条完整的响应请求\n\t那么多路复用指的是只需要创建一个连接，就可以一次性的发送多个帧数据请求，这样就大量降低了网络连接的开销\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("：header压缩\n\tencoder来减少需要传输的header大小，通讯双方各自cache一份header fields表，既避免了重复header的传输，又减小了需要传输的大小\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("：服务器端推送\n\t具备server push功能\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br")])]),e("h2",{attrs:{id:"四-thrift-vs-grpc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四-thrift-vs-grpc"}},[t._v("#")]),t._v(" 四： Thrift VS gRPC")]),t._v(" "),e("h3",{attrs:{id:"一-两种rpc框架对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-两种rpc框架对比"}},[t._v("#")]),t._v(" (一) 两种RPC框架对比")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("gRPC")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("Thrift")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("数据存储格式")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Protobuf")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("TBinaryProtocol、TCompactProtocol、TJSONProtocol、TSimpleJSONProtocol")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("传输方式")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("HTTP2.0")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("TSocket、TFramedTransport、TFileTransport、TMemoryTransport、TZlibTransport")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("服务器端I/O模型")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("需要自己实现")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("TSimpleServer、TThreadPoolServer、TNonBlockingServer、THsHaServer")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("权限认证")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("SSL/TLS、OAuth2.0、API")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("SSL")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("流式处理")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("支持")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("不支持")])])])]),t._v(" "),e("h3",{attrs:{id:"二-如何选型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-如何选型"}},[t._v("#")]),t._v(" (二) 如何选型")]),t._v(" "),e("ul",[e("li",[t._v("什么时候应该选择gRPC而不是Thrift")])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("：习惯"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("、Protobuf\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("：对网络传输带宽要求较高\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("ul",[e("li",[t._v("什么时候应该选择Thrift而不是gRPC")])]),t._v(" "),e("div",{staticClass:"language-javascript line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("：对"),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("CPU")]),t._v("敏感\n\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("：协议层、传输层有多种控制要求\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])])])}),[],!1,null,null,null);s.default=r.exports},633:function(t,s,a){t.exports=a.p+"assets/img/2022-03-1317.34.40.b4e27c4e.png"},634:function(t,s,a){t.exports=a.p+"assets/img/2022-03-1317.46.13.12a9dfd0.png"}}]);