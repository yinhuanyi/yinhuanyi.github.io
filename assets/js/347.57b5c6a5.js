(window.webpackJsonp=window.webpackJsonp||[]).push([[347],{2180:function(s,a,n){"use strict";n.r(a);var e=n(9),t=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"一-概要"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-概要"}},[s._v("#")]),s._v(" 一：概要")]),s._v(" "),n("h3",{attrs:{id:"一-基本定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-基本定义"}},[s._v("#")]),s._v(" (一)：基本定义")]),s._v(" "),n("ul",[n("li",[s._v("Go语言中提供的映射关系容器为map，其内部使用哈希表(数组+链表)实现")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("map是一种无序的基于key-value的数据结构，Go语言中的map是引用类型，必须初始化才能使用\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("基本初始化(map的cap会随着元素的增多而增大)")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('scoreMap := make(map[string]int, 1)\nscoreMap["张三"] = 90\nscoreMap["小明"] = 100\nscoreMap["a"] = 100\nscoreMap["b"] = 100\nfmt.Println(scoreMap)\nfmt.Println(scoreMap["小明"])\nfmt.Printf("type of a:%T\\n", scoreMap)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("ul",[n("li",[s._v("也可以初始化的时候赋值")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('userInfo := map[string]string{\n\t"username": "沙河小王子",\n\t"password": "123456",\n}\nfmt.Println(userInfo) \n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"二-判断某个键是否存在"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-判断某个键是否存在"}},[s._v("#")]),s._v(" (二)：判断某个键是否存在")]),s._v(" "),n("ul",[n("li",[s._v("如果key存在ok为true,v为对应的值；不存在ok为false,v为值类型的零值")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('scoreMap := make(map[string]int)\nscoreMap["张三"] = 90\nscoreMap["小明"] = 100\n// 如果key存在ok为true,v为对应的值；不存在ok为false,v为值类型的零值\nv, ok := scoreMap["张三"]\nif ok {\n\tfmt.Println(v)\n} else {\n\tfmt.Println("查无此人")\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h3",{attrs:{id:"三-map的遍历"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三-map的遍历"}},[s._v("#")]),s._v(" (三)：map的遍历")]),s._v(" "),n("ul",[n("li",[s._v("Go语言中使用for range遍历map")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('scoreMap := make(map[string]int)\nscoreMap["张三"] = 90\nscoreMap["小明"] = 100\nscoreMap["娜扎"] = 60\n\nfor k, v := range scoreMap {\n\tfmt.Println(k, v)\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("ul",[n("li",[s._v("但我们只想遍历key的时候，可以按下面的写法：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('func main() {\n\tscoreMap := make(map[string]int)\n\t\n\tscoreMap["张三"] = 90\n\tscoreMap["小明"] = 100\n\tscoreMap["娜扎"] = 60\n\t\n\tfor k := range scoreMap {\n\t\tfmt.Println(k)\n\t}\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h3",{attrs:{id:"四-使用delete-函数删除键值对"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四-使用delete-函数删除键值对"}},[s._v("#")]),s._v(" (四)：使用delete()函数删除键值对")]),s._v(" "),n("ul",[n("li",[s._v("使用delete( )内建函数从map中删除一组键值对，delete( )函数的格式如下：如果对应的key在map中不存在，那么也不会报错")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('delete(map, key)\n\nscoreMap := make(map[string]int)\nscoreMap["张三"] = 90\nscoreMap["小明"] = 100\nscoreMap["娜扎"] = 60\ndelete(scoreMap, "小明")//将小明:100从map中删除\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"五-按照指定顺序遍历map"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#五-按照指定顺序遍历map"}},[s._v("#")]),s._v(" (五)：按照指定顺序遍历map")]),s._v(" "),n("ul",[n("li",[s._v("这里对map的key进行排序，输出排序后key对应的value。sort.Strings( )对切片字符串进行排序")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//初始化随机数种子\nrand.Seed(time.Now().UnixNano())\n\nvar scoreMap = make(map[string]int, 200)\n\nfor i := 0; i < 100; i++ {\n\tkey := fmt.Sprintf("stu%02d", i) //生成stu开头的字符串\n\tvalue := rand.Intn(100)          //生成0~99的随机整数\n\tscoreMap[key] = value\n}\n\n//取出map中的所有key存入切片keys\nvar keys = make([]string, 0, 200)\nfor key := range scoreMap {\n\tkeys = append(keys, key)\n}\n\n//对切片进行排序\nsort.Strings(keys)\n//按照排序后的key遍历map\nfor _, key := range keys {\n\tfmt.Println(key, scoreMap[key])\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])]),n("h3",{attrs:{id:"六-元素为map类型的切片"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#六-元素为map类型的切片"}},[s._v("#")]),s._v(" (六)：元素为map类型的切片")]),s._v(" "),n("ul",[n("li",[s._v("下面的代码演示了切片中的元素为map类型时的操作：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('var mapSlice = make([]map[string]string, 3)\n\nfor index, value := range mapSlice {\n\tfmt.Printf("index:%d value:%v\\n", index, value)\n}\n\nfmt.Println("after init")\n\n// 对切片中的map元素进行初始化\nmapSlice[0] = make(map[string]string, 10)\nmapSlice[0]["name"] = "小王子"\nmapSlice[0]["password"] = "123456"\nmapSlice[0]["address"] = "沙河"\n\nfor index, value := range mapSlice {\n\tfmt.Printf("index:%d value:%v\\n", index, value)\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("h3",{attrs:{id:"七-值为切片类型的map"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#七-值为切片类型的map"}},[s._v("#")]),s._v(" (七)：值为切片类型的map")]),s._v(" "),n("ul",[n("li",[s._v("下面的代码演示了map中值为切片类型的操作")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('var sliceMap = make(map[string][]string, 3)\nfmt.Println(sliceMap)\nfmt.Println("after init")\nkey := "中国"\nvalue, ok := sliceMap[key]\nif !ok {\n\tvalue = make([]string, 0, 2)\n}\nvalue = append(value, "北京", "上海")\nsliceMap[key] = value\nfmt.Println(sliceMap)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);