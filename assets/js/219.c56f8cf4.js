(window.webpackJsonp=window.webpackJsonp||[]).push([[219],{1826:function(s,e,t){s.exports=t.p+"assets/img/2020-04-0110.22.17.48f912e8.png"},1827:function(s,e,t){s.exports=t.p+"assets/img/2020-04-126.53.18.eb0a0d0f.png"},2717:function(s,e,t){"use strict";t.r(e);var n=t(9),a=Object(n.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h3",{attrs:{id:"一-创建网络namespace"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-创建网络namespace"}},[s._v("#")]),s._v(" 一：创建网络namespace")]),s._v(" "),n("h3",{attrs:{id:"一-创建两个namespace网络名称空间-让这两个名称空间可以相互通信"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-创建两个namespace网络名称空间-让这两个名称空间可以相互通信"}},[s._v("#")]),s._v(" (一)：创建两个namespace网络名称空间，让这两个名称空间可以相互通信")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 创建test1 namespace网络\nip netns add test1\nip netns add test2\n# 查看namespace\nip netns list\n# 也可以删除\nip netns delete test1\n\n# 进入到test1 namespace网络，查看ip\nip netns exec test1 ip addr(DOWN状态)\n1: lo: <LOOPBACK### mtu 65536 qdisc noop state DOWN group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n\n\n\n# 激活test1 namespace网络的lo地址\nip netns exec test1 ip link set dev lo up\n# 查看\nip netns exec test1 ip link（UNKNOWN状态）\n1: lo: <LOOPBACK,UP,LOWER_UP### mtu 65536 qdisc noqueue state UNKNOWN mode DEFAULT group default qlen 1000\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n\n\n# 在宿主机上创建一对veth-test1和veth-test2虚拟网卡：\nip link add veth-test1 type veth peer name veth-test2\n\n# 查看本地的网卡\n ip link\n 32: veth-test2@veth-test1: <BROADCAST,MULTICAST,M-DOWN### mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000\n    link/ether 52:ea:15:ac:f1:90 brd ff:ff:ff:ff:ff:ff\n33: veth-test1@veth-test2: <BROADCAST,MULTICAST,M-DOWN### mtu 1500 qdisc noop state DOWN mode DEFAULT group default qlen 1000\n    link/ether 56:3c:2d:e2:e8:9a brd ff:ff:ff:ff:ff:ff\n\n\n\n# 将veth-test1虚拟网卡添加到test1 namespace中\nip link set veth-test1 netns test1\n# 将veth-test2虚拟网卡添加到test2 namespace中\nip link set veth-test2 netns test2\n\n\n# 此时分别进入到test1和test2, 查看地址和虚拟网卡: 可以发现，test1这个namespace中有lo地址和veth-test1虚拟网卡，test2这个namespace中有lo地址和veth-test2虚拟网卡\nip netns exec test1 ip link\nip netns exec test2 ip link\n\n\n# 给test1中的veth-test1虚拟网卡创建IP地址\nip netns exec test1 ip addr add 192.168.1.1/24 dev veth-test1\n# 给test2中的veth-test2虚拟网卡创建IP地址\nip netns exec test2 ip addr add 192.168.1.2/24 dev veth-test2\n\n\n# 激活test1中的veth-test1虚拟网卡的IP地址\nip netns exec test1 ip link set dev veth-test1 up\n# 激活test2中的veth-test2虚拟网卡的IP地址\nip netns exec test2 ip link set dev veth-test2 up\n\n\n# 在test1的namespace中ping test2的namespace的IP地址：发现可以ping通\nip netns exec test1 ping 192.168.1.2\n64 bytes from 192.168.1.2: icmp_seq=1 ttl=64 time=0.062 ms\n64 bytes from 192.168.1.2: icmp_seq=2 ttl=64 time=0.057 ms\n# 在test2的namespace中ping test1的namespace的IP地址：发现可以ping通\nip netns exec test2 ping 192.168.1.1\n64 bytes from 192.168.1.1: icmp_seq=1 ttl=64 time=0.063 ms\n64 bytes from 192.168.1.1: icmp_seq=2 ttl=64 time=0.046 ms\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br"),n("span",{staticClass:"line-number"},[s._v("41")]),n("br"),n("span",{staticClass:"line-number"},[s._v("42")]),n("br"),n("span",{staticClass:"line-number"},[s._v("43")]),n("br"),n("span",{staticClass:"line-number"},[s._v("44")]),n("br"),n("span",{staticClass:"line-number"},[s._v("45")]),n("br"),n("span",{staticClass:"line-number"},[s._v("46")]),n("br"),n("span",{staticClass:"line-number"},[s._v("47")]),n("br"),n("span",{staticClass:"line-number"},[s._v("48")]),n("br"),n("span",{staticClass:"line-number"},[s._v("49")]),n("br"),n("span",{staticClass:"line-number"},[s._v("50")]),n("br"),n("span",{staticClass:"line-number"},[s._v("51")]),n("br"),n("span",{staticClass:"line-number"},[s._v("52")]),n("br"),n("span",{staticClass:"line-number"},[s._v("53")]),n("br"),n("span",{staticClass:"line-number"},[s._v("54")]),n("br"),n("span",{staticClass:"line-number"},[s._v("55")]),n("br"),n("span",{staticClass:"line-number"},[s._v("56")]),n("br"),n("span",{staticClass:"line-number"},[s._v("57")]),n("br"),n("span",{staticClass:"line-number"},[s._v("58")]),n("br"),n("span",{staticClass:"line-number"},[s._v("59")]),n("br"),n("span",{staticClass:"line-number"},[s._v("60")]),n("br"),n("span",{staticClass:"line-number"},[s._v("61")]),n("br"),n("span",{staticClass:"line-number"},[s._v("62")]),n("br"),n("span",{staticClass:"line-number"},[s._v("63")]),n("br"),n("span",{staticClass:"line-number"},[s._v("64")]),n("br"),n("span",{staticClass:"line-number"},[s._v("65")]),n("br"),n("span",{staticClass:"line-number"},[s._v("66")]),n("br")])]),n("h3",{attrs:{id:"二-docker-bridge"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-docker-bridge"}},[s._v("#")]),s._v(" 二：Docker bridge")]),s._v(" "),n("h3",{attrs:{id:"一-两个bridge0连接的container是可以通信的-可以相互ping通"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-两个bridge0连接的container是可以通信的-可以相互ping通"}},[s._v("#")]),s._v(" (一)：两个bridge0连接的container是可以通信的，可以相互ping通")]),s._v(" "),n("ul",[n("li",[s._v("查看docker的网络，有bridge")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("[root@iZwz988mpdr1aoZ ~]# docker network ls\nNETWORK ID          NAME                DRIVER              SCOPE\nf95cd2514b24        bridge              bridge              local\n362254109aad        host                host                local\n49ad0ee522dd        none                null                local\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[n("img",{attrs:{src:t(1826),alt:"Alt text"}})]),s._v(" "),n("ul",[n("li",[s._v("两个容器之间之所以能够相互通信， 是由于每次创建了一对veth虚拟网卡，一段连接到container中，一段连接到docker0上，所以，只要是使用bridge创建的container容器，都能够相互通信，且访问外网时候，docker0会基于NAT规则，将请求转发到eth0中")])]),s._v(" "),n("h3",{attrs:{id:"三-docker-之间的link"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三-docker-之间的link"}},[s._v("#")]),s._v(" 三：Docker 之间的link")]),s._v(" "),n("h3",{attrs:{id:"一-创建两个容器-一个容器link到另外一个容器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-创建两个容器-一个容器link到另外一个容器"}},[s._v("#")]),s._v(" (一)：创建两个容器，一个容器link到另外一个容器")]),s._v(" "),n("ul",[n("li",[s._v("创建两个容器")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('docker run -d --rm --name test1 busybox /bin/sh -c "while true; do sleep 3600; done"\ndocker run -d --rm --name test2 --link test1 busybox /bin/sh -c "while true; do sleep 3600; done"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("ul",[n("li",[s._v("进入到test2，在test2中ping test1这个容器名称")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("[root@iZwz988mpdr1aoZ ~]# docker exec -it 27fbff17f152 /bin/sh\n/ # ping test1\nPING test1 (172.17.0.3): 56 data bytes\n64 bytes from 172.17.0.3: seq=0 ttl=64 time=0.116 ms\n64 bytes from 172.17.0.3: seq=1 ttl=64 time=0.103 ms\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"二-link的实际应用"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-link的实际应用"}},[s._v("#")]),s._v(" (二)：link的实际应用")]),s._v(" "),n("ul",[n("li",[s._v("如果有一个容器需要连接数据库，那么可以使用link")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("# 如果有一个容器叫做mysql，那么可以在新启的容器里面，可以基于--link 获取到mysql的内网IP，再将IP传递给MYSQL_HOME环境变量，容器中的应用程序可以从环境变量中获取到mysql容器的内外地址, 而且连接MySQL的时候，可以直接mysql:3306\ndocker run -d --rm --name app --link mysql -e MYSQL_HOME=mysql \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h3",{attrs:{id:"四-容器之间相互通信的基础"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四-容器之间相互通信的基础"}},[s._v("#")]),s._v(" 四：容器之间相互通信的基础")]),s._v(" "),n("ul",[n("li",[s._v("VXLAN隧道")])]),s._v(" "),n("p",[n("img",{attrs:{src:t(1827),alt:"Alt text"}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("vxlan中封包了容器直接通信所需的网络包头部，这样使得两个宿主机中container之间的通信能够实现\n\nvxlan之前的网络为宿主机之间提供通信，属于 underlay网络\nvxlan之后的网络为container之间通信，属于overlay网络\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h3",{attrs:{id:"一-在实际应用过程中-不仅可以使用bridge类型的网络-也可以使用overlay的网络"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-在实际应用过程中-不仅可以使用bridge类型的网络-也可以使用overlay的网络"}},[s._v("#")]),s._v(" (一)：在实际应用过程中，不仅可以使用bridge类型的网络，也可以使用overlay的网络")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("1：在宿主机之间需要基于etcd分布式存储，让docker engine相互通信\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])])])}),[],!1,null,null,null);e.default=a.exports}}]);