(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{2233:function(s,e,a){"use strict";a.r(e);var n=a(9),t=Object(n.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"一-用户登录与注册"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-用户登录与注册"}},[s._v("#")]),s._v(" 一：用户登录与注册")]),s._v(" "),n("h3",{attrs:{id:"一-注册逻辑"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-注册逻辑"}},[s._v("#")]),s._v(" (一) 注册逻辑")]),s._v(" "),n("ul",[n("li",[s._v("注册处理函数不需要绑定jwt和限流中间件，基本逻辑如下(这里没有手机号的方式)")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("1：将用户的json请求参数转换为结构体\n\n2：然后将用户名和密码写入到数据库中，先判断用户是否存在，如果不存在，雪花算法生成ID，将密码先单向加密，然后一起写入到数据库中\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h3",{attrs:{id:"二-登录逻辑"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-登录逻辑"}},[s._v("#")]),s._v(" (二) 登录逻辑")]),s._v(" "),n("ul",[n("li",[s._v("注册处理函数不需要绑定JWT和限流中间件，基本逻辑如下")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("1：将用户的json请求参数转换为结构体\n\n2：基于用户名，查询数据库中的密码，校验数据库中的密码与用户传递的密码是否相等，如果相等生成JWT Token\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h2",{attrs:{id:"二-封装业务状态码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-封装业务状态码"}},[s._v("#")]),s._v(" 二：封装业务状态码")]),s._v(" "),n("h3",{attrs:{id:"一-返回业务响应状态码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-返回业务响应状态码"}},[s._v("#")]),s._v(" (一) 返回业务响应状态码")]),s._v(" "),n("ul",[n("li",[s._v("业务状态码的封装需要与前端定义好，什么样的状态码对应什么样的错误。在定义好之后，就可以定义一个状态码类型("),n("code",[s._v("type ResCode int64")]),s._v(")，给ResCode封装方法，返回对应的msg，状态码与msg的关系绑定使用map结构")])]),s._v(" "),n("h2",{attrs:{id:"三-中间件的定义方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三-中间件的定义方式"}},[s._v("#")]),s._v(" 三：中间件的定义方式")]),s._v(" "),n("h3",{attrs:{id:"一-net-http库中中间件-拦截器-的定义方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-net-http库中中间件-拦截器-的定义方式"}},[s._v("#")]),s._v(" (一) net/http库中中间件(拦截器)的定义方式")]),s._v(" "),n("ul",[n("li",[s._v("在net/http库中，请求是在handler中被处理的。在"),n("code",[s._v("http.HandleFunc(<请求路径>， <处理函数对象>)")]),s._v("方法中，"),n("code",[s._v("<处理函数对象>")]),s._v("会被net/http库自动调用执行，因此可以在注册路由的时候，传递的是一个函数调用，而不是一个函数对象，"),n("code",[s._v("函数调用中传递了Check这个handler函数，封装了Auth拦截器函数的逻辑")]),s._v("，函数调用返回的是一个函数对象。如下所示：当用户请求/check的时候，会调用"),n("code",[s._v("filter.Handle(Check)")]),s._v("返回的函数对象，然后调用Auth拦截器函数，再调用Check这个handler")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('filter := common.NewFilter()\n// 注册\nfilter.RegisterFilterUri("/check", Auth)  // 处理客户端的认证请求\n// 注册路由，传递函数调用\nhttp.HandleFunc("/check", filter.Handle(Check))  // Auth认证通过后，才能处理的业务逻辑Check函数\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h3",{attrs:{id:"二-gin框架中中间件的定义方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-gin框架中中间件的定义方式"}},[s._v("#")]),s._v(" (二) gin框架中中间件的定义方式")]),s._v(" "),n("ul",[n("li",[s._v("gin框架中间件的定义方式有两种，一种是调用Use()方法，注册全局的中间件，第二中是注册路由的同时加上局部中间件")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('第一种：\n\t// 应用jwt中间件, 限流中间件，对后面所有的handler都生效\n\tv1.Use(middlewares.JWTAuthMiddleware(), middlewares.RateLimitMiddleware(2*time.Second, 1))\n\tv1.GET("/community", controllers.CommunityHandler)\n\n\n第二种：\n\t// 注册路由的同时，注册中间件，仅仅对UserProfile 这个handler有效\n\tv1.GET("/profile", middleware.Auth(), handler.UserProfile)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h2",{attrs:{id:"四-jwt-refresh-token认证"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四-jwt-refresh-token认证"}},[s._v("#")]),s._v(" 四：JWT + Refresh Token认证")]),s._v(" "),n("h3",{attrs:{id:"一-access-token和refresh-token"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-access-token和refresh-token"}},[s._v("#")]),s._v(" (一) Access Token和Refresh Token")]),s._v(" "),n("ul",[n("li",[s._v("JWT是一种Access Token，一般适用于用户的认证，避免用户反复填写用户名和密码登录系统。但是一般来说，JWT的过期时间比较短，一般在10分钟左右过期，因此，在会引入"),n("code",[s._v("Refresh Token")]),s._v("概念，基于JWT + Refresh Token一同实现系统用户的认证")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(751),alt:"Alt text"}})]),s._v(" "),n("ul",[n("li",[s._v("在 JWT 的实践中，引入 Refresh Token，将会话管理流程改进如下:")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\t\n1：客户端使用用户名密码进行认证\n服务端生成有效时间较短的 Access Token（例如 10 分钟），和有效时间较长的 Refresh Token（例如 7 天）\n\n2：客户端访问需要认证的接口时，携带 Access Token\n\t如果 Access Token 没有过期，服务端鉴权后返回给客户端需要的数据\n\t如果携带 Access Token 访问需要认证的接口时鉴权失败（例如返回 401 错误），则客户端使用 Refresh Token 向刷新接口申请新的 Access Token\n\t如果 Refresh Token 没有过期，服务端向客户端下发新的 Access Token，\n客户端使用新的 Access Token 访问需要认证的接口\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("ul",[n("li",[s._v("Refresh Token的存储方式")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\t将生成的 Refresh Token 以及过期时间存储在服务端的Redis数据库中，由于 Refresh Token 不会在客户端请求业务接口时验证，只有在申请新的 Access Token 时才会验证，所以将 Refresh Token 存储在Redis数据库中，不会对业务接口的响应时间造成影响，也不需要像 Session 一样一直保持在内存中以应对大量的请求\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("用户登出对Access Token和Refresh Token的操作")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("\t上述的架构，提供了服务端禁用用户 Token 的方式，当用户需要登出或禁用用户时，只需要将服务端的 Refresh Token 禁用或删除，用户就会在 Access Token 过期后，由于无法获取到新的 Access Token 而再也无法访问需要认证的接口\n\t这样的方式虽然会有一定的窗口期（取决于 Access Token 的失效时间），但是结合用户登出时，客户端删除 Access Token 的操作，基本上可以适应常规情况下对用户认证鉴权的精度要求\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h2",{attrs:{id:"五-oauth2-0和单点登录-原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#五-oauth2-0和单点登录-原理"}},[s._v("#")]),s._v(" 五：Oauth2.0和单点登录："),n("a",{attrs:{href:"https://www.jianshu.com/p/75edcc05acfd",target:"_blank",rel:"noopener noreferrer"}},[s._v("原理"),n("OutboundLink")],1)]),s._v(" "),n("h3",{attrs:{id:"一-为什么需要单点登录"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-为什么需要单点登录"}},[s._v("#")]),s._v(" (一) 为什么需要单点登录")]),s._v(" "),n("ul",[n("li",[s._v("运营人员在操作不同的系统时，需要多次登录，而且每个系统的账号都不一样，这对于运营人员很不方便，于是就想可不可以在一个系统登录，其他系统就不用登录了呢？"),n("code",[s._v("这就是单点登录要解决的问题")]),s._v("，"),n("strong",[s._v("单点登录简称：SSO")]),s._v("，在多个应用系统中，只需要登录一次，就可以访问其他相互信任的应用系统")])]),s._v(" "),n("h3",{attrs:{id:"二-实现单点登录的基本原理-下面的这个登录流程可能是错误的"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-实现单点登录的基本原理-下面的这个登录流程可能是错误的"}},[s._v("#")]),s._v(" (二) 实现单点登录的基本原理 (下面的这个登录流程可能是错误的)")]),s._v(" "),n("p",[n("img",{attrs:{src:a(752),alt:"Alt text"}})]),s._v(" "),n("ul",[n("li",[n("p",[s._v("1：用户访问app1系统，app1系统是需要登录的，但用户现在没有登录。")])]),s._v(" "),n("li",[n("p",[s._v("2：跳转到CAS server，即SSO登录系统，以后图中的CAS Server我们统一叫做SSO系统。 SSO系统也没有登录，弹出用户登录页")])]),s._v(" "),n("li",[n("p",[s._v("3：用户填写用户名、密码，SSO系统进行认证后，将登录状态写入SSO的session(这里用的是JWT+Refresh Token)，浏览器（Browser）中写入SSO域下的Cookie")])]),s._v(" "),n("li",[n("p",[s._v("4：SSO系统登录完成后会生成一个ST（Service Ticket），然后客户端跳转到app1系统，同时将ST作为参数传递给app1系统进行认证")])]),s._v(" "),n("li",[n("p",[s._v("5：app1系统拿到ST后，从后台向SSO发送请求，验证ST是否有效")])]),s._v(" "),n("li",[n("p",[s._v("6：验证通过后，返回JWT Token，app1将Token写入cookie")])]),s._v(" "),n("li",[n("p",[s._v("7：用户访问app2系统，app2系统没有登录，跳转到SSO")])]),s._v(" "),n("li",[n("p",[s._v("8：用户携带JWT Token登录SSO系统，认证通过后，SSO生成ST，客户端跳转到app2系统，并将ST作为参数传递给app2")])]),s._v(" "),n("li",[n("p",[s._v("9：app2拿到ST，后台访问SSO，验证ST是否有效")])]),s._v(" "),n("li",[n("p",[s._v("10：验证成功后，返回JWT Token，app2将Token写入cookie")])]),s._v(" "),n("li",[n("p",[s._v("11：一般情况下app系统的JWT Token只有10分钟的有效时间，过期之前可以直接登录app系统，如果过期了，返回401状态码，那么此时客户端需要再次请求SSO系统，带上SSO系统的JWT信息，如SSO系统的JWT信息过期了，再次返回401状态码，再带上SSO系统的Refresh Token，如果验证通过，给客户端下发新的JWT Token，系统再次通过JWT Token发送验证请求，请求通过后，获得新的ST，客户端在带上新的ST请求app系统，app系统再访问SSO，验证ST是否有效，验证成功后，返回JWT Token，app2将Token写入cookie，替换之前过期的JWT Token")])])]),s._v(" "),n("h3",{attrs:{id:"三-什么是oauth2-0"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三-什么是oauth2-0"}},[s._v("#")]),s._v(" (三) 什么是Oauth2.0")]),s._v(" "),n("ul",[n("li",[s._v("举例说明：例如知识星球有两种登录方式："),n("code",[s._v("微信登录")]),s._v("和"),n("code",[s._v("手机+验证码登录")])])]),s._v(" "),n("p",[n("img",{attrs:{src:a(753),alt:"Alt text"}})]),s._v(" "),n("ul",[n("li",[n("p",[s._v("这里的微信登录就是基于Oauth2认证的登录方式，基于微信扫码登录后，就可以在知识星球App中，获取到用户微信的头像和昵称信息，完成用户的登录，"),n("code",[s._v("用户再次打开一个新的页面访问知识星球，那么此时就不需要再次登录了，说明用户已经具有Access Token，可以登录知识星球了")])])]),s._v(" "),n("li",[n("p",[s._v("OAuth2.0 的核心就是向第三方应用颁发令牌，OAuth 2.0的运行流程如下图")])])]),s._v(" "),n("p",[n("img",{attrs:{src:a(754),alt:"Alt text"}})]),s._v(" "),n("ul",[n("li",[s._v("客户端(知识星球)必须得到用户的授权（authorization grant），才能申请令牌，获得令牌（access token），OAuth 2.0有四种授权流程")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("1：授权码模式（authorization code）\n\t用户登录授权，先获取code，用code在获取token令牌\n\t\n2：简化模式（implicit）\n\t用户登录授权，直接获取token\n\t\n3：密码模式（resource owner password credentials）\n\t用户提供用户名、密码给客户端、客户端直接用用户名密码获取token\n\t\n4：客户端模式（client credentials）\n\t验证客户端，直接获取token\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("ul",[n("li",[n("p",[n("a",{attrs:{href:"https://www.jianshu.com/p/8f878e5537da",target:"_blank",rel:"noopener noreferrer"}},[s._v("Oauth2.0原理"),n("OutboundLink")],1)])]),s._v(" "),n("li",[n("p",[n("a",{attrs:{href:"https://github.com/llaoj/oauth2",target:"_blank",rel:"noopener noreferrer"}},[s._v("四种模式的实现代码"),n("OutboundLink")],1)])]),s._v(" "),n("li",[n("p",[s._v("注意："),n("code",[s._v("不管哪一种授权方式，第三方应用申请令牌之前，都必须先到系统备案，说明自己的身份，然后会拿到两个身份识别码：客户端 ID（client ID）和客户端密钥（client secret）")]),s._v("，这是为了防止令牌被滥用，没有备案过的第三方应用，是不会拿到令牌的")])])]),s._v(" "),n("h3",{attrs:{id:"四-授权码模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四-授权码模式"}},[s._v("#")]),s._v(" (四) 授权码模式")]),s._v(" "),n("ul",[n("li",[s._v("授权码模式最常用，安全性也最高，A应用带上授权码向SSO系统请求令牌Token，令牌存储在SSO系统，下面是授权码模式的流程")])]),s._v(" "),n("p",[n("img",{attrs:{src:a(755),alt:"Alt text"}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('1：用户访问A应用，此时用户并没有登录A应用\n\n2：A应用返回带有登录链接的页面给用户\n\n3：用户点击链接登录SSO服务，使用账户密码或者扫码的方式，登录SSO服务(这里的response_type为code)\nGET：http://sso.com:9096/authorize?client_id=app1&response_type=code&scope=read&state=xyz&redirect_uri=http://app1.com:9093/cb\n\n4：SSO服务给用户返回302临时重定向链接，且带上code授权码\n302临时重定向：http://app1.com:9093/cb?code=XUNKO4OPPROWAPFKEWNZWA&state=xyz\n\n5：用户再请求A应用，带上code授权码\nGET：http://app1.com:9093/cb?code=XUNKO4OPPROWAPFKEWNZWA&state=xyz\n\n6：A应用带上用户的上传的code授权码，请求SSO服务，获取token令牌\nPOST：http://sso.com:9096/token?\nDATA：client_id=app1，client_secret=secret1，grant_type=authorization_code，code=XUNKO4OPPROWAPFKEWNZWA，redirect_uri=http://app1.com:9093/cb\n\n7：SSO服务验证code授权码，给A应用返回token令牌和用户信息\n{\n    "access_token": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiIyMjIyMjIiLCJleHAiOjE1ODU3MTU1NTksInN1YiI6InRlc3QifQ.ZMgIDQMW7FGxbF1V8zWOmEkmB7aLH1suGYjhDdrT7aCYMEudWUoiCkWHSvBmJahGm0RDXa3IyDoGFxeMfzlDNQ",\n    "expires_in": 7200,\n    "refresh_token": "JG7_WGLWXUOW2KV2VLJKSG",\n    "scope": "read",\n    "token_type": "Bearer",\n    "uid": 100101,\n\t"info": {用户昵称、用户头像地址等}\n}\n\n8：A应用再将token令牌和用户信息返回给用户\n\n9：那么用户再次请求App1，那么会带上access_token(jwt)\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br")])]),n("h3",{attrs:{id:"五-隐藏模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#五-隐藏模式"}},[s._v("#")]),s._v(" (五) 隐藏模式")]),s._v(" "),n("ul",[n("li",[s._v("隐藏模式适用于只有纯前端应用，没有后端")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("1：用户访问A应用，此时用户并没有登录A应用\n\n2：A应用返回带有登录链接的页面给用户\n\n3：用户点击链接登录SSO服务，使用账户密码或者扫码的方式，登录SSO服务(这里的response_type为token)\nGET：http://sso.com:9096/authorize?client_id=app1&response_type=token&scope=read&state=xyz&redirect_uri=http://app1.com:9093/cb\n\n4：SSO服务给用户返回302临时重定向链接，且带上token令牌\n302：https://a.com/callback#token=token&state=xyz\n\n5：用户拿到token，直接请求A应用\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h3",{attrs:{id:"六-密码模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#六-密码模式"}},[s._v("#")]),s._v(" (六) 密码模式")]),s._v(" "),n("ul",[n("li",[s._v("密码模式需要用户告诉A应用，用户在SSO服务中的用户名和密码，那么A应用就使用用户的用户名和密码向SSO应用申请令牌，"),n("code",[s._v("这种方式的风险比较大，只适用于其他方式都不可用的情况下")])])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("1：用户访问A应用，此时用户并没有登录A应用\n\n2：A应用返回带有登录链接的页面给用户，让用户上传用户名和密码\n\n3：A应用获取到用户上传的用户名和密码后，请求SSO服务获取token\nPOST：http://sso.com:9096/token?\nDATA：client_id=app1，client_secret=secret1，grant_type=password，username=USERNAME，password=PASSWORD，redirect_uri=http://app1.com:9093/cb\n\n4：SSO服务验证用户名和密码后，给A应用返回token令牌和用户信息\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h3",{attrs:{id:"七-凭证模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#七-凭证模式"}},[s._v("#")]),s._v(" (七) 凭证模式")]),s._v(" "),n("ul",[n("li",[s._v("凭证模式适用于没有前端应用的情况下，就是在命令行模式下请求令牌，这种令牌是针对A应用的，也即是授权A应用访问SSO服务，不是授权用户访问A应用，可能多个用户共享同一个令牌")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('1：A 应用在命令行向SSO服务发出请求发出令牌请求\nPOST：https://sso.com/token\nDATA：grant_type=client_credentials，client_id=app1，client_secret=secret1\n\n\n2：SSO应用验证通过后，直接返回令牌\n\n3：使用令牌，获取SSO的数据\ncurl -H "Authorization: Bearer ACCESS_TOKEN" "https://sso.com"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])])])}),[],!1,null,null,null);e.default=t.exports},751:function(s,e,a){s.exports=a.p+"assets/img/2021-10-286.01.48.101954eb.png"},752:function(s,e,a){s.exports=a.p+"assets/img/2021-10-2910.56.55.10b9aa3e.png"},753:function(s,e,a){s.exports=a.p+"assets/img/2021-10-291.57.57.44a88c34.png"},754:function(s,e,a){s.exports=a.p+"assets/img/2021-10-292.05.44.7da6bee8.png"},755:function(s,e,a){s.exports=a.p+"assets/img/2021-10-301.41.11.95a599d3.png"}}]);