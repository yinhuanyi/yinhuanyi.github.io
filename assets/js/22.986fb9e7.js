(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{1361:function(s,e,n){s.exports=n.p+"assets/img/2019-10-016.48.03.54c91cb7.png"},1362:function(s,e,n){s.exports=n.p+"assets/img/2019-10-017.12.55.8d46944e.png"},1363:function(s,e,n){s.exports=n.p+"assets/img/2019-10-019.12.23.67c7e6ab.png"},1364:function(s,e,n){s.exports=n.p+"assets/img/2019-10-0111.10.55.882b7b49.png"},1365:function(s,e,n){s.exports=n.p+"assets/img/2019-10-0111.12.53.1c9f10c3.png"},1366:function(s,e,n){s.exports=n.p+"assets/img/2019-10-0212.58.07.e95cb970.png"},1367:function(s,e,n){s.exports=n.p+"assets/img/2019-10-024.59.37.83120d15.png"},1368:function(s,e,n){s.exports=n.p+"assets/img/2019-10-025.00.02.2f5f7513.png"},1369:function(s,e,n){s.exports=n.p+"assets/img/2019-10-025.00.10.473f4817.png"},1370:function(s,e,n){s.exports=n.p+"assets/img/2019-10-025.09.02.7bb4c27c.png"},1371:function(s,e,n){s.exports=n.p+"assets/img/2019-10-025.14.50.5e355a75.png"},1372:function(s,e,n){s.exports=n.p+"assets/img/2019-10-025.22.30.d961a9da.png"},1373:function(s,e,n){s.exports=n.p+"assets/img/2019-10-025.27.26.f8c4ca22.png"},1374:function(s,e,n){s.exports=n.p+"assets/img/2019-10-025.30.04.c49d80f1.png"},1375:function(s,e,n){s.exports=n.p+"assets/img/2019-10-0312.12.16.6bffda88.png"},2450:function(s,e,n){"use strict";n.r(e);var a=n(9),r=Object(a.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"一-购物车list、create功能开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-购物车list、create功能开发"}},[s._v("#")]),s._v(" 一：购物车list、create功能开发")]),s._v(" "),a("ul",[a("li",[a("p",[s._v('首先在trade.django_rest_view.shop_cart.py中创建ShoppingCartSerializer，继承serializers.Serializer, 这里不继承ModelSerializer是因为在ShoppingCart这个Model中，将"user", "goods"设置成为了唯一联合索引，那么一个用户对一个商品添加记录只能有一次。如果这里继承的是ModelSerializer，那么用户post数据时候，假如一个用户对一个商品添加记录有多次，那么请求到达ShoppingCartViewSet接口，post方法调用的是CreateModelMixin中的create方法，在create方法中将post的数据拿到后传递给serializers，serializers会验证数据构建写入数据表的数据模型，验证的时候会发现user和goods是联合唯一索引，不能够重复添加，因此就会报错，那么就不会执行perform_create方法将数据模型写入到数据表。因此，这里不适合使用ModelSerializer，而是使用Serializer，在构建数据模型的时候，不在数据表中检查数据合法性，通过重写Serializer中未实现的create方法手动将数据写入到数据表中。在ShoppingCartSerializer中首先对字段进行合法行验证，验证通过后会调用重写的create方法，在create方法中先获取字段，再查看当前user和goods的唯一索引字段是否已经存在，如果存在更新记录的nums字段值,写入到数据表，如果不存在直接写入数据表。ShoppingCartSerializer如下')])]),s._v(" "),a("li",[a("p",[s._v("这里还需要说明的是goods字段使用了PrimaryKeyRelatedField，因为这次继承的是serializers.Serializer, 为了保证拿到的字段是一个goods的实例模型，而不是一个id。但是list或create操作返回的时候，依然是id，因为goods的实例模型没有被序列化")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from rest_framework import serializers\nfrom ..models import ShoppingCart\nfrom goods.models import Goods\n\n\nclass ShoppingCartSerializer(serializers.Serializer):\n\n    # 首先对字段验证\n    user = serializers.HiddenField(default=serializers.CurrentUserDefault())\n    nums = serializers.IntegerField(required=True, min_value=1, error_messages={\"min_value\": \"商品数量不能小于1\", \"required\": \"必填字段\"}, label='商品数量')\n    # 这个外键是直接在字段上进行扩充的，之前都创建一个新的serializers类，使用一个新字段指向这个序列化类，实现外键的信息序列化\n    goods = serializers.PrimaryKeyRelatedField(queryset=Goods.objects.all(), required=True, label='商品')\n\n\n    # 由于继承的是Serializer，因此需要手动重写create方法。如果是继承的ModelSerializer, 就不需要，因为在ModelSerializer中已经重写了create方法\n    def create(self, validated_data):\n        # 1： 先获取需要写入到数据表的数据\n        # 在Serializer中的HiddenField字段是存放在self.context['request']中，如果是ModelSerializer，存放的是self.request中\n        user = self.context['request'].user\n        nums = validated_data['nums']\n        goods = validated_data['goods']\n\n        # 2： 查看当前user和goods的唯一索引字段是否已经存在\n        queryset = ShoppingCart.objects.filter(user=user, goods=goods.id)\n        # 如果存在更新记录的nums字段值,在吸入到数据表\n        if queryset:\n            # 必须取第一条，如果是取最后一条，会报Negative indexing is not supported\n            record = queryset[0]\n            record.nums += nums\n            record.save()\n\n        # 如果不存在直接写入数据表\n        else:\n            record = ShoppingCart.objects.create(**validated_data)\n        return record\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br")])]),a("ul",[a("li",[s._v("创建trade.django_rest_view.shop_cart.py模块，创建ShoppingCartViewSet接口")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from rest_framework import  viewsets\nfrom ..models import ShoppingCart\nfrom rest_framework_jwt.authentication import JSONWebTokenAuthentication\nfrom rest_framework.authentication import SessionAuthentication\nfrom rest_framework.permissions import IsAuthenticated\nfrom utils.permissions import IsOwnerOrReadOnly\nfrom ..serializers import ShoppingCartSerializer\n\nclass ShoppingCartViewSet(viewsets.ModelViewSet):\n\n    queryset = ShoppingCart.objects.all()\n    serializer_class = ShoppingCartSerializer\n    # 有了IsOwnerOrReadOnly，当用户删除的时候，就会获取其权限\n    permission_classes = (IsAuthenticated, IsOwnerOrReadOnly)\n    # 局部使用JWT的token认证，不用在全局都是用token认证\n    authentication_classes = (JSONWebTokenAuthentication, SessionAuthentication)\n\n    def get_queryset(self):\n        return ShoppingCart.objects.filter(user=self.request.user)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("ul",[a("li",[s._v("在urls.py文件中注册")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 购物车功能\nrouter.register(r'shopcarts', ShoppingCartViewSet, base_name='shopcarts')\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("DRF 显示如下")])]),s._v(" "),a("p",[a("img",{attrs:{src:n(1361),alt:"Alt text"}})]),s._v(" "),a("h3",{attrs:{id:"二-购物车update、destroy功能开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-购物车update、destroy功能开发"}},[s._v("#")]),s._v(" 二：购物车update、destroy功能开发")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("前端能够获取到goods字段，因此，对于update和destroy方法，需要重新设置查找字段，lookup_field = 'goods_id'。用户的更新操作需要在ShoppingCartSerializer重写update方法")])]),s._v(" "),a("li",[a("p",[s._v("在ShoppingCartViewSet接口中添加")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    # 这对于update、delete操作，对查找字段id替换为goods_id\n    lookup_field = 'goods_id'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("在ShoppingCartSerializer中重写update方法")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    def update(self, instance, validated_data):\n        '''\n\n        :param instance: 需要跟新的数据表模型\n        :param validated_data: 验证通过的字段模型\n        :return: put方法返回更新后的数据表模型\n        '''\n        instance.nums = validated_data['nums']\n        instance.save()\n        return instance\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("ul",[a("li",[s._v("那么客户端使用put或delete方法的时候，只需要指定goods_id即可")])]),s._v(" "),a("p",[a("img",{attrs:{src:n(1362),alt:"Alt text"}})]),s._v(" "),a("h3",{attrs:{id:"三-vue中购物车展示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-vue中购物车展示"}},[s._v("#")]),s._v(" 三：Vue中购物车展示")]),s._v(" "),a("ul",[a("li",[s._v("由于goods字段返回的数据依然是id，不是数据模型，但是在vue中需要填充商品的详情信息，因此这里又需要序列化一个类，创建一个ShoppingCartDetailSerializer序列化类，当action=list的时候使用这个序列化类")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 如果是list操作使用这个serializers\nclass ShoppingCartDetailSerializer(serializers.ModelSerializer):\n    goods = GoodsSerializer()\n    class Meta:\n        model = ShoppingCart\n        fields = '__all__'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("ul",[a("li",[s._v("在ShoppingCartViewSet接口中重写get_serializer_class方法")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    def get_serializer_class(self):\n        return ShoppingCartDetailSerializer if self.action == 'list' else ShoppingCartSerializer\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("请求"),a("code",[s._v("http://localhost:8000/shopcarts/")])])]),s._v(" "),a("p",[a("img",{attrs:{src:n(1363),alt:"Alt text"}})]),s._v(" "),a("h3",{attrs:{id:"四-订单接口实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四-订单接口实现"}},[s._v("#")]),s._v(" 四：订单接口实现")]),s._v(" "),a("ul",[a("li",[s._v("创建trade.django_rest_view.user_order.py模块，创建UserOrderViewSet接口，接口具有list, create , destroy操作。重写get_queryset方法和perform_create方法，perform_create方法是CreateModelMixin中create方法中被调用的方法，作用是将serializer中验证通过的数据模型写入到数据表中，这里重写perform_create方法的目的是获取用户订单记录实例，并且获取当前用户购物车记录，遍历这些记录，创建订单商品数据模型，将购物车记录字段赋值给订单商品数据模型字段，将订单商品数据模型写入数据表，同时清除购物车，也就是删除购物车记录。UserOrderViewSet如下")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from rest_framework import mixins, viewsets\nfrom rest_framework_jwt.authentication import JSONWebTokenAuthentication\nfrom rest_framework.authentication import SessionAuthentication\nfrom rest_framework.permissions import IsAuthenticated\nfrom utils.permissions import IsOwnerOrReadOnly\nfrom ..models import ShoppingCart\nfrom ..serializers import UserOrderSerializer\nfrom ..models import OrderInfo, OrderGoods\n\n\nclass UserOrderViewSet(mixins.ListModelMixin,\n                       mixins.CreateModelMixin,\n                       mixins.DestroyModelMixin,\n                       viewsets.GenericViewSet):\n\n    queryset = OrderInfo.objects.all()\n    serializer_class =UserOrderSerializer\n    # 有了IsOwnerOrReadOnly，当用户删除的时候，就会获取其权限\n    permission_classes = (IsAuthenticated, IsOwnerOrReadOnly)\n    # 局部使用JWT的token认证，不用在全局都是用token认证\n    authentication_classes = (JSONWebTokenAuthentication, SessionAuthentication)\n\n    def get_queryset(self):\n        return OrderInfo.objects.filter(user=self.request.user)\n\n    # 用户post提交请求的时候，需要创建订单, 同时清空购物车\n    def perform_create(self, serializer):\n\n        # 生成订单，将订单信息写入数据表\n        order = serializer.save()\n\n        # 获取当前用户的购物车记录，将记录添加到OrderGoods数据表中\n        shopcart_records = ShoppingCart.objects.filter(user=self.request.user)\n        for shopcart_record in shopcart_records:\n            # 创建订单商品数据模型，写入数据库\n            order_goods_record = OrderGoods()\n            order_goods_record.goods = shopcart_record.goods\n            order_goods_record.goods_num = shopcart_record.nums\n            order_goods_record.order = order\n            order_goods_record.save()\n\n            # 删除购物车的记录\n            shopcart_record.delete()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br")])]),a("ul",[a("li",[s._v("创建trade.serializers.user_order.py模块，创建UserOrderSerializer，在这个序列化类中需要重写validate方法，用户post的字段验证完毕后，会调用validate方法，由于订单号order_sn字段需要服务器端生成，因此重写validate方法的作用是将服务器端生成的order_sn字段的值赋值给将要写入数据表的数据模型。 UserOrderSerializer如下")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import time\nfrom random import Random\nfrom rest_framework import serializers\nfrom ..models import OrderInfo\n\nclass UserOrderSerializer(serializers.ModelSerializer):\n\n    user = serializers.HiddenField(default=serializers.CurrentUserDefault())\n    pay_status = serializers.CharField(read_only=True)\n    trade_no = serializers.CharField(read_only=True)\n    order_sn = serializers.CharField(read_only=True)\n    pay_time = serializers.DateTimeField(read_only=True)\n    add_time = serializers.DateTimeField(read_only=True)\n\n\n    # 生成订单号\n    @property\n    def generate_order_sn(self):\n        # 当前时间 + userid + 随机数\n        return '{timestamp}{userid}{randnum}'.format(timestamp = time.strftime('%Y%m%d%H%M%S'), userid=self.context['request'].user, randnum=Random().randint(10,99))\n\n    # 当CreateModelMixin中create方法执行self.perform_create(serializer)之前会调用validate方法\n    def validate(self, attrs):\n        attrs['order_sn'] = self.generate_order_sn\n        return attrs\n\n\n    class Meta:\n        model = OrderInfo\n        fields = '__all__'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br")])]),a("ul",[a("li",[s._v("在urls.py文件中添加路由")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 用户订单功能\nrouter.register(r'orders', UserOrderViewSet, base_name='orders')\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("post方法提交订单 ，"),a("code",[s._v("http://localhost:8000/orders/")])])]),s._v(" "),a("p",[a("img",{attrs:{src:n(1364),alt:"Alt text"}})]),s._v(" "),a("ul",[a("li",[s._v("delete方法，删除订单，"),a("code",[s._v("http://localhost:8000/orders/2")]),s._v("， 当前用户的订单删除了，购物车记录也会全部删除，由于OrderGoods这个Model的order字段是外键，指向OrderInfo，如果订单被删除，那么这个外键也就没有地方取值了，根据Django的外键默认的一致性检查，OrderGoods中指向OrderInfo相关的记录也会被删除")])]),s._v(" "),a("p",[a("img",{attrs:{src:n(1365),alt:"Alt text"}})]),s._v(" "),a("ul",[a("li",[s._v("订单详情接口retrieve操作，在DRF API中，请求某个订单，例如: "),a("code",[s._v("http://localhost:8000/orders/5/")]),s._v("应该需要返回当前订单的详情字段，而且需要返回当前订单在订单商品中的记录，订单商品中也需要返回商品的信息。因此需要重新写一个retrieve操作的字段序列化的类。在trade.serializers.user_order.py模块中，创建UserOrderDetailSerializer，在这个序列化类中加入一个goods字段，这个字段有意思了，这个字段执行了OrderGoodsSerializer序列化类，在这里你会发现OrderGoods这个Model中order字段这个外键指向OrderInfo，且有一个"),a("code",[s._v('related_name="goods"')]),s._v("，因此本来是使用从表的字段序列化主表的信息，但是这里反过来了，在从表OrderGoods中的"),a("code",[s._v('related_name="goods"')]),s._v("，可以基于主表的查询从表的引用记录，这种反向查询必须保证主表序列化的字段名与related_name的名称一致。在OrderGoodsSerializer中，关联的Model是OrderGoods，因此基于goods这个外键可以序列化单个goods的记录。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# OrderGoods序列化类\nclass OrderGoodsSerializer(serializers.ModelSerializer):\n    goods = GoodsSerializer(many=False)\n    class Meta:\n        model = OrderGoods\n        fields = '__all__'\n\n# OrderInfo的序列化类\nclass UserOrderDetailSerializer(serializers.ModelSerializer):\n    # 这个goods是related_name，\n    goods = OrderGoodsSerializer(many=True)\n\n    class Meta:\n        model = OrderInfo\n        fields = '__all__'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("ul",[a("li",[s._v("基于创建的UserOrderDetailSerializer序列化类，在UserOrderViewSet接口中，需要继承RetrieveModelMixin，且重写get_serializer_class，如果action=retrieve的时候，使用的是UserOrderDetailSerializer序列化类,。UserOrderViewSet接口如下")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from rest_framework import mixins, viewsets\nfrom rest_framework_jwt.authentication import JSONWebTokenAuthentication\nfrom rest_framework.authentication import SessionAuthentication\nfrom rest_framework.permissions import IsAuthenticated\nfrom utils.permissions import IsOwnerOrReadOnly\nfrom ..models import ShoppingCart\nfrom ..serializers import UserOrderSerializer, UserOrderDetailSerializer\nfrom ..models import OrderInfo, OrderGoods\n\n\nclass UserOrderViewSet(mixins.ListModelMixin,\n                       mixins.CreateModelMixin,\n                       mixins.DestroyModelMixin,\n                       mixins.RetrieveModelMixin,\n                       viewsets.GenericViewSet):\n\n    queryset = OrderInfo.objects.all()\n    serializer_class = UserOrderSerializer\n    # 有了IsOwnerOrReadOnly，当用户删除的时候，就会获取其权限\n    permission_classes = (IsAuthenticated, IsOwnerOrReadOnly)\n    # 局部使用JWT的token认证，不用在全局都是用token认证\n    authentication_classes = (JSONWebTokenAuthentication, SessionAuthentication)\n\n    def get_queryset(self):\n        return OrderInfo.objects.filter(user=self.request.user)\n\n    # 用户post提交请求的时候，需要创建订单, 同时清空购物车\n    def perform_create(self, serializer):\n\n        # 生成订单，将订单信息写入数据表\n        order = serializer.save()\n\n        # 获取当前用户的购物车记录，将记录添加到OrderGoods数据表中\n        shopcart_records = ShoppingCart.objects.filter(user=self.request.user)\n        for shopcart_record in shopcart_records:\n            # 创建订单商品数据模型，写入数据库\n            order_goods_record = OrderGoods()\n            order_goods_record.goods = shopcart_record.goods\n            order_goods_record.goods_num = shopcart_record.nums\n            order_goods_record.order = order\n            order_goods_record.save()\n\n            # 删除购物车的记录\n            shopcart_record.delete()\n\n    def get_serializer_class(self):\n        return UserOrderDetailSerializer if self.action == 'retrieve' else UserOrderSerializer\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br")])]),a("ul",[a("li",[s._v("当请求"),a("code",[s._v("http://localhost:8000/orders/5/")]),s._v("订单详情的时候，返回的数据如下")])]),s._v(" "),a("p",[a("img",{attrs:{src:n(1366),alt:"Alt text"}})]),s._v(" "),a("ul",[a("li",[s._v("解释说明一下"),a("code",[s._v("goods = OrderGoodsSerializer(many=True)")]),s._v("和"),a("code",[s._v("goods = GoodsSerializer(many=False)")]),s._v("中many参数的意义")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("\t因为在OrderInfo这个Model中goods指向的订单可能会有多条，所以使用many=True。在OrderGoods中goods指向的商品数据表，每个商品只有一条记录，因此many=False\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("最后修改Vue中的localhost")])]),s._v(" "),a("h3",{attrs:{id:"五-pycharm部署本地代码到开发服务器-远程运行服务器项目-且ide-debug调试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五-pycharm部署本地代码到开发服务器-远程运行服务器项目-且ide-debug调试"}},[s._v("#")]),s._v(" 五：pycharm部署本地代码到开发服务器，远程运行服务器项目，且IDE Debug调试")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("目前我们的代码运行在本地环境中，pycharm可以将本地代码同步到服务器端，使用Navicat将本地数据库同步到开发服务器的数据库中，在服务器端配置开发环境，数据库的连接，在pycharm中使用服务器端Python解释器运行项目")])]),s._v(" "),a("li",[a("p",[s._v("1：将代码部署到服务器某个目录下")])])]),s._v(" "),a("p",[a("img",{attrs:{src:n(1367),alt:"Alt text"}})]),s._v(" "),a("p",[a("img",{attrs:{src:n(1368),alt:"Alt text"}})]),s._v(" "),a("p",[a("img",{attrs:{src:n(1369),alt:"Alt text"}})]),s._v(" "),a("p",[a("img",{attrs:{src:n(1370),alt:"Alt text"}})]),s._v(" "),a("p",[a("img",{attrs:{src:n(1371),alt:"Alt text"}})]),s._v(" "),a("ul",[a("li",[s._v("2：在远端服务器配置Mariadb数据库，使用Navicat创建数据库，字符集选择utf8，排序规则选择utf8_general_ci，在Navicat将本地数据库Transfer到新数据库中，设置settings文件中的用户名和密码可以连接到Mariadb的数据库中。这里有个注意点，"),a("code",[s._v("grant all on Mxshop.* to 'mxshop'@'%' identified by '123456';")]),s._v("不包括localhost，因此还需要授权"),a("code",[s._v("grant all on Mxshop.* to 'mxshop'@'localhost' identified by '123456';")])])]),s._v(" "),a("p",[a("img",{attrs:{src:n(1372),alt:"Alt text"}})]),s._v(" "),a("ul",[a("li",[s._v("3：在pycharm中，设置Python的解释器为远程解释器")])]),s._v(" "),a("p",[a("img",{attrs:{src:n(1373),alt:"Alt text"}})]),s._v(" "),a("ul",[a("li",[s._v("4：配置远程Django在0.0.0.0 8000启动")])]),s._v(" "),a("p",[a("img",{attrs:{src:n(1374),alt:"Alt text"}})]),s._v(" "),a("ul",[a("li",[a("p",[s._v("debug模式启动Django，此时就可以远程调试代码了，由于设置了本地自动同步代码到remote端，因此本地修改了代码会自动同步到服务器端")])]),s._v(" "),a("li",[a("p",[s._v("需要将settings文件中ALLOWED_HOSTS变量修改")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("ALLOWED_HOSTS = ['*']\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"六-接入支付接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六-接入支付接口"}},[s._v("#")]),s._v(" 六：接入支付接口")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("在蚂蚁金服开放平台的沙箱环境中，填写公钥，公钥由蚂蚁金服开放平台提供的图形化工具生成，秘钥格式选择非java适用的格式")])]),s._v(" "),a("li",[a("p",[s._v("将生成的公钥和私钥拷贝到pycharm中的trade APP下的key目录, 修改名称。在应用公钥和应用秘钥中加入")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code")]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"})]),a("ul",[a("li",[s._v("将私钥和公钥的路径写在settings文件中, 类似全局常量，可以在任意模块中引用")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 9：配置alipay相关路径\nprivate_key_path = os.path.join(BASE_DIR, 'apps/trade/keys/private_2048.txt')\nali_public_key_path = os.path.join(BASE_DIR, 'apps/trade/keys/alipay.txt')\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("同时也需要将支付宝公钥也拷贝到keys目录中，在utils包中创建alipay.py模块")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('from datetime import datetime\nfrom Crypto.PublicKey import RSA\nfrom Crypto.Signature import PKCS1_v1_5\nfrom Crypto.Hash import SHA256\nfrom base64 import b64encode, b64decode\nfrom urllib.parse import quote_plus\nfrom urllib.parse import urlparse, parse_qs\nfrom urllib.request import urlopen\nfrom base64 import decodebytes, encodebytes\n\nimport json\n\n\nclass AliPay(object):\n    """\n    支付宝支付接口\n    """\n    def __init__(self, appid, app_notify_url, app_private_key_path,\n                 alipay_public_key_path, return_url, debug=False):\n        self.appid = appid\n        self.app_notify_url = app_notify_url\n        self.app_private_key_path = app_private_key_path\n        self.app_private_key = None\n        self.return_url = return_url\n        # 读取应用私钥和阿里公钥内容\n        with open(self.app_private_key_path) as fp:\n            # 读取应用私钥内容\n            self.app_private_key = RSA.importKey(fp.read())\n        self.alipay_public_key_path = alipay_public_key_path\n        with open(self.alipay_public_key_path) as fp:\n            self.alipay_public_key = RSA.import_key(fp.read())\n\n        #\n        if debug is True:\n            self.__gateway = "https://openapi.alipaydev.com/gateway.do"\n        else:\n            self.__gateway = "https://openapi.alipay.com/gateway.do"\n\n    def direct_pay(self, subject, out_trade_no, total_amount, return_url=None, **kwargs):\n        biz_content = {\n            "subject": subject,\n            "out_trade_no": out_trade_no,\n            "total_amount": total_amount,\n            "product_code": "FAST_INSTANT_TRADE_PAY",\n            # "qr_pay_mode":4\n        }\n\n        biz_content.update(kwargs)\n        data = self.build_body("alipay.trade.page.pay", biz_content, self.return_url)\n        return self.sign_data(data)\n\n    def build_body(self, method, biz_content, return_url=None):\n        data = {\n            "app_id": self.appid,\n            "method": method,\n            "charset": "utf-8",\n            "sign_type": "RSA2",\n            "timestamp": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),\n            "version": "1.0",\n            "biz_content": biz_content\n        }\n\n        if return_url is not None:\n            data["notify_url"] = self.app_notify_url\n            data["return_url"] = self.return_url\n\n        return data\n\n    def sign_data(self, data):\n        data.pop("sign", None)\n        # 排序后的字符串\n        unsigned_items = self.ordered_data(data)\n        unsigned_string = "&".join("{0}={1}".format(k, v) for k, v in unsigned_items)\n        sign = self.sign(unsigned_string.encode("utf-8"))\n        ordered_items = self.ordered_data(data)\n        quoted_string = "&".join("{0}={1}".format(k, quote_plus(v)) for k, v in ordered_items)\n\n        # 获得最终的订单信息字符串\n        signed_string = quoted_string + "&sign=" + quote_plus(sign)\n        return signed_string\n\n    def ordered_data(self, data):\n        complex_keys = []\n        for key, value in data.items():\n            if isinstance(value, dict):\n                complex_keys.append(key)\n\n        # 将字典类型的数据dump出来\n        for key in complex_keys:\n            data[key] = json.dumps(data[key], separators=(\',\', \':\'))\n\n        return sorted([(k, v) for k, v in data.items()])\n\n    def sign(self, unsigned_string):\n        # 开始计算签名\n        key = self.app_private_key\n        signer = PKCS1_v1_5.new(key)\n        signature = signer.sign(SHA256.new(unsigned_string))\n        # base64 编码，转换为unicode表示并移除回车\n        sign = encodebytes(signature).decode("utf8").replace("\\n", "")\n        return sign\n\n    def _verify(self, raw_content, signature):\n        # 开始计算签名\n        key = self.alipay_public_key\n        signer = PKCS1_v1_5.new(key)\n        digest = SHA256.new()\n        digest.update(raw_content.encode("utf8"))\n        if signer.verify(digest, decodebytes(signature.encode("utf8"))):\n            return True\n        return False\n\n    def verify(self, data, signature):\n        if "sign_type" in data:\n            sign_type = data.pop("sign_type")\n        # 排序后的字符串\n        unsigned_items = self.ordered_data(data)\n        message = "&".join(u"{}={}".format(k, v) for k, v in unsigned_items)\n        return self._verify(message, signature)\n\n\nif __name__ == "__main__":\n    return_url = \'http://47.92.87.172:8000/?total_amount=0.01&timestamp=2017-08-15+17%3A15%3A13&sign=jnnA1dGO2iu2ltMpxrF4MBKE20Akyn%2FLdYrFDkQ6ckY3Qz24P3DTxIvt%2BBTnR6nRk%2BPAiLjdS4sa%2BC9JomsdNGlrc2Flg6v6qtNzTWI%2FEM5WL0Ver9OqIJSTwamxT6dW9uYF5sc2Ivk1fHYvPuMfysd90lOAP%2FdwnCA12VoiHnflsLBAsdhJazbvquFP%2Bs1QWts29C2%2BXEtIlHxNgIgt3gHXpnYgsidHqfUYwZkasiDGAJt0EgkJ17Dzcljhzccb1oYPSbt%2FS5lnf9IMi%2BN0ZYo9%2FDa2HfvR6HG3WW1K%2FlJfdbLMBk4owomyu0sMY1l%2Fj0iTJniW%2BH4ftIfMOtADHA%3D%3D&trade_no=2017081521001004340200204114&sign_type=RSA2&auth_app_id=2016080600180695&charset=utf-8&seller_id=2088102170208070&method=alipay.trade.page.pay.return&app_id=2016080600180695&out_trade_no=201702021222&version=1.0\'\n\n    alipay = AliPay(\n        # 沙箱的appid\n        appid = "2016101200669671",\n        # 这里一定要改为线上服务器的地址\n        app_notify_url="http://projectsedus.com/",\n        # 应用私钥\n        app_private_key_path="../trade/keys/private_2048.txt",\n        # 支付宝公钥\n        alipay_public_key_path="../trade/keys/alipay.txt",  # 支付宝的公钥，验证支付宝回传消息使用，不是你自己的公钥,\n        # debug为True，适用沙箱接口\n        debug=True,  # 默认False,\n        # 这里一定要改为线上服务器的地址\n        return_url="http://47.92.87.172:8000/"\n    )\n\n    o = urlparse(return_url)\n    query = parse_qs(o.query)\n    processed_query = {}\n    ali_sign = query.pop("sign")[0]\n    for key, value in query.items():\n        processed_query[key] = value[0]\n    # print (alipay.verify(processed_query, ali_sign))\n\n    url = alipay.direct_pay(\n        subject="测试订单",\n        out_trade_no="201702021222",\n        total_amount=120\n    )\n    re_url = "https://openapi.alipaydev.com/gateway.do?{data}".format(data=url)\n    print(re_url)\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br"),a("span",{staticClass:"line-number"},[s._v("99")]),a("br"),a("span",{staticClass:"line-number"},[s._v("100")]),a("br"),a("span",{staticClass:"line-number"},[s._v("101")]),a("br"),a("span",{staticClass:"line-number"},[s._v("102")]),a("br"),a("span",{staticClass:"line-number"},[s._v("103")]),a("br"),a("span",{staticClass:"line-number"},[s._v("104")]),a("br"),a("span",{staticClass:"line-number"},[s._v("105")]),a("br"),a("span",{staticClass:"line-number"},[s._v("106")]),a("br"),a("span",{staticClass:"line-number"},[s._v("107")]),a("br"),a("span",{staticClass:"line-number"},[s._v("108")]),a("br"),a("span",{staticClass:"line-number"},[s._v("109")]),a("br"),a("span",{staticClass:"line-number"},[s._v("110")]),a("br"),a("span",{staticClass:"line-number"},[s._v("111")]),a("br"),a("span",{staticClass:"line-number"},[s._v("112")]),a("br"),a("span",{staticClass:"line-number"},[s._v("113")]),a("br"),a("span",{staticClass:"line-number"},[s._v("114")]),a("br"),a("span",{staticClass:"line-number"},[s._v("115")]),a("br"),a("span",{staticClass:"line-number"},[s._v("116")]),a("br"),a("span",{staticClass:"line-number"},[s._v("117")]),a("br"),a("span",{staticClass:"line-number"},[s._v("118")]),a("br"),a("span",{staticClass:"line-number"},[s._v("119")]),a("br"),a("span",{staticClass:"line-number"},[s._v("120")]),a("br"),a("span",{staticClass:"line-number"},[s._v("121")]),a("br"),a("span",{staticClass:"line-number"},[s._v("122")]),a("br"),a("span",{staticClass:"line-number"},[s._v("123")]),a("br"),a("span",{staticClass:"line-number"},[s._v("124")]),a("br"),a("span",{staticClass:"line-number"},[s._v("125")]),a("br"),a("span",{staticClass:"line-number"},[s._v("126")]),a("br"),a("span",{staticClass:"line-number"},[s._v("127")]),a("br"),a("span",{staticClass:"line-number"},[s._v("128")]),a("br"),a("span",{staticClass:"line-number"},[s._v("129")]),a("br"),a("span",{staticClass:"line-number"},[s._v("130")]),a("br"),a("span",{staticClass:"line-number"},[s._v("131")]),a("br"),a("span",{staticClass:"line-number"},[s._v("132")]),a("br"),a("span",{staticClass:"line-number"},[s._v("133")]),a("br"),a("span",{staticClass:"line-number"},[s._v("134")]),a("br"),a("span",{staticClass:"line-number"},[s._v("135")]),a("br"),a("span",{staticClass:"line-number"},[s._v("136")]),a("br"),a("span",{staticClass:"line-number"},[s._v("137")]),a("br"),a("span",{staticClass:"line-number"},[s._v("138")]),a("br"),a("span",{staticClass:"line-number"},[s._v("139")]),a("br"),a("span",{staticClass:"line-number"},[s._v("140")]),a("br"),a("span",{staticClass:"line-number"},[s._v("141")]),a("br"),a("span",{staticClass:"line-number"},[s._v("142")]),a("br"),a("span",{staticClass:"line-number"},[s._v("143")]),a("br"),a("span",{staticClass:"line-number"},[s._v("144")]),a("br"),a("span",{staticClass:"line-number"},[s._v("145")]),a("br"),a("span",{staticClass:"line-number"},[s._v("146")]),a("br"),a("span",{staticClass:"line-number"},[s._v("147")]),a("br"),a("span",{staticClass:"line-number"},[s._v("148")]),a("br"),a("span",{staticClass:"line-number"},[s._v("149")]),a("br"),a("span",{staticClass:"line-number"},[s._v("150")]),a("br"),a("span",{staticClass:"line-number"},[s._v("151")]),a("br"),a("span",{staticClass:"line-number"},[s._v("152")]),a("br"),a("span",{staticClass:"line-number"},[s._v("153")]),a("br"),a("span",{staticClass:"line-number"},[s._v("154")]),a("br")])]),a("ul",[a("li",[s._v("创建trade.django_rest_view.alipay.py模块，AliPayView接口，由于这个接口不涉及到CRUD操作，因此继承APIView，提供get请求和post请求，目的是处理支付成功后阿里后台回调的请求，给数据库中的订单字段赋值")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from datetime import datetime\nfrom rest_framework.views import APIView\nfrom utils.alipay import AliPay\nfrom Mxshop.settings import ali_public_key_path, private_key_path\nfrom ..models import OrderInfo\nfrom rest_framework.response import Response\n\nclass AliPayView(APIView):\n    def get(self, request):\n        processed_dict = {}\n        for key, value in request.GET.items():\n            processed_dict[key] = value\n        sign = processed_dict.pop('sign', None)\n\n        alipay = AliPay(\n            # 沙箱的appid\n            appid=\"2016101200669671\",\n            # 这里一定要改为线上服务器的地址\n            app_notify_url=\"http://线上服务器地址:8000/alipay/return\",\n            # 使用静态文件路径\n            app_private_key_path=private_key_path,\n            # 使用静态文件路径\n            alipay_public_key_path=ali_public_key_path,  # 支付宝的公钥，验证支付宝回传消息使用，不是你自己的公钥,\n            # debug为True，适用沙箱接口\n            debug=True,  # 默认False,\n            # 这里一定要改为线上服务器的地址\n            return_url=\"http://线上服务器地址:8000/alipay/return\"\n        )\n\n        # 验证支付状态\n        verify_result = alipay.verify(processed_dict, sign)\n\n        # 如果支付成功，获取订单信息\n        if verify_result:\n            order_sn = processed_dict.get('out_trade_no', None)\n            trade_no = processed_dict.get('trade_no', None)\n            trade_status = processed_dict.get('trade_status', None)\n\n            # 给订单信息的交易字段赋值，之前的交易信息为空的\n            orderInfo_records = OrderInfo.objects.filter(order_sn=order_sn)\n            for orderInfo_record in orderInfo_records:\n                orderInfo_record.pay_status = trade_status\n                orderInfo_record.trade_no = trade_no\n                orderInfo_record.pay_time = datetime.now()\n                orderInfo_record.save()\n            # 告诉支付宝，已经收到请求且处理了\n            return Response('success')\n\n    def post(self, request):\n        processed_dict = {}\n        for key, value in request.POST.items():\n            processed_dict[key] = value\n        sign = processed_dict.pop('sign', None)\n\n        alipay = AliPay(\n            # 沙箱的appid\n            appid=\"2016101200669671\",\n            # 这里一定要改为线上服务器的地址\n            app_notify_url=\"http://线上服务器地址:8000/\",\n            # 使用静态文件路径\n            app_private_key_path=private_key_path,\n            # 使用静态文件路径\n            alipay_public_key_path=ali_public_key_path,  # 支付宝的公钥，验证支付宝回传消息使用，不是你自己的公钥,\n            # debug为True，适用沙箱接口\n            debug=True,  # 默认False,\n            # 这里一定要改为线上服务器的地址\n            return_url=\"http://线上服务器地址:8000/\"\n        )\n\n        # 验证支付状态\n        verify_result = alipay.verify(processed_dict, sign)\n\n        # 如果支付成功，获取订单信息\n        if verify_result:\n            order_sn = processed_dict.get('out_trade_no', None)\n            trade_no = processed_dict.get('trade_no', None)\n            trade_status = processed_dict.get('trade_status', None)\n\n            # 给订单信息的交易字段赋值，之前的交易信息为空的\n            orderInfo_records = OrderInfo.objects.filter(order_sn=order_sn)\n            for orderInfo_record in orderInfo_records:\n                orderInfo_record.pay_status = trade_status\n                orderInfo_record.trade_no = trade_no\n                orderInfo_record.pay_time = datetime.now()\n                orderInfo_record.save()\n\n            # 告诉支付宝，已经收到请求且处理了\n            return Response('success')\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br")])]),a("ul",[a("li",[a("p",[s._v("由于前端需要让用户调整到支付宝生成的支付链接中，因此需要将这个链接在后台生成，然后返回给前端。需要给UserOrderViewSet接口的serializer类添加一个支付的URL。")])]),s._v(" "),a("li",[a("p",[s._v("在UserOrderSerializer和UserOrderDetailSerializer添加alipay_url字段和get_alipay_url函数, 指定返回到前端的字段中增加一个alipay_url字段")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('alipay_url = serializers.SerializerMethodField(read_only=True)\n    # 无论是list请求还是create请求都会调用这个方法\n    def get_alipay_url(self, obj):\n        \'\'\'\n        :param obj: 为serializer.data\n        :return:\n        \'\'\'\n        alipay = AliPay(\n            # 沙箱的appid\n            appid="2016101200669671",\n            # 这里一定要改为线上服务器的地址\n            app_notify_url="http://线上服务器地址:8000/alipay/return",\n            # 使用静态文件路径\n            app_private_key_path=private_key_path,\n            # 使用静态文件路径\n            alipay_public_key_path=ali_public_key_path,  # 支付宝的公钥，验证支付宝回传消息使用，不是你自己的公钥\n            # debug为True，适用沙箱接口\n            debug=True,  # 默认False,\n            # 这里一定要改为线上服务器的地址\n            return_url="http://线上服务器地址:8000/alipay/return"\n        )\n\n        url = alipay.direct_pay(\n            subject=obj.order_sn,\n            out_trade_no=obj.order_sn,\n            total_amount=obj.order_mount\n        )\n        re_url = "https://openapi.alipaydev.com/gateway.do?{data}".format(data=url)\n        return re_url\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])]),a("ul",[a("li",[s._v("在DRF中测试")])]),s._v(" "),a("p",[a("img",{attrs:{src:n(1375),alt:"Alt text"}})])])}),[],!1,null,null,null);e.default=r.exports}}]);