(window.webpackJsonp=window.webpackJsonp||[]).push([[408],{2311:function(s,n,a){"use strict";a.r(n);var e=a(9),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"描述器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#描述器"}},[s._v("#")]),s._v(" 描述器")]),s._v(" "),a("h3",{attrs:{id:"一-什么是描述器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-什么是描述器"}},[s._v("#")]),s._v(" (一) 什么是描述器")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Python中的描述器：\n    实现了__get__()，__set__(), __delete__()方法的类\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"二-描述器的定义划分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-描述器的定义划分"}},[s._v("#")]),s._v(" (二) 描述器的定义划分")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("如果一个类仅仅实现了__get__()方法，称为非数据描述器\n\n如果一个类实现了__get__()，__set__()方法，称为数据描述器\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"三-非数据描述器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-非数据描述器"}},[s._v("#")]),s._v(" (三) 非数据描述器")]),s._v(" "),a("ul",[a("li",[s._v("示例1")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class XKD1:\n    def __init__(self):\n        self.course = 'Python'\n        print('XKD1.__init__')\n\n\nclass XKD2:\n    x = XKD1()     # todo: XKD1()返回的是XKD1类的实例\n    def __init__(self):\n        print('XKD2.__init__')\n\nprint('*'*100)\nprint(XKD2.x.course) # 输出：Python\nprint('*'*100)\nobj = XKD2()  # 输出：XKD2.__init__\nprint('*'*100)\nprint(obj.x.course) # 输出：Python\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("ul",[a("li",[s._v("示例2：引入描述器")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class XKD1:\n    def __init__(self):\n        self.course = 'Python'\n        print('XKD1.__init__')\n\n    def __get__(self, instance, owner):\n        print('self={} instance={} owner={}'.format(self, instance, owner))\n\n\nclass XKD2:\n    x = XKD1()\n    def __init__(self):\n        print('XKD2.__init__')\n\nprint('*'*100)\nprint(XKD2.x.course) # XKD2.x会访问XKD1的实例，默认会调用__get__方法，但是__get__方法没有将实例返回，因此，XKD2.x.course会报错\nprint('*'*100)\nobj = XKD2() # 输出：XKD2.__init__\nprint('*'*100)\nprint(obj.x.course) # 一样的报错\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("ul",[a("li",[s._v("示例3：引入描述器")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class XKD1:\n    def __init__(self):\n        self.course = 'Python'\n        print('XKD1.__init__')\n\n    def __get__(self, instance, owner):\n        # 这里的self为XKD1的实例. instance为实例， 如果是类访问，那么instance为None. owner是调用者的类\n        print('self={} instance={} owner={}'.format(self, instance, owner))\n        # todo: 返回XKD1的实例self\n        return self\n\n\nclass XKD2:\n    x = XKD1()\n    def __init__(self):\n        print('XKD2.__init__')\n\nprint('*'*100)\nprint(XKD2.x.course) # self=<__main__.XKD1 object at 0x108c39b38> instance=None owner=<class '__main__.XKD2'>\nprint('*'*100)\nobj = XKD2()\nprint('*'*100)\nprint(obj.x.course)   # self=<__main__.XKD1 object at 0x108c39b38> instance=<__main__.XKD2 object at 0x108d09c18> owner=<class '__main__.XKD2'>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("ul",[a("li",[s._v("小结：XKD1是非数据描述器，"),a("code",[s._v("仅仅是实现了__get__方法")])])]),s._v(" "),a("h3",{attrs:{id:"四-数据描述器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四-数据描述器"}},[s._v("#")]),s._v(" (四) 数据描述器")]),s._v(" "),a("ul",[a("li",[s._v("示例1："),a("code",[s._v("当非数据描述器是实例的变量时，实例访问非数据描述器不会调用__get__方法，只是访问了描述器类的实例")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class XKD1:\n    def __init__(self):\n        self.course = 'Python'\n        print('XKD1.__init__')\n\n    def __get__(self, instance, owner):\n        # 这里的self为XKD1的实例. instance为实例， 如果是类访问，那么instance为None. owner是调用者的类\n        print('self={} instance={} owner={}'.format(self, instance, owner))\n        # todo: 返回XKD1的实例self\n        return self\n\n\nclass XKD2:\n    x = XKD1()\n    def __init__(self):\n        print('XKD2.__init__')\n        self.y = XKD1()   # 没有调用__get__方法\n\n\nprint('*'*100)\nprint(XKD2.x.course) # self=<__main__.XKD1 object at 0x108c39b38> instance=None owner=<class '__main__.XKD2'>\nprint('*'*100)\nobj = XKD2()\nprint('*'*100)\nprint(obj.y)   # 返回 <__main__.XKD1 object at 0x103b56cf8>\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("ul",[a("li",[s._v("示例2：数据描述器")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class XKD1:\n    def __init__(self):\n        self.course = 'Python'\n        print('XKD1.__init__')\n\n    def __get__(self, instance, owner):\n        print('self={} instance={} owner={}'.format(self, instance, owner))\n        return self\n\n    def __set__(self, instance, value):\n        print('self={} instance={} value={}'.format(self, instance, value))\n        self.course = value\n\n\nclass XKD2:\n    x = XKD1()\n    def __init__(self):\n        print('XKD2.__init__')\n        self.y = XKD1()   # 调用了__get__方法\n\n\nprint('*'*100)\nprint(XKD2.x.course)\nprint('*'*100)\nobj = XKD2()\nprint('*'*100)\nprint(obj.x)\nprint(obj.y) # 不会再次调用__get__方法，因为描述器只是初始化一次\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br")])]),a("ul",[a("li",[s._v("小结：当数据描述器是实例的变量时，"),a("code",[s._v("实例访问数据描述器会调用描述器的__get__方法")])])]),s._v(" "),a("h3",{attrs:{id:"五-非数据描述器和数据描述器的访问顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五-非数据描述器和数据描述器的访问顺序"}},[s._v("#")]),s._v(" (五) 非数据描述器和数据描述器的访问顺序")]),s._v(" "),a("ul",[a("li",[s._v("示例1：非数据描述器")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class XKD1:\n    def __init__(self):\n        self.course = 'Python'\n        print('XKD1.__init__')\n\n    def __get__(self, instance, owner):\n        print('self={} instance={} owner={}'.format(self, instance, owner))\n        return self\n\n\n\nclass XKD2:\n    x = XKD1()\n    def __init__(self):\n        print('XKD2.__init__')\n        self.x = 'XKD1'          # 实例访问的是自己的__dict__中的x属性\n\n\nprint('*'*100)\nprint(XKD2.x.course)\nprint('*'*100)\nobj = XKD2()\nprint('*'*100)\nprint(obj.x)  # 返回 'XKD1'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("ul",[a("li",[s._v("示例2：数据描述器")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class XKD1:\n    def __init__(self):\n        self.course = 'Python'\n        print('XKD1.__init__')\n\n    def __get__(self, instance, owner):\n        print('self={} instance={} owner={}'.format(self, instance, owner))\n        return self\n\n    def __set__(self, instance, value):\n        print('self={} instance={} value={}'.format(self, instance, value))\n        self.course = value\n\n\n\nclass XKD2:\n    x = XKD1()\n    def __init__(self):\n        print('XKD2.__init__')\n        self.x = 'XKD1'          # 赋值的是类属性x，也就是数据描述器，赋值会调用描述器的__set__方法\n\n\n\nprint('*'*100)\nprint(XKD2.x.course)\nprint('*'*100)\nobj = XKD2()\nprint('*'*100)\nprint(obj.x)\nprint('*'*100)\nprint(obj.__dict__)  # 实例的__dict__为空\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br")])]),a("ul",[a("li",[s._v("小结：事实上，实例属性的查找顺序并没有改变，"),a("code",[s._v("依然是实例的__dict__中的属性优先被访问，只是如果实例有属性是数据描述器的话，属性会被__dict__字典移除，")]),s._v("因此就会访问类的属性，造成了数据描述器优先访问的假象")])]),s._v(" "),a("h3",{attrs:{id:"六-哪些案例是描述器实现的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六-哪些案例是描述器实现的"}},[s._v("#")]),s._v(" (六) 哪些案例是描述器实现的")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1: 属性装饰器： @property        数据描述器实现\n\n2：类方法装饰器：@classmethod     非数据描述器实现\n\n3：静态方法装饰器：@staticmethod  非数据描述器实现\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("h3",{attrs:{id:"七-描述器演练"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七-描述器演练"}},[s._v("#")]),s._v(" (七) 描述器演练")]),s._v(" "),a("ul",[a("li",[s._v("演练1")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class StaticMethod:\n    def __init__(self, fn):\n        self.fn = fn\n\n    def __get__(self, instance, owner):\n        print('self={} instance={} owner={}'.format(self, instance, owner))\n        return self.fn\n\n\n\nclass XKD:\n\n    @StaticMethod\n    def show():  # show = StaticMethod(show)  , 此时的show方法，已经是StaticMethod类的实例\n        print('静态方法实现')\n\nXKD.show()\nXKD().show()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("ul",[a("li",[a("p",[s._v("小结："),a("code",[s._v("StaticMethod实现了一个类装饰器，show方法被装饰成为了StaticMethod类的实例，可以看做一个类变量，因此XKD类和XKD的实例都可以访问这个类变量，因此就访问到了描述器的实例，那么就会调用__get__方法，返回self.fn，也就是原生的show方法对象，最后调用这个show方法对象")])])]),s._v(" "),a("li",[a("p",[s._v("演练2")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("from functools import partial\n\nclass ClassMethod:\n\n    def __init__(self, fn):\n        self.fn = fn\n\n    def __get__(self, instance, owner):\n        print('self={} instance={} owner={}'.format(self, instance, owner))\n        return partial(self.fn, owner)\n\nclass XKD:\n\n    @ClassMethod\n    def show(cls):    # show = ClassMethod(show)\n        print('类方法实现')\n\n\nXKD.show()\nXKD().show()\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("ul",[a("li",[a("p",[s._v("小结：类方法的实现与静态方法类似，只是需要调用partial偏函数，将类提前作为参数传递")])]),s._v(" "),a("li",[a("p",[s._v("演练3")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class XKDDescriptor:\n    def __init__(self):\n        self.name = None\n\n    def __get__(self, instance, owner):\n        print('self={} instance={} owner={}'.format(self, instance, owner))\n        return self.name\n\n    def __set__(self, owner, name):\n        print('self={} owner={} name={}'.format(self, owner, name))\n        if type(name) is str:\n            self.name = name\n        else:\n            raise TypeError('{} 不是 str 类型'.format(self.name))\n\n\n    def __delete__(self, instance):\n        print('self={} instance={}'.format(self, instance))\n        del self.name\n\n\nclass Person:\n\n    name = XKDDescriptor()\n    def __init__(self, name):\n        self.name = name\n\n\nperson = Person('Robby')  # 调用 __set__方法\nprint(person.name)        # 调用__get__方法\ndel person.name           # 调用__delete__方法\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br")])]),a("h3",{attrs:{id:"八-属性装饰器property实现原理分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八-属性装饰器property实现原理分析"}},[s._v("#")]),s._v(" (八) 属性装饰器property实现原理分析")]),s._v(" "),a("ul",[a("li",[s._v("自实现Property")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class Property:\n    def __init__(self, fget, fset=None):\n        self.fget = fget\n        self.fset = fset\n\n    def __get__(self, instance, owner):\n        if instance is not None:\n            return self.fget(instance)\n        return self\n\n    def __set__(self, instance, value):\n        if callable(self.fset):\n            self.fset(instance, value)\n        else:\n            raise AttributeError('{} is not callable'.format(self.fset.__name__))\n\n    def setter(self, fn):\n        self.fset = fn\n        return self\n\n\nclass XKD:\n\n    def __init__(self, data):\n        self.__data = data\n\n    @Property      # data = Property(data)\n    def data(self):\n        return self.__data\n\n    @data.setter   # data = data.setter(data)\n    def data(self, value):\n        self.__data = value\n\n\n\nxkd = XKD('Robby')\nprint(xkd.data)\nxkd.data = 'Petter'\nprint(xkd.data)\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br")])]),a("ul",[a("li",[s._v("原理分析")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("Property属性装饰器实现原理： 首先解释器从上往下执行，碰到@Property装饰器， data = Property(data)， 碰到@data.setter装饰器，data = data.setter(data) ，此时将A的方法改为了类属性\n\nclass XKD:\n    def __init__(self, data):\n        self.__data = data\n\n    data = self # 这是Property的实例，这里已经通过Property(data)， 将data的方法体赋值给了self.fget\n    data = self # 这是Property的实例，这里已经通过property.setter(data)，将data方法体赋值给了self.fset\n\n\nxkd = XKD('Robby') # 将robby赋值给了data\nxkd.data # 访问了描述器的实例，调用__get__方法，self.fget(instance) 代价于 调用原生的data(self) ，此时self是A的实例，返回的是self.__data的值\nxkd.data = 'Petter' # 给描述器赋值，调用了__set__方法，self.fset(instance, value) 代价于 调用了原生的data(self, value) ， 将 self.__data = 'Petter'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);