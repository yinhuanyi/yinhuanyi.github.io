(window.webpackJsonp=window.webpackJsonp||[]).push([[523],{2504:function(s,e,t){"use strict";t.r(e);var n=t(9),a=Object(n.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"一-gin框架初始化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-gin框架初始化"}},[s._v("#")]),s._v(" 一：Gin框架初始化")]),s._v(" "),t("h3",{attrs:{id:"一-net-http配置库配置ssl-实现https"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-net-http配置库配置ssl-实现https"}},[s._v("#")]),s._v(" （一）net/http配置库配置ssl，实现https")]),s._v(" "),t("ul",[t("li",[s._v("由于Gin框架实现了标准的http.Handler接口，且有自己的ServeMux实现方式，因此开发过程中，经常使用Gin框架作为Web开发。在Gin框架中如果需要实现HTTPS协议，需要加入一个中间件，以便处理https请求。Gin框架实现https协议的方法如下")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('1：申请一个对应域名的证书，包含pem和key两个文件\n\n2：当HttpServer监听端口的时候，设置证书文件\nsrv.ListenAndServeTLS(settings.Conf.SSLConfig.Pem, settings.Conf.SSLConfig.Key)\n\n3：在Gin的路由中，添加中间件\n// 中间件\nfunc TlsHandler(port int) gin.HandlerFunc {\n\treturn func(c *gin.Context) {\n\n\t\tsecureMiddleware := secure.New(secure.Options{\n\t\t\tSSLRedirect: true,\n\t\t\tSSLHost:     ":" + strconv.Itoa(port),\n\t\t})\n\n\t\t// 处理请求ssl协议请求\n\t\tif err := secureMiddleware.Process(c.Writer, c.Request); err != nil {\n\t\t\tzap.L().Error("secureMiddleware.Process", zap.Error(err))\n\t\t\treturn\n\t\t}\n\n\t\tc.Next()\n\t}\n}\n\n// 添加中间件\nr.Use(middlewares.TlsHandler(settings.Conf.Port))\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br")])]),t("h3",{attrs:{id:"二-解决跨域问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-解决跨域问题"}},[s._v("#")]),s._v(" （二）解决跨域问题")]),s._v(" "),t("ul",[t("li",[s._v("什么是跨域")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("当一个请求url的【协议】、【域名】、【端口】三者之间任意一个与当前页面url不同即为跨域\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("为什么会产生跨域")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("由于浏览器的同源策略限制，因此会产生跨域带来的问题\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("浏览器的同源限制，限制了什么")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("1：无法读取非同源网页的 Cookie、LocalStorage 和 IndexedDB(可以用二级域名、cookie多写的方式解决)\n\n2：无法接触非同源网页的 DOM\n\n3：无法向非同源地址发送 AJAX 请求(可以使用cors跨域资源分享解决)\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h3",{attrs:{id:"三-gin框架解决跨域问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三-gin框架解决跨域问题"}},[s._v("#")]),s._v(" （三）Gin框架解决跨域问题")]),s._v(" "),t("ul",[t("li",[s._v("当前用户点击登录会报错")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("Access to XMLHttpRequest at 'https://bbs.yhyblog.cn:10001/api/v1/user/login' from origin 'http://localhost:9527' has been blocked by CORS policy: Response to preflight request doesn't pass access control check: No 'Access-Control-Allow-Origin' header is present on the requested resource.\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("由于目前的需求是，JavaScript需要发起请求验证用户，浏览器当前的地址是"),t("code",[s._v("http://localhost:9527/")]),s._v("，但是页面的登录按钮会发起一个Ajax的post请求到"),t("code",[s._v("https://bbs.yhyblog.cn:10001")]),s._v("，那么这就是跨域，"),t("code",[s._v("虽然请求的数据能够回到浏览器，但是会被浏览器的同源策略限制")]),s._v("，因此可以在后台使用"),t("code",[s._v("cors跨域资源分享")]),s._v("的方式解决，告诉浏览器，这个请求资源是合法的。在路由上加一个cors中间件即可")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('r := gin.New()\n\nr.Use(middlewares.TlsHandler(settings.Conf.Port))\n// 在路由中加入cors中间件\nr.Use(middlewares.RequestLogger(), middlewares.GinRecovery(true), middlewares.Cors())\n\nv1 := r.Group("/api/v1")\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("ul",[t("li",[s._v("cors.go代码如下")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('func Cors() gin.HandlerFunc {\n\treturn func(context *gin.Context) {\n\n\t\tcontext.Header("Access-Control-Allow-Origin", "*")\n\t\tcontext.Header("Access-Control-Allow-Headers", "Content-Type,AccessToken,X-CSRF-Token, Authorization, Token, x-token")\n\t\tcontext.Header("Access-Control-Allow-Methods", "POST, GET, OPTIONS, DELETE, PATCH, PUT")\n\t\tcontext.Header("Access-Control-Expose-Headers", "Content-Length, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Content-Type")\n\t\tcontext.Header("Access-Control-Allow-Credentials", "true")\n\n\t\tmethod := context.Request.Method\n\t\tif method == "OPTIONS" {\n\t\t\tcontext.AbortWithStatus(http.StatusNoContent)\n\t\t}\n\t}\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("h2",{attrs:{id:"二-用户登录、用户info信息获取流程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-用户登录、用户info信息获取流程"}},[s._v("#")]),s._v(" 二：用户登录、用户Info信息获取流程")]),s._v(" "),t("h3",{attrs:{id:"一-用户登录逻辑梳理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-用户登录逻辑梳理"}},[s._v("#")]),s._v(" （一）用户登录逻辑梳理")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("用户访问任何地址，例如"),t("code",[s._v("http://localhost:9527/#/login?redirect=%2Fdashboard")]),s._v("。请求先会到达"),t("code",[s._v("路由守卫")]),s._v("，判断用户是否有token，如果没有token，是否请求地址在白名单中(白名单无需校验token)，如果不在白名单中，跳转到"),t("code",[s._v("/login页面")])])]),s._v(" "),t("li",[t("p",[s._v("请求再次到达"),t("code",[s._v("路由守卫")]),s._v("，发现/login请求是白名单，那么可以直接通过路由守卫。请求到达路由配置，匹配到/login对应的组件Login/index.vue，然后渲染组件")])]),s._v(" "),t("li",[t("p",[s._v("用户填写用户名和密码，点击登录，调用Vuex中的"),t("code",[s._v("user/login")]),s._v(" action 函数，在这个action 函数中，返回一个promise对象的resolve参数，promise主要是完成用户登录验证的Ajax异步网路请求，此时Ajax请求会到后台，后台验证用户名和密码后，返回一个token，在Axios对象的response中获取这个token，写入到Vuex和浏览器的cookie中。如果请求过程有异常，使用reject(error)将异常抛出。如果没有异常，JavaScript触发路由跳转到redirect或者/")])]),s._v(" "),t("li",[t("p",[s._v("请求会再次到达路由守卫，此时请求有token了，用户请求的是redirect对应的/dashboard，会判断是否Vuex中存储了用户的角色，当前没有存储角色，那么会调用Vuex中的"),t("code",[s._v("user/getInfo")]),s._v(" action函数，在这个action函数里面一样需发起Ajax请求到后台，获取用户的基本信息，获取到用户信息后，将用户的roles、name、avatar、introduction写入到Vuex中，如果没有异常，可以从resolve中获取到data数据，也就是用户的基本信息，从中获取到用户的角色。")])]),s._v(" "),t("li",[t("p",[s._v("获取到用户角色后，再次滴啊用Vuex中的permission/generateRoutes，获取到用户权限可以匹配到的asyncRoutes路由数组，然后将constantRoutes和asyncRoutes合并写入到Vuex中，通过resolve将asyncRoutes传递出来，路由守卫中获取到asyncRoutes，将其添加到router实例中，然后Javascrip将路由跳转到/dashboard")])]),s._v(" "),t("li",[t("p",[s._v("此时请求再次到达路由守卫，当前请求有token，Vuex中有角色，那么就直接匹配当前的router实例对应的路由表(constantRoutes+过滤后的asyncRoutes)，路由匹配到home组件，先会渲染Layout/index.vue组件，Layout/index.vue组件中的Sidebar组件渲染的时候，会根据router中的路由完成Sidebar的菜单动态渲染。在Layout/index.vue组件中有一个"),t("code",[s._v("<app-main />组件")]),s._v("，内部有"),t("code",[s._v('<router-view :key="key" />')]),s._v("组件，那么/dashboard的children会就渲染到这个入口中。在dashboard/index.vue组件中，会根据Vuex中存储的用户roles信息，判断渲染admin/index.vue组件，还是editor/index.vue组件，如果用户既不是admin，也不是editor角色，那么只渲染一个div")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);