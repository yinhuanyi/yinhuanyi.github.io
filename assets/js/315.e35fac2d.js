(window.webpackJsonp=window.webpackJsonp||[]).push([[315],{1750:function(s,t,n){s.exports=n.p+"assets/img/2019-09-041.17.03.a336a2a4.png"},2691:function(s,t,n){"use strict";n.r(t);var a=n(9),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"一-概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-概念"}},[s._v("#")]),s._v(" 一：概念")]),s._v(" "),a("h3",{attrs:{id:"一-概念-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-概念-2"}},[s._v("#")]),s._v(" (一)概念")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("架构图")])])]),s._v(" "),a("p",[a("img",{attrs:{src:n(1750),alt:"Alt text"}})]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1: Prometheus Server服务器端：\n\t以单进程和多线程的方式完成数据采集、接收、存储，使用的是时间序列的存储格式存储到磁盘，每两个小时时间间隔来分块block存储，每一个block又分为多个chunk文件，chunk文件是用来存储T-S数据，metadata数据和index数据，index文件是每个metric和label标签进行索引之后存储在chunk文件中，因此chunk是基本单位，index和metadata是子集。数据采集回来先存储到内存中，再基于WAL机制写入磁盘\n\n2：Service Discovery服务发现：以手动配置为例，也可以使用Consul自动注册，自动发现就不需要手动写配置文件了\n\tPrometheus也是从配置文件中定义监控项，在scrape_configs抓取配置中需要定义job，每一个job在配置文件的定义如下：\n\tscrape_configs：\n\t\t- job_name：\n\t\t\t# 15秒采一次数据\n\t\t\tscrape_interval：15s\n\t\t\t# 5s超时\n\t\t\tscrape_timeout：5s\n\t\t\t# 每次收集样本数据的限制，0为不限制\n\t\t\tsample_limit: 1000\n\t\t\t# 从目标获取数据的HTTP路径\n\t\t\tmetrics_path: /my_path\n\t\t\t# 配置用于请求的协议方案\n\t\t\tscheme: http\n\t\t\t# HTTP basic 认证信息\n\t\t\tbasic_auth\n\t\t\t\tusername: root\n\t\t\t    password: password\n\t\t\t# 静态配置\n\t\t\tstatic_configs:\n\t\t\t\t# 目标主机\n\t\t\t    - targets: ['node1:9090','node2:9091']\n\t\n\n3：采集客户端：pull和push\n\tpull: 需要客户端安装各种类型的exporters，exporters开始采集数据，exporters是一个http server, 可以对http请求作出响应返回数据，Prometheus通过请求exporters获取数据\n\tpush: 需要安装pushgateway，将监控数据组织成k/v形式的metric发送给pushgateway，再由pushgateway发送给Prometheus\n\n4：Alertmanager报警\n\t当Prometheus监控的数据到了阈值，将会把报警推送到Alertmanager，Alertmanager推送到其他的报警平台, 但是这个Alertmanager不好用\n\t\n5：Prometheus的数据类型\n\tGauage度量数据：这种数据就类似于CPU的使用率，在grafana上发过来什么数据就展示什么数据\n\tCounters计数器数据：这种数据是累加的数据，会不断增长的过程\n\tHistograms数据：这是数据是统计发布情况，比如最小值，最大值，中位数，百分比。这种类型的数据就可以统计出用户的响应时长的发布比率\n\t\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br")])]),a("h3",{attrs:{id:"二-prometheus特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-prometheus特性"}},[s._v("#")]),s._v(" (二)Prometheus特性")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1：基于时间序列数据模型\n\n2：基于K/V数据模型\n\n3：对采集的数据查询基于数学运算公式\n\n4：基于Http的pull和push方式传输数据\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);