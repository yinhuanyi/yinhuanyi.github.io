(window.webpackJsonp=window.webpackJsonp||[]).push([[535],{2526:function(e,s,a){"use strict";a.r(s);var t=a(9),n=Object(t.a)({},(function(){var e=this,s=e.$createElement,a=e._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"一-vue中v-if指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-vue中v-if指令"}},[e._v("#")]),e._v(" 一：Vue中v-if指令")]),e._v(" "),a("h3",{attrs:{id:"一-介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-介绍"}},[e._v("#")]),e._v(" （一）介绍")]),e._v(" "),a("ul",[a("li",[e._v("v-if 指令用于条件性地渲染一块内容，这块内容只会在指令的表达式返回 truthy 值的时候被渲染")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<h1 v-if="awesome">Vue is awesome!</h1>\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("ul",[a("li",[e._v("也可以用"),a("code",[e._v("v-else")]),e._v("添加一个“else 块”")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<h1 v-if="awesome">Vue is awesome!</h1>\n<h1 v-else>Oh no </h1>\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("h3",{attrs:{id:"二-在-template-元素上使用-v-if-条件渲染-实现一组元素是否被渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-在-template-元素上使用-v-if-条件渲染-实现一组元素是否被渲染"}},[e._v("#")]),e._v(" （二）在 template 元素上使用 v-if 条件渲染，实现一组元素是否被渲染")]),e._v(" "),a("ul",[a("li",[e._v("因为 v-if 是一个指令，所以必须将它添加到一个元素上。但是如果想切换多个元素呢？此时可以把一个"),a("code",[e._v("template 元素")]),e._v("当做不可见的包裹元素，并在上面使用 v-if。"),a("code",[e._v("最终的渲染结果将不包含 template 元素")]),e._v("，"),a("code",[e._v("template 标签")]),e._v("的作用是包裹一组元素")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<template v-if="ok">\n  <h1>Title</h1>\n  <p>Paragraph 1</p>\n  <p>Paragraph 2</p>\n</template>\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("h3",{attrs:{id:"三-v-else"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-v-else"}},[e._v("#")]),e._v(" （三）v-else")]),e._v(" "),a("ul",[a("li",[e._v("你可以使用 v-else 指令来表示 v-if 的else 块，v-else 元素必须紧跟在带 v-if 或者 v-else-if 的元素的后面，否则它将不会被识别")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<div v-if="Math.random() > 0.5">\n  Now you see me\n</div>\n\n<div v-else>\n  Now you don\'t\n</div>\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br")])]),a("h3",{attrs:{id:"四-v-else-if"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四-v-else-if"}},[e._v("#")]),e._v(" （四）v-else-if")]),e._v(" "),a("ul",[a("li",[e._v("v-else-if，顾名思义，充当 v-if 的else-if 块，可以连续使用")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<div v-if=\"type === 'A'\">\n  A\n</div>\n<div v-else-if=\"type === 'B'\">\n  B\n</div>\n<div v-else-if=\"type === 'C'\">\n  C\n</div>\n<div v-else>\n  Not A/B/C\n</div>\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br")])]),a("h3",{attrs:{id:"五-用-key-管理可复用的元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五-用-key-管理可复用的元素"}},[e._v("#")]),e._v(" （五）用 key 管理可复用的元素")]),e._v(" "),a("ul",[a("li",[e._v("Vue 会尽可能高效地渲染元素，通常会复用已有元素而不是从头开始渲染。这么做除了使 Vue 变得非常快之外，还有其它一些好处。例如，"),a("code",[e._v("如果你允许用户在不同的登录方式之间切换")]),e._v("：因为两个template使用了相同的元素，"),a("code",[e._v("<input>输入的内容")]),e._v(" 不会被替换掉，仅替换其placeholder")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<template v-if="loginType === \'username\'">\n  <label>Username</label>\n  <input placeholder="Enter your username">\n</template>\n\n<template v-else>\n  <label>Email</label>\n  <input placeholder="Enter your email address">\n</template>\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("ul",[a("li",[e._v("如果想切换的时候，重新渲染，包括用户填写input标签的内容，"),a("code",[e._v("那么可以给input标签添加一个key属性")]),e._v("，两个input标签有不同的key，那么说明是独立的，切换的时候会重新被渲染。"),a("code",[e._v("但是label标签会被高效的复用，因为label并没有添加key属性，那么默认就是非独立的")])])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<template v-if="loginType === \'username\'">\n  <label>Username</label>\n  <input placeholder="Enter your username" key="username-input">\n</template>\n\n<template v-else>\n  <label>Email</label>\n  <input placeholder="Enter your email address" key="email-input">\n</template>\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br")])]),a("h2",{attrs:{id:"二-vue中v-show指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-vue中v-show指令"}},[e._v("#")]),e._v(" 二：Vue中v-show指令")]),e._v(" "),a("h3",{attrs:{id:"一-v-show指令与v-if指令用法类似"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-v-show指令与v-if指令用法类似"}},[e._v("#")]),e._v(" （一）v-show指令与v-if指令用法类似")]),e._v(" "),a("ul",[a("li",[e._v("v-show指令用法")])]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('<h1 v-show="ok">Hello!</h1>\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("ul",[a("li",[e._v("v-show指令只是简单的切换元素的CSS display属性为none，但是元素会被保留到DOM中")])]),e._v(" "),a("h3",{attrs:{id:"二-v-if-vs-v-show"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-v-if-vs-v-show"}},[e._v("#")]),e._v(" （二）v-if VS v-show")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("v-show 不支持"),a("code",[e._v("template 元素")]),e._v("，也不支持"),a("code",[e._v("v-else")]),e._v("指令")])]),e._v(" "),a("li",[a("p",[e._v("v-if 是“真正”的条件渲染，因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建")])]),e._v(" "),a("li",[a("p",[e._v("v-if 也是惰性的：如果在初始渲染时条件为假，则什么也不做，直到条件第一次变为真时，才会开始渲染条件块")])]),e._v(" "),a("li",[a("p",[e._v("相比之下，v-show 就简单得多，不管初始条件是什么，元素总是会被渲染，并且只是简单地基于 CSS 进行切换")])]),e._v(" "),a("li",[a("p",[e._v("一般来说，v-if 有更高的切换开销，而 v-show 有更高的初始渲染开销。因此，如果需要非常频繁地切换，则使用 v-show 较好；如果在运行时条件很少改变，则使用 v-if 较好")])])]),e._v(" "),a("h3",{attrs:{id:"三-v-if-与-v-for-一起使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-v-if-与-v-for-一起使用"}},[e._v("#")]),e._v(" （三）v-if 与 v-for 一起使用")]),e._v(" "),a("ul",[a("li",[e._v("不推荐同时使用v-if 与 v-for，当 v-if 与 v-for 一起使用时，v-for 具有比 v-if 更高的优先级。请查阅列表渲染指南以获取详细信息")])])])}),[],!1,null,null,null);s.default=n.exports}}]);