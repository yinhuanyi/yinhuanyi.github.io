(window.webpackJsonp=window.webpackJsonp||[]).push([[343],{2182:function(s,a,n){"use strict";n.r(a);var t=n(9),r=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"一-数组声明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-数组声明"}},[s._v("#")]),s._v(" 一：数组声明")]),s._v(" "),n("h3",{attrs:{id:"一-基本定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-基本定义"}},[s._v("#")]),s._v(" (一)：基本定义")]),s._v(" "),n("ul",[n("li",[s._v("语法：数组的长度必须是常量，旦定义，长度不能变，[5]int和[10]int是不同的类型")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var 数组变量名 [元素数量]T\n\nvar a [3]int\nvar b [4]int\na = b //不可以这样做，因为此时a和b是不同的类型\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("h2",{attrs:{id:"二-数组的初始化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-数组的初始化"}},[s._v("#")]),s._v(" 二：数组的初始化")]),s._v(" "),n("h3",{attrs:{id:"一-方法一"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-方法一"}},[s._v("#")]),s._v(" (一)：方法一")]),s._v(" "),n("ul",[n("li",[s._v("固定长度")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('var testArray [3]int                        //数组会初始化为int类型的零值\nvar numArray = [3]int{1, 2}                 //使用指定的初始值完成初始化\nvar cityArray = [3]string{"北京", "上海", "深圳"} //使用指定的初始值完成初始化\nfmt.Println(testArray)                      //[0 0 0]\nfmt.Println(numArray)                       //[1 2 0]\nfmt.Println(cityArray)                      //[北京 上海 深圳]\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("h3",{attrs:{id:"二-方法二"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-方法二"}},[s._v("#")]),s._v(" (二)：方法二")]),s._v(" "),n("ul",[n("li",[s._v("自动判断数组长度")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('var numArray = [...]int{1, 2}\nvar cityArray = [...]string{"北京", "上海", "深圳"}\nfmt.Println(testArray)                          //[0 0 0]\nfmt.Println(numArray)                           //[1 2]\nfmt.Printf("type of numArray:%T\\n", numArray)   //type of numArray:[2]int\nfmt.Println(cityArray)                          //[北京 上海 深圳]\nfmt.Printf("type of cityArray:%T\\n", cityArray) //type of cityArray:[3]string\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"三-方法三"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三-方法三"}},[s._v("#")]),s._v(" (三)：方法三")]),s._v(" "),n("ul",[n("li",[s._v("我们还可以使用指定索引值的方式来初始化数组，例如")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('a := [...]int{1: 1, 3: 5}\nfmt.Println(a)                  // [0 1 0 5]\nfmt.Printf("type of a:%T\\n", a) //type of a:[4]int\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h2",{attrs:{id:"三-数组的遍历"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#三-数组的遍历"}},[s._v("#")]),s._v(" 三：数组的遍历")]),s._v(" "),n("h3",{attrs:{id:"一-遍历数组a有以下两种方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-遍历数组a有以下两种方法"}},[s._v("#")]),s._v(" (一)：遍历数组a有以下两种方法")]),s._v(" "),n("ul",[n("li",[s._v("使用普通for循环遍历")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('var a = [...]string{"北京", "上海", "深圳"}\n// 方法1：for循环遍历\nfor i := 0; i < len(a); i++ {\n\tfmt.Println(a[i])\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("ul",[n("li",[s._v("使用for range遍历")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('var a = [...]string{"北京", "上海", "深圳"}\nfor index, value := range a {\n\tfmt.Println(index, value)\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("h2",{attrs:{id:"四-多维数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四-多维数组"}},[s._v("#")]),s._v(" 四：多维数组")]),s._v(" "),n("h3",{attrs:{id:"一-二维数组的定义"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-二维数组的定义"}},[s._v("#")]),s._v(" (一)：二维数组的定义")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('a := [3][2]string{\n\t{"北京", "上海"},\n\t{"广州", "深圳"},\n\t{"成都", "重庆"},\n}\nfmt.Println(a) //[[北京 上海] [广州 深圳] [成都 重庆]]\nfmt.Println(a[2][1]) //支持索引取值:重庆\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ul",[n("li",[s._v("多维数组只有第一层可以使用...来让编译器推导数组长度。例如")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//支持的写法\na := [...][2]string{\n\t{"北京", "上海"},\n\t{"广州", "深圳"},\n\t{"成都", "重庆"},\n}\n//不支持多维数组的内层使用...\nb := [3][...]string{\n\t{"北京", "上海"},\n\t{"广州", "深圳"},\n\t{"成都", "重庆"},\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h3",{attrs:{id:"二-二维数组的遍历"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#二-二维数组的遍历"}},[s._v("#")]),s._v(" (二)：二维数组的遍历")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('a := [3][2]string{\n\t{"北京", "上海"},\n\t{"广州", "深圳"},\n\t{"成都", "重庆"},\n}\nfor _, v1 := range a {\n\tfor _, v2 := range v1 {\n\t\tfmt.Printf("%s\\t", v2)\n\t}\n\tfmt.Println()\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h2",{attrs:{id:"五-数组是值类型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#五-数组是值类型"}},[s._v("#")]),s._v(" 五：数组是值类型")]),s._v(" "),n("h3",{attrs:{id:"一-数组是值类型-赋值和传参会复制整个数组。因此改变副本的值-不会改变本身的值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#一-数组是值类型-赋值和传参会复制整个数组。因此改变副本的值-不会改变本身的值"}},[s._v("#")]),s._v(" (一)：数组是值类型，赋值和传参会复制整个数组。因此改变副本的值，不会改变本身的值")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("func modifyArray(x [3]int) {\n\tx[0] = 100\n}\n\nfunc modifyArray2(x [3][2]int) {\n\tx[2][0] = 100\n}\n\nfunc main() {\n\ta := [3]int{10, 20, 30}\n\tmodifyArray(a) //在modify中修改的是a的副本x\n\tfmt.Println(a) //[10 20 30]\n\tb := [3][2]int{\n\t\t{1, 1},\n\t\t{1, 1},\n\t\t{1, 1},\n\t}\n\tmodifyArray2(b) //在modify中修改的是b的副本x\n\tfmt.Println(b)  //[[1 1] [1 1] [1 1]]\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("h2",{attrs:{id:"六-数组注意点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#六-数组注意点"}},[s._v("#")]),s._v(" 六：数组注意点")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("1：数组支持 “==“、”!=” 操作符，因为内存总是被初始化过的\n2：[n]*T表示指针数组，*[n]T表示数组指针 \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])])])}),[],!1,null,null,null);a.default=r.exports}}]);