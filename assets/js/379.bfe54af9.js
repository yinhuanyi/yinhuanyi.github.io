(window.webpackJsonp=window.webpackJsonp||[]).push([[379],{2242:function(n,s,a){"use strict";a.r(s);var t=a(9),e=Object(t.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h2",{attrs:{id:"一-对container-heap源码进行分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-对container-heap源码进行分析"}},[n._v("#")]),n._v(" 一：对container/heap源码进行分析")]),n._v(" "),a("h3",{attrs:{id:"一-外部调用的方法分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-外部调用的方法分析"}},[n._v("#")]),n._v(" (一) 外部调用的方法分析")]),n._v(" "),a("ul",[a("li",[n._v("container/heap包对外提供的方法调用示例")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("1：heap.Init(maxHeap)：对maxHeap这个切片进行heapify操作\n\n2：heap.Push(maxHeap, 100)：在maxHeap堆中，添加元素100\n\n3：heap.Pop(maxHeap) ：删除maxHeap堆中，堆顶节点，并且返回删除的节点值\n\n4：heap.Fix(maxHeap, 0)：更新元素值后，修复堆结构\n\n5：heap.Remove(maxHeap, 1)：删除堆中索引为1的节点\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br")])]),a("h3",{attrs:{id:"二-源码分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-源码分析"}},[n._v("#")]),n._v(" (二) 源码分析")]),n._v(" "),a("ul",[a("li",[n._v("源码解析")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("// Interface 接口，需要实现堆的数组，实现下面的方法，sort.Interface接口有Len、Less、Swap 3个方法需要实现，那么创建一个堆，需要实现5个方法\ntype Interface interface {\n\tsort.Interface       // 嵌套接口\n\tPush(x interface{})  // 添加元素的方法\n\tPop() interface{}    // 删除最后一个元素的方法\n}\n\n\n// 堆初始化，相当于heapify操作，将线性数组转换为堆结构\nfunc Init(h Interface) {\n\t\n\tn := h.Len()\n\tfor i := n/2 - 1; i >= 0; i-- {\n\t\tdown(h, i, n)\n\t}\n}\n\n\n// Push 给二叉堆中添加新的元素\nfunc Push(h Interface, x interface{}) {\n\th.Push(x)\n\tup(h, h.Len()-1)\n}\n\n\n\n// 删除二叉树的根节点，如果是最大二叉堆就是删除最大元素\nfunc Pop(h Interface) interface{} {\n\tn := h.Len() - 1\n\th.Swap(0, n)\n\tdown(h, 0, n)\n\treturn h.Pop()\n}\n\n\n// 删除堆中任意元素，用的比较少\nfunc Remove(h Interface, i int) interface{} {\n\tn := h.Len() - 1\n\tif n != i {\n\t\th.Swap(i, n)\n\t\tif !down(h, i, n) {\n\t\t\tup(h, i)\n\t\t}\n\t}\n\treturn h.Pop()\n}\n\n\n// Fix在索引i处的元素更改其值后重新建立堆排序\nfunc Fix(h Interface, i int) {\n\tif !down(h, i, h.Len()) {\n\t\tup(h, i)\n\t}\n}\n\n// siftUp方法\nfunc up(h Interface, j int) {\n\tfor {\n\t\ti := (j - 1) / 2 \n\t\tif i == j || !h.Less(j, i) {\n\t\t\tbreak\n\t\t}\n\t\th.Swap(i, j)\n\t\tj = i\n\t}\n}\n\n// siftDown方法\nfunc down(h Interface, i0, n int) bool {\n\ti := i0\n\tfor {\n\t\tj1 := 2*i + 1\n\t\tif j1 >= n || j1 < 0 { \n\t\t\tbreak\n\t\t}\n\t\tj := j1 \n\t\tif j2 := j1 + 1; j2 < n && h.Less(j2, j1) {\n\t\t\tj = j2 \n\t\t}\n\t\tif !h.Less(j, i) {\n\t\t\tbreak\n\t\t}\n\t\th.Swap(i, j)\n\t\ti = j\n\t}\n\treturn i > i0\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br"),a("span",{staticClass:"line-number"},[n._v("69")]),a("br"),a("span",{staticClass:"line-number"},[n._v("70")]),a("br"),a("span",{staticClass:"line-number"},[n._v("71")]),a("br"),a("span",{staticClass:"line-number"},[n._v("72")]),a("br"),a("span",{staticClass:"line-number"},[n._v("73")]),a("br"),a("span",{staticClass:"line-number"},[n._v("74")]),a("br"),a("span",{staticClass:"line-number"},[n._v("75")]),a("br"),a("span",{staticClass:"line-number"},[n._v("76")]),a("br"),a("span",{staticClass:"line-number"},[n._v("77")]),a("br"),a("span",{staticClass:"line-number"},[n._v("78")]),a("br"),a("span",{staticClass:"line-number"},[n._v("79")]),a("br"),a("span",{staticClass:"line-number"},[n._v("80")]),a("br"),a("span",{staticClass:"line-number"},[n._v("81")]),a("br"),a("span",{staticClass:"line-number"},[n._v("82")]),a("br"),a("span",{staticClass:"line-number"},[n._v("83")]),a("br"),a("span",{staticClass:"line-number"},[n._v("84")]),a("br"),a("span",{staticClass:"line-number"},[n._v("85")]),a("br"),a("span",{staticClass:"line-number"},[n._v("86")]),a("br"),a("span",{staticClass:"line-number"},[n._v("87")]),a("br")])]),a("h3",{attrs:{id:"三-container-heap包使用示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-container-heap包使用示例"}},[n._v("#")]),n._v(" (三) container/heap包使用示例")]),n._v(" "),a("ul",[a("li",[n._v("在最大堆的基础上，完成堆的操作")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('// MaxHeap 声明一个线性结构\ntype MaxHeap []int\n\n// Len 计算堆的长度\nfunc (m *MaxHeap) Len() int {\n\treturn len(*m)\n}\n\n// Swap 堆元素交换位置\nfunc (m *MaxHeap) Swap(i, j int) {\n\t(*m)[i], (*m)[j] = (*m)[j], (*m)[i]\n}\n\n// Less 定义堆为最大二叉堆\nfunc (m *MaxHeap) Less(i, j int) bool {\n\treturn (*m)[i] > (*m)[j]\n}\n\n// Push  往堆中添加元素\nfunc (m *MaxHeap)Push(v interface{}) {\n\t*m = append(*m, v.(int))\n}\n\n// Pop 堆中删除元素\nfunc (m *MaxHeap)Pop() (v interface{}) {\n\n\t*m = (*m)[:len(*m)-1] // 删除最后一个元素\n\tv = (*m)[len(*m)-1]   // 返回最后一个元素\n\n\treturn v\n}\n\n// PrintHeap 按照层数递减，逐一打印堆中的元素\nfunc (m *MaxHeap) PrintHeap() {\n\n\tn := 1\t\t\t // 记录节点个数\n\tlevelCount := 1  // 记录二叉堆的层数\n\n\tfor n <= (*m).Len() {\n\n\t\tfmt.Println((*m)[n-1 : n-1+levelCount])\n\n\t\tn += levelCount\n\t\tlevelCount *= 2\n\t}\n\n}\n\nfunc (m *MaxHeap) GetFront () int {\n\treturn (*m)[0]\n}\n\nfunc main() {\n\n\tdata := []int{13,12,45,23,11,9,20}\n\tmaxHeap := new(MaxHeap)\n\n\tfor i := 0;i < len(data);i++ {\n\t\t// 这里是调用了切片的Push方法\n\t\tmaxHeap.Push(data[i])\n\t}\n\n\t// 打印原始数组\n\tmaxHeap.PrintHeap()\n\n\t// 让数组形成最大二叉堆，这是一个heapify操作\n\theap.Init(maxHeap)\n\n\t// 打印最大二叉堆\n\tmaxHeap.PrintHeap()\n\n\t// 添加元素\n\theap.Push(maxHeap, 100)\n\n\t//maxHeap.PrintHeap()  // 这里不能再打印了， 打印就会报错，PrintHeap方法有问题的\n\n\t// 获取堆顶元素\n\tmax := maxHeap.GetFront()\n\n\tfmt.Printf("max = %d\\n", max)\n\n\theap.Pop(maxHeap)\n\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br"),a("span",{staticClass:"line-number"},[n._v("69")]),a("br"),a("span",{staticClass:"line-number"},[n._v("70")]),a("br"),a("span",{staticClass:"line-number"},[n._v("71")]),a("br"),a("span",{staticClass:"line-number"},[n._v("72")]),a("br"),a("span",{staticClass:"line-number"},[n._v("73")]),a("br"),a("span",{staticClass:"line-number"},[n._v("74")]),a("br"),a("span",{staticClass:"line-number"},[n._v("75")]),a("br"),a("span",{staticClass:"line-number"},[n._v("76")]),a("br"),a("span",{staticClass:"line-number"},[n._v("77")]),a("br"),a("span",{staticClass:"line-number"},[n._v("78")]),a("br"),a("span",{staticClass:"line-number"},[n._v("79")]),a("br"),a("span",{staticClass:"line-number"},[n._v("80")]),a("br"),a("span",{staticClass:"line-number"},[n._v("81")]),a("br"),a("span",{staticClass:"line-number"},[n._v("82")]),a("br"),a("span",{staticClass:"line-number"},[n._v("83")]),a("br"),a("span",{staticClass:"line-number"},[n._v("84")]),a("br")])]),a("ul",[a("li",[a("strong",[a("code",[n._v("基于最小二叉堆实现优先队列，解决TOP K问题")])])])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);