(window.webpackJsonp=window.webpackJsonp||[]).push([[251],{2248:function(n,s,a){"use strict";a.r(s);var t=a(9),e=Object(t.a)({},(function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h2",{attrs:{id:"一-os-exec包-参考文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-os-exec包-参考文档"}},[n._v("#")]),n._v(" 一：os/exec包: "),t("a",{attrs:{href:"https://colobu.com/2020/12/27/go-with-os-exec/",target:"_blank",rel:"noopener noreferrer"}},[n._v("参考文档"),t("OutboundLink")],1)]),n._v(" "),t("h3",{attrs:{id:"一-原理介绍以及命令介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-原理介绍以及命令介绍"}},[n._v("#")]),n._v(" (一) 原理介绍以及命令介绍")]),n._v(" "),t("ul",[t("li",[t("p",[n._v("Go标准库提供了便利的方法，可以很容易地运行外部命令，一般我们会使用os/exec包下的方法"),t("code",[n._v("实现执行外部命令以及和外部命令交互")]),n._v("。"),t("code",[n._v("os/exec包装了os.StartProcess方法，更方便的进行输入和输出的访问，提供I/O pipe等功能")])])]),n._v(" "),t("li",[t("p",[n._v("下面这个例子：exec调用了Command方法，执行外部命令，它会返回一个"),t("em",[n._v("Cmd的数据结构，"),t("strong",[n._v("主要调用它的Run、Output、CombinedOutput方法后这个对象就不能重用了")]),n._v("，一般我们也不会重用这个对象，而是在需要的时候新生成一个。下面的命令虽然执行了，但是没有任何输出，是因为"),t("strong",[n._v("Go程序并没有捕获和处理输出，所以控制台中并没有任何输出")]),n._v("，Run方法会执行外部命令并等待命令完成，如果命令正常执行，没有错误，返回码为0，那么Run返回的err == nil。如果有错误，那么返回一个")]),n._v("ExitError，有时候你需要读取cmd.Stdout甚至cmd.Stderr以便获取详细的错误信息。")])])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('cmd := exec.Command("ls", "-lah")\nerr := cmd.Run()\nif err != nil {\n\tlog.Fatalf("failed to call cmd.Run(): %v", err)\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br")])]),t("ul",[t("li",[n._v("显示外部命令的输出：cmd.Stdout 如果为空，那么会输出到os.DevNull中；如果为*os.File对象，输出到文件中；如果为os.Stdout，输出到命令行中。cmd.Stdin也是一样，只不过Stdin是输入")])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('cmd := exec.Command("ls", "-l")\ncmd.Stdout = os.Stdout // 让标准输出显示在控制台\ncmd.Stderr = os.Stderr // 让错误输出显示在控制台\nerr := cmd.Run()\nif err != nil {\n\tlog.Fatalf("failed to call cmd.Run(): %v", err)\n}\n\n输出结果：\ntotal 8\n-rw-r--r--  1 yinhuanyi  staff   24  8  3 00:05 go.mod\ndrwxr-xr-x  4 yinhuanyi  staff  128  8  4 11:22 test\n\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br")])]),t("ul",[t("li",[n._v("外部程序path：Cmd.Path是要执行的程序的路径，如果是相对路径，那么它基于Cmd.Dir计算相对路径。如果程序已经在系统$PATH路径下，那么可以直接写程序名。")])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('cmd := exec.Command("/usr/local/go/bin/go", "env")\ncmd.Stdout = os.Stdout\ncmd.Stderr = os.Stderr\n# 输出：path: /usr/local/go/bin/go\nlog.Printf("path: %s", cmd.Path)\nerr := cmd.Run()\nif err != nil {\n\tlog.Fatalf("failed to call cmd.Run(): %v", err)\n}\n\n# 输出结果：\nGO111MODULE="on"\nGOARCH="amd64"\nGOBIN="/Users/yinhuanyi/go/bin"\nGOCACHE="/Users/yinhuanyi/Library/Caches/go-build"\nGOENV="/Users/yinhuanyi/Library/Application Support/go/env"\nGOEXE=""\nGOFLAGS=""\n...\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br")])]),t("ul",[t("li",[n._v("设置环境变量：Cmd还有一个字段叫做Env,用来设置进程的环境变量，格式是key=value")])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('\tcmd := exec.Command("bash", "-c", "echo $name $age")\n\tcmd.Env = []string{"name=Robby", "age=30"} // 设置环境变量\n\tcmd.Stdout = os.Stdout\n\tcmd.Stderr = os.Stderr\n\n\terr := cmd.Run()\n\tif err != nil {\n\t\tlog.Fatalf("failed to call cmd.Run(): %v", err)\n\t}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br")])]),t("ul",[t("li",[n._v("底层的Process和ProcessState：os/exec是封装的一个便利库，底层它是使用os.StartProcess实现的，所以你可以得到"),t("strong",[n._v("底层的Process对象和ProcessState对象")]),n._v("，"),t("strong",[n._v("分别代表外部进程和外部进程的状态。")])])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('cmd := exec.Command("bash", "-c", "sleep 1;echo $name")\ncmd.Env = []string{"name=Robby"}\ncmd.Stdout = os.Stdout\ncmd.Stderr = os.Stderr\n\nerr := cmd.Start()\nif err != nil {\n\tlog.Fatalf("failed to call cmd.Start(): %v", err)\n}\nlog.Printf("pid: %d", cmd.Process.Pid) // 获取外部进程的PID\ncmd.Process.Wait()\nlog.Printf("exitcode: %d", cmd.ProcessState.ExitCode()) // 执行的返回状态码\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br")])]),t("ul",[t("li",[n._v("判断外部命令是否存在：使用LookPath方法，"),t("strong",[n._v("如果传入参数包含路径分隔符，那么它会基于Cmd.Dir的相对路径或者绝对路径查找这个程序")]),n._v("。如果不包含路径分隔符，那么会从PATH环境变量中查找文件")])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("path, err := exec.LookPath(\"ls\")\nif err != nil {\n\tlog.Printf(\"'ls' not found\")\n} else {\n\tlog.Printf(\"'ls' is in '%s'\\n\", path)\n}\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br")])]),t("ul",[t("li",[t("strong",[n._v("获取命令结果")]),n._v("：Cmd提供了Output()方法，如果命令正确执行，可以得到命令执行结果的bytes")])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('cmd := exec.Command("ls", "-l")\ndata, err := cmd.Output()\nif err != nil {\n\tlog.Fatalf("failed to call Output(): %v", err)\n}\nlog.Printf("output: %s", data)\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br")])]),t("ul",[t("li",[n._v("命令执行错误，可以通过os.Stderr输出")])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('cmd := exec.Command("ls", "-lahxyz")\ncmd.Stderr = os.Stderr\ndata, err := cmd.Output()\nif err != nil {\n\tlog.Fatalf("failed to call Output(): %v", err)\n}\nlog.Printf("output: %s", data)\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br")])]),t("ul",[t("li",[t("strong",[n._v("组合Stdout和Stderr")]),n._v("：调用CombinedOutput()方法可以同时获取标准输出和错误输出，如果命令正确，err为nil，data有数据；如果命令错误，err会有值，data为nil")])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('cmd := exec.Command("lsl", "-l")\ndata, err := cmd.CombinedOutput()\nif err != nil {\n\tlog.Fatalf("failed to call CombinedOutput(): %v", err)\n}\nlog.Printf("output: %s", data)\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br")])]),t("ul",[t("li",[t("strong",[n._v("分别读取Stdout和Stderr")]),n._v("：可以为Stdout和Stderr分别设置bytes.Buffer,来实现独立的读取，"),t("strong",[n._v("但是如果执行错误，好像只有err有值，且stdout.String(), stderr.String()没有任何数据")])])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('cmd := exec.Command("lsl", "-l")\nvar stdout, stderr bytes.Buffer\ncmd.Stdout = &stdout\ncmd.Stderr = &stderr\nerr := cmd.Run()\nif err != nil {\n\tfmt.Printf("failed to call Run(): %v\\n", err)\n}\nlog.Printf("out:\\n%s\\nerr:\\n%s", stdout.String(), stderr.String())\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br")])]),t("ul",[t("li",[t("strong",[n._v("显示命令执行进度")]),n._v("：没有搞懂")])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('cmd := exec.Command("curl","https://dl.google.com/go/go1.15.6.linux-amd64.tar.gz")\nvar stdoutProcessStatus bytes.Buffer\n\ncmd.Stdout = io.MultiWriter(ioutil.Discard, &stdoutProcessStatus)\n//cmd.Stderr = os.Stderr\ndone := make(chan struct{})\n\ngo func() {\n\ttick := time.NewTicker(time.Second)\n\tdefer tick.Stop()\n\tfor {\n\t\tselect {\n\t\tcase <-done:\n\t\t\treturn\n\t\tcase <-tick.C:\n\t\t\tlog.Printf("downloaded: %d", stdoutProcessStatus.Len())\n\t\t}\n\t}\n}()\n\nerr := cmd.Run()\n\nif err != nil {\n\tlog.Fatalf("failed to call Run(): %v", err.Error())\n}\nclose(done)\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br")])]),t("ul",[t("li",[t("strong",[n._v("设置Stdin")]),n._v("：wc命令读取main.go文件，统计它一共有多少行")])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('stdin, err := os.Open("go.mod") // 返回文件句柄\nif err != nil {\n\tlog.Fatalf("failed to open file: %v", err)\n}\ncmd := exec.Command("wc", "-l")\ncmd.Stdin = stdin \ncmd.Stdout = os.Stdout\ncmd.Stderr = os.Stderr\nerr = cmd.Run()\nif err != nil {\n\tlog.Fatalf("failed to call cmd.Run(): %v", err)\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br")])]),t("ul",[t("li",[t("strong",[n._v("Pipe管道方法（推荐使用第二种方法）")]),n._v("：StderrPipe、StdinPipe、StdoutPipe方法可以将一个命令的输出作为下一个命令的输入，比如"),t("strong",[n._v("cat main.go的输出作为wc -l命令的输入")])])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('/*\n第一种方法\n*/\n// cat命令\ncmdCat := exec.Command("cat", "go.mod")\ncatout, err := cmdCat.StdoutPipe()\nif err != nil {\n\tlog.Fatalf("failed to get StdoutPipe of cat: %v", err)\n}\n\n// wc命令\ncmdWC := exec.Command("wc", "-l")\n// 主要是这里，将cat命令的输出作为wc命令的输入\ncmdWC.Stdin = catout  \ncmdWC.Stdout = os.Stdout\n\n// 执行两个命令，必须用start不能用run\nerr = cmdCat.Start()\nif err != nil {\n\tlog.Fatalf("failed to call cmdCat.Run(): %v", err)\n}\nerr = cmdWC.Start()\nif err != nil {\n\tlog.Fatalf("failed to call cmdWC.Start(): %v", err)\n}\ncmdCat.Wait()\ncmdWC.Wait()\n\n\n\n\n\n/*\n第二种方法\n*/\n// 先写命令\ncmdCat := exec.Command("cat", "go.mod")\ncmdWC := exec.Command("wc", "-l")\n\n// 获取第一个命令的pipe输出\ncatout, err := cmdCat.StdoutPipe()\nif err != nil {\n\tlog.Fatalf("failed to call cmdCat.StdoutPipe(): %v", err)\n}\n// 执行第一个命令\nerr = cmdCat.Start()\nif err != nil {\n\tlog.Fatalf("failed to call cmdCat.Start(): %v", err)\n}\n// 将第一个命令的pipe输出作为第二个命令的输入\ncmdWC.Stdin = catout\n// 获取第二个命令输出\ndata, err := cmdWC.Output()\nif err != nil {\n\tlog.Fatalf("failed to call cmdWC.Output(): %v", err)\n}\n\nfmt.Printf("%s", data)\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br"),t("span",{staticClass:"line-number"},[n._v("34")]),t("br"),t("span",{staticClass:"line-number"},[n._v("35")]),t("br"),t("span",{staticClass:"line-number"},[n._v("36")]),t("br"),t("span",{staticClass:"line-number"},[n._v("37")]),t("br"),t("span",{staticClass:"line-number"},[n._v("38")]),t("br"),t("span",{staticClass:"line-number"},[n._v("39")]),t("br"),t("span",{staticClass:"line-number"},[n._v("40")]),t("br"),t("span",{staticClass:"line-number"},[n._v("41")]),t("br"),t("span",{staticClass:"line-number"},[n._v("42")]),t("br"),t("span",{staticClass:"line-number"},[n._v("43")]),t("br"),t("span",{staticClass:"line-number"},[n._v("44")]),t("br"),t("span",{staticClass:"line-number"},[n._v("45")]),t("br"),t("span",{staticClass:"line-number"},[n._v("46")]),t("br"),t("span",{staticClass:"line-number"},[n._v("47")]),t("br"),t("span",{staticClass:"line-number"},[n._v("48")]),t("br"),t("span",{staticClass:"line-number"},[n._v("49")]),t("br"),t("span",{staticClass:"line-number"},[n._v("50")]),t("br"),t("span",{staticClass:"line-number"},[n._v("51")]),t("br"),t("span",{staticClass:"line-number"},[n._v("52")]),t("br"),t("span",{staticClass:"line-number"},[n._v("53")]),t("br"),t("span",{staticClass:"line-number"},[n._v("54")]),t("br"),t("span",{staticClass:"line-number"},[n._v("55")]),t("br"),t("span",{staticClass:"line-number"},[n._v("56")]),t("br"),t("span",{staticClass:"line-number"},[n._v("57")]),t("br"),t("span",{staticClass:"line-number"},[n._v("58")]),t("br")])]),t("ul",[t("li",[t("strong",[n._v("通用的Pipe方法(这里写了一个通用函数pipeCommands( )")])])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('func pipeCommands(commands ...*exec.Cmd) ([]byte, error) {\n\t// 前n-1个命令\n\tfor i, command := range commands[:len(commands)-1] {\n\t\tout, err := command.StdoutPipe()\n\t\tif err != nil {\n\t\t\treturn nil, err\n\t\t}\n\t\tcommand.Start()\n\t\tcommands[i+1].Stdin = out\n\t}\n\t// 获取第n个命令\n\tdata, err := commands[len(commands)-1].Output()\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn data, nil\n}\n\n\nfunc main() {\n\tcmdCat := exec.Command("cat", "go.mod")\n\tcmdWC := exec.Command("wc", "-l")\n\tdata, err := pipeCommands(cmdCat, cmdWC)\n\tif err != nil {\n\t\tlog.Fatalf("failed to call pipeCommands(): %v", err)\n\t}\n\tlog.Printf("output: %s", data)\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br")])]),t("ul",[t("li",[t("strong",[n._v("如果是执行的bash命令，"),t("code",[n._v("可以使用bash -c执行管道")])])])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('cmd := exec.Command("bash", "-c", "cat go.mod | wc -l")\ndata, err := cmd.CombinedOutput()\nif err != nil {\n\tlog.Fatalf("failed to call pipeCommands(): %v", err)\n}\nlog.Printf("output: %s", data)\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br")])]),t("ul",[t("li",[n._v("孤儿进程：这里没有cmd.Wait()，等待子进程结束，那么这个时候子进程的ppid就被设置为了1")])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('cmd := exec.Command("curl", "-o", "go1.15.6.linux-amd64.tar.gz", "https://dl.google.com/go/go1.15.6.linux-amd64.tar.gz")\nerr := cmd.Start()\nif err != nil {\n\tlog.Fatalf("failed to call Run(): %v", err)\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br")])]),t("ul",[t("li",[n._v("程序退出时Kill子进程")])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('cmd := exec.Command("curl", "-o", "go1.15.6.linux-amd64.tar.gz", "https://dl.google.com/go/go1.15.6.linux-amd64.tar.gz")\ncmd.SysProcAttr = &syscall.SysProcAttr{Setpgid: true}\nerr := cmd.Start()\nif err != nil {\n\tlog.Fatalf("failed to call Run(): %v", err)\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br")])]),t("ul",[t("li",[n._v("将父进程的文件句柄传递个子进程")])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('fileHandler, err := os.Open("./go.mod")\npath := "ls"\nargs := []string{"-graceful"}\ncmd := exec.Command(path, args...)\ncmd.Stdout = os.Stdout\ncmd.Stderr = os.Stderr\ncmd.ExtraFiles = []*os.File{fileHandler}\nerr = cmd.Start()\nif err != nil {\n\tlog.Fatalf("gracefulRestart: Failed to launch, error: %v", err)\n}\ncmd.Wait()\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br")])]),t("h3",{attrs:{id:"二-强制任务结束"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-强制任务结束"}},[n._v("#")]),n._v(" (二) 强制任务结束")]),n._v(" "),t("ul",[t("li",[t("code",[n._v("exec.CommandContext(ctx context.Context, name string, arg ...string)")]),n._v("方法可以传递一个context上下文，使得在goroutine中运行的子命令被外部控制。"),t("code",[n._v("下面的代码通过子goroutine与main函数直接的通信，在main函数中调用cancel方法来强制kill掉子进程")])])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('// 定义一个结构体，用于goroutine与main函数中channel的数据传递\ntype result struct {\n\terr error\n\tdata []byte\n}\n\nfunc main() {\n\n\t// 初始化一个channel，元素类型是指针\n\tresultChan := make(chan *result, 100)\n\n\t// 在Context是接口类型，里面有一个Done方法，返回值类型是<-chan，只读channel，当调用cancel()函数后，select {case <- ctx.Done()} 返回一个struct{}, 就会kill 子进程的pid\n\tctx, cancel := context.WithCancel(context.Background())\n\n\tgo func() {\n\t\t// 传递了一个ctx上下文\n\t\tcmd := exec.CommandContext(ctx, "bash", "-c", "sleep 2; echo hello")\n\t\tdata, err := cmd.CombinedOutput()\n\t\t\n\t\t// 将结果写入到channel中\n\t\tresultChan <- &result{\n\t\t\terr: err,\n\t\t\tdata: data,\n\t\t}\n\n\t}()\n\n\t// 1秒后中断cmd\n\ttime.Sleep(1 * time.Second)\n\t\n\t// 调用cancel方法\n\tcancel()\n\n\t// 从channel中获取数据\n\tret := <- resultChan\n\n\tfmt.Printf("err=%s, data=%s\\n", ret.err, ret.data)\n}\n\n\n\n// 结果输出：\nerr=signal: killed, data=\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br"),t("span",{staticClass:"line-number"},[n._v("34")]),t("br"),t("span",{staticClass:"line-number"},[n._v("35")]),t("br"),t("span",{staticClass:"line-number"},[n._v("36")]),t("br"),t("span",{staticClass:"line-number"},[n._v("37")]),t("br"),t("span",{staticClass:"line-number"},[n._v("38")]),t("br"),t("span",{staticClass:"line-number"},[n._v("39")]),t("br"),t("span",{staticClass:"line-number"},[n._v("40")]),t("br"),t("span",{staticClass:"line-number"},[n._v("41")]),t("br"),t("span",{staticClass:"line-number"},[n._v("42")]),t("br"),t("span",{staticClass:"line-number"},[n._v("43")]),t("br")])]),t("h2",{attrs:{id:"二-如何解析cron表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-如何解析cron表达式"}},[n._v("#")]),n._v(" 二：如何解析cron表达式")]),n._v(" "),t("h3",{attrs:{id:"一-开源cron解析库-cronexpr"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-开源cron解析库-cronexpr"}},[n._v("#")]),n._v(" (一) 开源cron解析库: cronexpr")]),n._v(" "),t("ul",[t("li",[t("p",[n._v("这里使用一个库："),t("code",[n._v("github.com/gorhill/cronexpr")]),n._v("，作为定时任务的调度库")])]),n._v(" "),t("li",[t("p",[n._v("代码如下")])])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('func main() {\n\t//forever := make(chan struct{})\n\n\t// 时间：秒、分钟、小时、天、月、周、年\n\t// 每5秒调度一次\n\texpr, err := cronexpr.Parse("*/5 * * * * * *")\n\tif err != nil {\n\t\tfmt.Println(err)\n\t}\n\n\tnow := time.Now()\n\n\t// 获取下次调度的时间\n\tnextTime := expr.Next(now)\n\n\tfmt.Println(nextTime)\n\n\t// 等待nextTime.Sub(now)，执行func函数\n\ttime.AfterFunc(nextTime.Sub(now), func() {\n\t\tfmt.Println("被调度了: ", nextTime)\n\t})\n\n\ttime.Sleep(30 * time.Second)\n\t//<- forever\n\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br")])]),t("h3",{attrs:{id:"二-控制多个cron任务的执行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-控制多个cron任务的执行"}},[n._v("#")]),n._v(" (二) 控制多个cron任务的执行")]),n._v(" "),t("ul",[t("li",[n._v("控制多个定时任务调度思想")])]),n._v(" "),t("p",[t("img",{attrs:{src:a(775),alt:"Alt text"}})]),n._v(" "),t("ul",[t("li",[n._v("实现代码")])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('// Cronjob 定义一个任务， 包含两个属性，一个是执行表达式，一个下次执行的时间，下次执行时间会在每次任务执行后更新，并且判断是否需要执行任务了\ntype Cronjob struct {\n\texpr *cronexpr.Expression\n\tnextTime time.Time\n}\n\nfunc main() {\n\t\n\tnow := time.Now()\n\t\n\t// 定时任务列表\n\tscheduleTable := make(map[string]*Cronjob)\n\t\n\t// 定义一个协程，定时的检查所有的Cron任务，只要过期就执行\n\texpr, err := cronexpr.Parse("*/5 * * * * * *")\n\tif err != nil {\n\t\tfmt.Println(err)\n\t}\n\t// 创建job\n\tcronjob1 := &Cronjob{\n\t\texpr: expr,\n\t\tnextTime: expr.Next(now),\n\t}\n\n\t// 将任务注册到调度表\n\tscheduleTable["job1"] = cronjob1\n\n\n\texpr, err = cronexpr.Parse("*/10 * * * * * *")\n\tif err != nil {\n\t\tfmt.Println(err)\n\t}\n\tcronjob2 := &Cronjob{\n\t\texpr: expr,\n\t\tnextTime: expr.Next(now),\n\t}\n\tscheduleTable["job2"] = cronjob2\n\n\t// 协程遍历任务列表\n\tgo func() {\n\t\tfor {  // 这里是执行的死循环，不停的从任务列表中获取任务执行，这是不对的，应该是到了要执行的时间，再执行。后面的代码会基于要执行的时候再执行的思想写\n\t\t\tnow = time.Now()\n\t\t\t\n\t\t\t// 遍历任务列表，到期就执行\n\t\t\tfor jobName, cronJob := range scheduleTable{\n\t\t\t\t// 判断是否过期：当下一个任务的执行时间在当前时间之前，表示任务就需要执行了\n\t\t\t\tif cronJob.nextTime.Before(now) || cronJob.nextTime.Equal(now){\n\n\t\t\t\t\t// 执行的时候再启动一个协程\n\t\t\t\t\tgo func(jobName string) {\n\t\t\t\t\t\tfmt.Println("执行了: ", jobName)\n\t\t\t\t\t}(jobName)\n\n\t\t\t\t\t// 执行任务之后，计算下次调度时间, 每个任务下次执行时间是动态计算的\n\t\t\t\t\tcronJob.nextTime = cronJob.expr.Next(now)\n\t\t\t\t\tfmt.Println(jobName, "下次执行时间", cronJob.nextTime)\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t\n\t\t\t// 睡眠100ms，防止CPU打满\n\t\t\tselect {\n\t\t\tcase <-time.NewTimer(100 * time.Millisecond).C: // time.NewTimer获取的是一个Timer，Timer.C是一个channel，如果timer超时，那么会向channel中写入一个数据，使得select向下执行\n\n\t\t\t}\n\t\t}\n\t}()\n\n\ttime.Sleep(30 * time.Second)\n\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br"),t("span",{staticClass:"line-number"},[n._v("34")]),t("br"),t("span",{staticClass:"line-number"},[n._v("35")]),t("br"),t("span",{staticClass:"line-number"},[n._v("36")]),t("br"),t("span",{staticClass:"line-number"},[n._v("37")]),t("br"),t("span",{staticClass:"line-number"},[n._v("38")]),t("br"),t("span",{staticClass:"line-number"},[n._v("39")]),t("br"),t("span",{staticClass:"line-number"},[n._v("40")]),t("br"),t("span",{staticClass:"line-number"},[n._v("41")]),t("br"),t("span",{staticClass:"line-number"},[n._v("42")]),t("br"),t("span",{staticClass:"line-number"},[n._v("43")]),t("br"),t("span",{staticClass:"line-number"},[n._v("44")]),t("br"),t("span",{staticClass:"line-number"},[n._v("45")]),t("br"),t("span",{staticClass:"line-number"},[n._v("46")]),t("br"),t("span",{staticClass:"line-number"},[n._v("47")]),t("br"),t("span",{staticClass:"line-number"},[n._v("48")]),t("br"),t("span",{staticClass:"line-number"},[n._v("49")]),t("br"),t("span",{staticClass:"line-number"},[n._v("50")]),t("br"),t("span",{staticClass:"line-number"},[n._v("51")]),t("br"),t("span",{staticClass:"line-number"},[n._v("52")]),t("br"),t("span",{staticClass:"line-number"},[n._v("53")]),t("br"),t("span",{staticClass:"line-number"},[n._v("54")]),t("br"),t("span",{staticClass:"line-number"},[n._v("55")]),t("br"),t("span",{staticClass:"line-number"},[n._v("56")]),t("br"),t("span",{staticClass:"line-number"},[n._v("57")]),t("br"),t("span",{staticClass:"line-number"},[n._v("58")]),t("br"),t("span",{staticClass:"line-number"},[n._v("59")]),t("br"),t("span",{staticClass:"line-number"},[n._v("60")]),t("br"),t("span",{staticClass:"line-number"},[n._v("61")]),t("br"),t("span",{staticClass:"line-number"},[n._v("62")]),t("br"),t("span",{staticClass:"line-number"},[n._v("63")]),t("br"),t("span",{staticClass:"line-number"},[n._v("64")]),t("br"),t("span",{staticClass:"line-number"},[n._v("65")]),t("br"),t("span",{staticClass:"line-number"},[n._v("66")]),t("br"),t("span",{staticClass:"line-number"},[n._v("67")]),t("br"),t("span",{staticClass:"line-number"},[n._v("68")]),t("br"),t("span",{staticClass:"line-number"},[n._v("69")]),t("br"),t("span",{staticClass:"line-number"},[n._v("70")]),t("br"),t("span",{staticClass:"line-number"},[n._v("71")]),t("br"),t("span",{staticClass:"line-number"},[n._v("72")]),t("br")])])])}),[],!1,null,null,null);s.default=e.exports},775:function(n,s,a){n.exports=a.p+"assets/img/2021-08-1011.27.18.9572125c.png"}}]);