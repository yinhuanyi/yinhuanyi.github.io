(window.webpackJsonp=window.webpackJsonp||[]).push([[260],{2305:function(s,t,n){"use strict";n.r(t);var a=n(9),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"一-字节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-字节"}},[s._v("#")]),s._v(" 一：字节")]),s._v(" "),a("h3",{attrs:{id:"什么是编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是编码"}},[s._v("#")]),s._v(" 什么是编码")]),s._v(" "),a("ul",[a("li",[s._v("ASCII编码表")])]),s._v(" "),a("p",[a("img",{attrs:{src:n(878),alt:"ASCII编码表"}})]),s._v(" "),a("ul",[a("li",[s._v("说明")])]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1：计算机只能处理0和1，那么计算机如果需要识别字符，就需要有一套编码机制，ASCII编码由此诞生了。8个bit为一个byte, 11111111 = 255， 那么一个字节最大能够表示255（十进制）\n\n2：对于英文字母来说，A~Z,a~z 一共才 26 * 2 = 52个，因此，一个字节表示所有的英文字符是满足需要的。但是对于中文来说，是远远不够的。那么GB2312因此诞生了，11111111 11111111 = 65535， 那么按照GB2312就可以表示65535个汉字字符，基本可以满足现代汉字\n\n3：不同国家有不同的字符编码表，例如，在中国，假如 10101011 11010110 表示 “中”， 如果你在日本，使用日本的编码表，对应的10101011 11010110，可能表示的就是“日”。那么，中文写好的文字，按照日文编码表编码，就会出现乱码，这就是为什么，有时候打开某些页面的时候，显示的是乱码，是因为编码表引入错误，没有引入正确的编码表\n\n4：unicode编码的出现，解决了所有语言编码的问题。 但是使用Unicode编码英文字母，本来只需要一个字节的存储空间，变为了两个字节，那么在数据传输的过程中，消耗了更多的带宽\n\n5：utf-8变长编码的出现，解决了这个存储过多的问题，将英文字符使用一个字节编码，中文字符使用三个字节编码\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("ul",[a("li",[s._v("举例")])]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("【ipfs星际大陆】的Unicode编码：\\u0069\\u0070\\u0066\\u0073\\u661f\\u9645\\u5927\\u9646，其中每一个字符是16进制数，那么按照计算机存储二进制的方式，如下\n\ni：00000000 01101001 \np：00000000 01110000\nf：00000000 01100110\ns：00000000 01110011 \n星：01100110 00011111\n际：10010110 01000101\n大：01011001 00100111\n陆：10010110 01000110\n\n结论：英文前9位都是0，浪费存储空间\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("ul",[a("li",[s._v("utf-8变长的编码方式")])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[s._v("字节数")]),s._v(" "),a("th",{staticStyle:{"text-align":"center"}},[s._v("二进制表示")])])]),s._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("1个字节")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("2个字节")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("110xxxxx 10xxxxxx")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("3个字节")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("1110xxxx 10xxxxxx 10xxxxxx")])]),s._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[s._v("4个字节")]),s._v(" "),a("td",{staticStyle:{"text-align":"center"}},[s._v("11110xxx 10xxxxxx 10xxxxxx 10xxxxxx")])])])]),s._v(" "),a("ul",[a("li",[s._v("星：0110")]),s._v(" "),a("li",[s._v("011001100 00011111")])]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1：单字节的字符，字节的第一位设为0，对于英语文本，UTF-8码只占用一个字节，和ASCII码完全相同\n那么字符i的存储使用ASCII编码表存储，01101001\n\n2：n字节字符，第一个字节的前n位设为1，第n+1位设为0，后面字节的前两位都设为10，这n个字节的其余空位填充该字符unicode码，高位用0补足\n那么字符【星】是3个字节，存储方式就是：11100110 10011000 10011111\n解读 UTF-8 编码非常简单。如果一个字节的第一位是0，则这个字节单独就是一个字符；如果第一位是1，则连续有多少个1，就表示当前字符占用多少个字节\n\n3：那么给你一个【星】字符，我们如何存储呢？\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"bytes和bytearray"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bytes和bytearray"}},[s._v("#")]),s._v(" bytes和bytearray")]),s._v(" "),a("ul",[a("li",[s._v("区别")])]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1：bytes是字节组成的，有序的，不可变序列\n\n2：bytearray是字节组成的，有序的，可变序列\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("编码与解码")])]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1：编码\n    字符串按照指定的字符集进行编码，encode方法，返回字节序列bytes\n    str.encode(encoding='utf-8', errors='strict') -> bytes\n\n2: 解码\n    字节按照指定的字符集进行解码，decode方法，返回字符串str\n    bytes.decode(encoding=\"utf-8\", errors=\"strict\") -> str\n    bytearray.decode(encoding=\"utf-8\", errors=\"strict\") -> str\n\n3：举例说明\nstring = '中'\nbytes_str = string.encode() # 输出：b'\\xe4\\xb8\\xad'\n\nbytes_str = b'\\xe4\\xb8\\xad'\nstring = bytes_str.decode() # 输出：中 \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("ul",[a("li",[s._v("bytes的定义")])]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 空字节\nbytes()\n\n# 将9转换为字节类型\nbytes(9)\n\n# 将hello字符串转换为字节类型\nbytes('hello') # 返回 b'hello'\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("ul",[a("li",[s._v("中文字符写入磁盘，再从磁盘加载到字符的过程")])]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1：存储到硬盘\nbytes('中', encoding='utf-8') # 返回 b'\\xe4\\xb8\\xad' \nhex_str = b'\\xe4\\xb8\\xad'.hex()  # 16进制返回 e4b8ad\n将16进制e4b8ad转换为二进制：11100100 10111000 10101101，这样存储在硬盘上\n\n2：从硬盘读取 11100100 10111000 10101101 转换为中文\n按照规则转换为Unicode：01001110 00101101\n转换为16机制：4e2d\n转换为中文：中\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("ul",[a("li",[s._v("bytes操作")])]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("举例：以什么开头\nb'xkd'.startswith(b'x') 返回 True\n\n字节可以与十六进制的字符串相互转化\nb'\\xde\\xad\\xbe\\xef'.hex() # 输出：16进制表示的字符串deadbeef\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("ul",[a("li",[s._v("bytearray与bytes定义类似")])]),s._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[s._v("#  返回 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bytearray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b'hello’"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("bytearray")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports},878:function(s,t,n){s.exports=n.p+"assets/img/2021-12-2409.27.37.a4cbc6e9.png"}}]);