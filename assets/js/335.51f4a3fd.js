(window.webpackJsonp=window.webpackJsonp||[]).push([[335],{2153:function(s,n,t){"use strict";t.r(n);var r=t(9),e=Object(r.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"一-负载均衡-小知识点记录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-负载均衡-小知识点记录"}},[s._v("#")]),s._v(" 一：负载均衡（小知识点记录）")]),s._v(" "),t("h3",{attrs:{id:"一-获取本地随机端口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-获取本地随机端口"}},[s._v("#")]),s._v(" (一)：获取本地随机端口")]),s._v(" "),t("ul",[t("li",[s._v("python中获取可用的随机端口")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('# 获取当前主机的一个随机的端口地址\ndef get_free_tcp_port():\n    tcp = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    tcp.bind(("", 0))\n    _, port = tcp.getsockname()\n    tcp.close()\n    return port\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("ul",[t("li",[s._v("golang动态获取端口")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('\n// GetFreePort 获取随机端口号\nfunc GetFreePort() (port int, err error) {\n\taddr, err := net.ResolveTCPAddr("tcp", "localhost:0")\n\tif err != nil {\n\t\treturn 0, err\n\t}\n\tlistener, err := net.ListenTCP("tcp", addr)\n\tif err != nil {\n\t\treturn 0, err\n\t}\n\tdefer listener.Close()\n\treturn listener.Addr().(*net.TCPAddr).Port, nil\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("h3",{attrs:{id:"二-使用负载均衡库-https-github-com-mbobakov-grpc-consul-resolver"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-使用负载均衡库-https-github-com-mbobakov-grpc-consul-resolver"}},[s._v("#")]),s._v(" (二)：使用负载均衡库：https://github.com/mbobakov/grpc-consul-resolver")]),s._v(" "),t("ul",[t("li",[s._v("使用负载均衡库，完成grpc协议的负载均衡（"),t("code",[s._v("负载均衡中，将grpc.Dial过程屏蔽了，user-srv的socket信息从consul中获取后，会自动创建conn，并且在连接池中将conn封装")]),s._v("）")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('// 主要代码思想是将conn替换为了具有负载均衡的conn， 代码写all-server/user_web/initailize/srv_conn.go中\n\n// InitSrvConn 初始化客户端，这里是使用了负载均衡库https://github.com/mbobakov/grpc-consul-resolver\nfunc InitSrvConn()  {\n\t// 在consul中获取的是服务名称, consul上的服务如果动态更新，那么这里的负载均衡也是一样，会动态调用\n\ttarget := fmt.Sprintf("consul://%s:%d/%s?wait=14s", global.Conf.ConsulConfig.Host, global.Conf.ConsulConfig.Port, global.Conf.UserSrvConfig.Name)\n\tconn, err := grpc.Dial(\n\t\ttarget,\n\t\tgrpc.WithInsecure(),\n\t\tgrpc.WithDefaultServiceConfig(`{"loadBalancingPolicy": "round_robin"}`),\n\t)\n\tif err != nil {\n\t\t// Fatal是打印日志后退出程序\n\t\tzap.L().Fatal("grpc.Dial Error", zap.Error(err))\n\t}\n\n\tuserSrvClient := proto.NewUserClient(conn)\n\tglobal.UserSrvClient = userSrvClient\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);